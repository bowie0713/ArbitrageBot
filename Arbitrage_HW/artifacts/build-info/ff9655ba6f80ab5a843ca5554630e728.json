{
	"id": "ff9655ba6f80ab5a843ca5554630e728",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"Arbitrage_Swap.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n\n// set up Uniswap Router to \ninterface ISwapRouter {\n    struct ExactInputSingleParams {\n       address tokenIn;\n       address tokenOut;\n       uint24 fee;\n       address recipient;\n       uint256 deadline;\n       uint256 amountIn;\n       uint256 amountOutMinimum;\n       uint160 sqrtPriceLimitX96;\n    }\n    function exactInputSingle(ExactInputSingleParams calldata params)\n       external\n       payable\n       returns (uint256 amountOut);\n    struct ExactOutputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint256 fee;\n        uint256 deadline;\n        address recipient;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    function exactOutputSingle(ExactOutputSingleParams calldata params)\n        external\n        payable\n        returns (uint256 amountIn);\n}\n\ninterface ICurvePool {\n    function get_dy(int128 i, int128 j, uint256 dx) external view returns (uint256);\n    function exchange(int128 i, int128 j, uint256 dx, uint256 min_dy) external returns (uint256);\n}\n\n\ncontract Arbitrage{\n    using SafeERC20 for IERC20;\n\n    ISwapRouter public immutable uniswapRouter;\n    ICurvePool public immutable curvePool;\n\n    address constant SWAP_ROUTER_02 = 0xE592427A0AEce92De3Edee1F18E0157C05861564; // might need to change\n    address constant WETH = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;\n    address constant USDC = 0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48;\n\n    IERC20 private constant weth = IERC20(WETH);\n    IERC20 private constant usdc = IERC20(USDC);\n\n    constructor(address _uniswapRouter, address _curvePool){\n        uniswapRouter = ISwapRouter(_uniswapRouter);\n        curvePool = ICurvePool(_curvePool);\n    }\n    \n    function swapExactInputSingleHop(uint256 usdcamountin, uint256 minETHamountout) public {\n        usdc.transferFrom(msg.sender, address(this), usdcamountin);\n        usdc.approve(address(uniswapRouter), usdcamountin);\n\n        ISwapRouter.ExactInputSingleParams memory params = ISwapRouter.ExactInputSingleParams({\n            tokenIn: USDC,\n            tokenOut: WETH,\n            fee: 3000,\n            recipient: msg.sender,\n            deadline: block.timestamp,\n            amountIn: usdcamountin,\n            amountOutMinimum: minETHamountout,\n            sqrtPriceLimitX96: 0\n        });\n        uniswapRouter.exactInputSingle(params);\n    }\n    function buyEthOnCurve(uint256 usdcAmount, uint256 minEthAmount) public {\n        // Swap USDC for ETH, assuming USDC is 0 and ETH is 1\n        curvePool.exchange(0, 1, usdcAmount, minEthAmount);\n    }\n    function swapExactOutputSingleHop(uint256 ethamountout, uint256 maxUSDCamountin) public {\n        weth.transferFrom(msg.sender, address(this), maxUSDCamountin);\n        weth.approve(address(uniswapRouter), maxUSDCamountin);\n\n        ISwapRouter.ExactOutputSingleParams memory params = ISwapRouter.ExactOutputSingleParams({\n            tokenIn: USDC,\n            tokenOut: WETH,\n            fee: 3000,\n            recipient: msg.sender,\n            deadline: block.timestamp,\n            amountOut: ethamountout,\n            amountInMaximum: maxUSDCamountin,\n            sqrtPriceLimitX96: 0\n        });\n        uniswapRouter.exactOutputSingle(params);\n    }\n    function sellEthonCurve(uint256 ethAmount, uint256 minUsdcAmount) public {\n        weth.approve(address(curvePool), minUsdcAmount);\n        curvePool.exchange(1, 0, ethAmount, 0);\n        \n    }\n    function exchangeArbitrage(uint256 usdcAmount) external payable{\n        uint256 allowance = usdc.allowance(msg.sender, address(this));\n        uint256 balance = usdc.balanceOf(msg.sender);\n\n        require(allowance >= usdcAmount, \"Allowance too low\");\n        require(balance >= usdcAmount, \"Insufficient balance\");\n\n        usdc.transferFrom(msg.sender, address(this), usdcAmount);\n        uint256 uniswap_price = getAmountonUniswap(usdcAmount);\n        uint256 curve_price = getAmountonCurve(usdcAmount);\n\n        if (uniswap_price > curve_price){\n            // buy from Curve, sell on Uniswap if uniswap ETH is higher\n            buyEthOnCurve(usdcAmount, curve_price);\n            swapExactOutputSingleHop(usdcAmount, curve_price);\n            \n        }\n        else{\n            swapExactInputSingleHop(usdcAmount, uniswap_price);\n            sellEthonCurve(uniswap_price, usdcAmount);\n\n        }\n        \n        \n   }\n\n    function getAmountonUniswap(uint256 USDC_amount) public returns(uint256){\n        ISwapRouter.ExactInputSingleParams memory params =\n            ISwapRouter.ExactInputSingleParams({\n               tokenIn: USDC,\n               tokenOut: WETH,\n               fee: 3000,\n               recipient: msg.sender,\n               deadline: block.timestamp,\n               amountIn: USDC_amount,\n               amountOutMinimum: 1,\n               sqrtPriceLimitX96: 0\n            });\n        //emit DebugLog(\"Calling Uniswap\", USDC_amount);\n\n        uint256 amountOut = uniswapRouter.exactInputSingle(params);\n\n        //emit DebugLog(\"Amount Out\", amountOut);\n\n        return amountOut;\n   }\n   function getAmountonCurve(uint256 usdcamount) public view returns (uint256){\n        return curvePool.get_dy(0, 1, usdcamount); // same as above\n   }\n   \n\n\n}\n// Uniswap router address: 0xE592427A0AEce92De3Edee1F18E0157C05861564\n// Curve router address: 0xbEbc44782C7dB0a1A60Cb6fe97d0b483032FF1C7\n// Both are on Ethereum Mainnet\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC20Permit} from \"../extensions/IERC20Permit.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev An operation with an ERC20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data);\n        if (returndata.length != 0 && !abi.decode(returndata, (bool))) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a838085b2b5c3cd4f3571a4486b669c3ad52be030d61781db6239cb613f4b41e64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220a838085b2b5c3cd4f3571a4486b669c3ad52be030d61781db6239cb613f4b41e64736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA8 CODESIZE ADDMOD JUMPDEST 0x2B 0x5C EXTCODECOPY 0xD4 RETURN JUMPI BYTE PREVRANDAO DUP7 0xB6 PUSH10 0xC3AD52BE030D61781DB6 0x23 SWAP13 0xB6 SGT DELEGATECALL 0xB4 0x1E PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "751:5018:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220a838085b2b5c3cd4f3571a4486b669c3ad52be030d61781db6239cb613f4b41e64736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA8 CODESIZE ADDMOD JUMPDEST 0x2B 0x5C EXTCODECOPY 0xD4 RETURN JUMPI BYTE PREVRANDAO DUP7 0xB6 PUSH10 0xC3AD52BE030D61781DB6 0x23 SWAP13 0xB6 SGT DELEGATECALL 0xB4 0x1E PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "751:5018:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a838085b2b5c3cd4f3571a4486b669c3ad52be030d61781db6239cb613f4b41e64736f6c63430008140033",
									".code": [
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"Arbitrage_Swap.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220dc1ce83ea60e1b632553fae24c0f2ab7a9207d097799c8a0d5a58d7ccdb10b9164736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220dc1ce83ea60e1b632553fae24c0f2ab7a9207d097799c8a0d5a58d7ccdb10b9164736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDC SHR 0xE8 RETURNDATACOPY 0xA6 0xE SHL PUSH4 0x2553FAE2 0x4C 0xF 0x2A 0xB7 0xA9 KECCAK256 PUSH30 0x97799C8A0D5A58D7CCDB10B9164736F6C63430008140033000000000000 ",
							"sourceMap": "195:6066:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220dc1ce83ea60e1b632553fae24c0f2ab7a9207d097799c8a0d5a58d7ccdb10b9164736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDC SHR 0xE8 RETURNDATACOPY 0xA6 0xE SHL PUSH4 0x2553FAE2 0x4C 0xF 0x2A 0xB7 0xA9 KECCAK256 PUSH30 0x97799C8A0D5A58D7CCDB10B9164736F6C63430008140033000000000000 ",
							"sourceMap": "195:6066:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220dc1ce83ea60e1b632553fae24c0f2ab7a9207d097799c8a0d5a58d7ccdb10b9164736f6c63430008140033",
									".code": [
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"Arbitrage_Swap.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Arbitrage_Swap.sol": {
				"Arbitrage": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_uniswapRouter",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_curvePool",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "usdcAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "minEthAmount",
									"type": "uint256"
								}
							],
							"name": "buyEthOnCurve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "curvePool",
							"outputs": [
								{
									"internalType": "contract ICurvePool",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "usdcAmount",
									"type": "uint256"
								}
							],
							"name": "exchangeArbitrage",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "usdcamount",
									"type": "uint256"
								}
							],
							"name": "getAmountonCurve",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "USDC_amount",
									"type": "uint256"
								}
							],
							"name": "getAmountonUniswap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "ethAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "minUsdcAmount",
									"type": "uint256"
								}
							],
							"name": "sellEthonCurve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "usdcamountin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "minETHamountout",
									"type": "uint256"
								}
							],
							"name": "swapExactInputSingleHop",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "ethamountout",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "maxUSDCamountin",
									"type": "uint256"
								}
							],
							"name": "swapExactOutputSingleHop",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "uniswapRouter",
							"outputs": [
								{
									"internalType": "contract ISwapRouter",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Arbitrage_Swap.sol\":1244:5409  contract Arbitrage{... */\n  mstore(0x40, 0xc0)\n    /* \"Arbitrage_Swap.sol\":1743:1902  constructor(address _uniswapRouter, address _curvePool){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"Arbitrage_Swap.sol\":1836:1850  _uniswapRouter */\n  dup2\n    /* \"Arbitrage_Swap.sol\":1808:1851  uniswapRouter = ISwapRouter(_uniswapRouter) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"Arbitrage_Swap.sol\":1884:1894  _curvePool */\n  dup1\n    /* \"Arbitrage_Swap.sol\":1861:1895  curvePool = ICurvePool(_curvePool) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xa0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"Arbitrage_Swap.sol\":1743:1902  constructor(address _uniswapRouter, address _curvePool){... */\n  pop\n  pop\n    /* \"Arbitrage_Swap.sol\":1244:5409  contract Arbitrage{... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_20\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_22\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_23:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_25\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1352   */\ntag_3:\n    /* \"#utility.yul\":924:930   */\n  0x00\n    /* \"#utility.yul\":932:938   */\n  dup1\n    /* \"#utility.yul\":981:983   */\n  0x40\n    /* \"#utility.yul\":969:978   */\n  dup4\n    /* \"#utility.yul\":960:967   */\n  dup6\n    /* \"#utility.yul\":956:979   */\n  sub\n    /* \"#utility.yul\":952:984   */\n  slt\n    /* \"#utility.yul\":949:1068   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":987:1066   */\n  tag_28\n  tag_8\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":949:1068   */\ntag_27:\n    /* \"#utility.yul\":1107:1108   */\n  0x00\n    /* \"#utility.yul\":1132:1196   */\n  tag_29\n    /* \"#utility.yul\":1188:1195   */\n  dup6\n    /* \"#utility.yul\":1179:1185   */\n  dup3\n    /* \"#utility.yul\":1168:1177   */\n  dup7\n    /* \"#utility.yul\":1164:1186   */\n  add\n    /* \"#utility.yul\":1132:1196   */\n  tag_13\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":1122:1196   */\n  swap3\n  pop\n    /* \"#utility.yul\":1078:1206   */\n  pop\n    /* \"#utility.yul\":1245:1247   */\n  0x20\n    /* \"#utility.yul\":1271:1335   */\n  tag_30\n    /* \"#utility.yul\":1327:1334   */\n  dup6\n    /* \"#utility.yul\":1318:1324   */\n  dup3\n    /* \"#utility.yul\":1307:1316   */\n  dup7\n    /* \"#utility.yul\":1303:1325   */\n  add\n    /* \"#utility.yul\":1271:1335   */\n  tag_13\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":1261:1335   */\n  swap2\n  pop\n    /* \"#utility.yul\":1216:1345   */\n  pop\n    /* \"#utility.yul\":845:1352   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"Arbitrage_Swap.sol\":1244:5409  contract Arbitrage{... */\ntag_6:\n  mload(0x80)\n  mload(0xa0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xd1bfb39175379108a717b7ef0f82b6e824d30ad965caf5d88e1c0f8ae725e4a0\")\n  0x00\n  assignImmutable(\"0xc54c5452b104751fde6e79369f1e7835722fc73c62bb7947ed8a0846a81f48b5\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"Arbitrage_Swap.sol\":1244:5409  contract Arbitrage{... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x87b8d225\n      gt\n      tag_11\n      jumpi\n      dup1\n      0x87b8d225\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xc477b581\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xc9eb5e5a\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xd22cc067\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xe4eaab96\n      eq\n      tag_10\n      jumpi\n      jump(tag_1)\n    tag_11:\n      dup1\n      0x04907bbb\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x1540e747\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x218751b2\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x735de9f7\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"Arbitrage_Swap.sol\":2564:2765  function buyEthOnCurve(uint256 usdcAmount, uint256 minEthAmount) public {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_12:\n      pop\n      tag_13\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      tag_16\n      jump\t// in\n    tag_13:\n      stop\n        /* \"Arbitrage_Swap.sol\":5252:5401  function getAmountonCurve(uint256 usdcamount) public view returns (uint256){... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      pop\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Arbitrage_Swap.sol\":1349:1386  ICurvePool public immutable curvePool */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      pop\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Arbitrage_Swap.sol\":1301:1343  ISwapRouter public immutable uniswapRouter */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      pop\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Arbitrage_Swap.sol\":3432:3626  function sellEthonCurve(uint256 ethAmount, uint256 minUsdcAmount) public {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      pop\n      tag_35\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_36\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_36:\n      tag_37\n      jump\t// in\n    tag_35:\n      stop\n        /* \"Arbitrage_Swap.sol\":4565:5248  function getAmountonUniswap(uint256 USDC_amount) public returns(uint256){... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      pop\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_40:\n      tag_41\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Arbitrage_Swap.sol\":2770:3427  function swapExactOutputSingleHop(uint256 ethamountout, uint256 maxUSDCamountin) public {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_43\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      pop\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_45:\n      tag_46\n      jump\t// in\n    tag_44:\n      stop\n        /* \"Arbitrage_Swap.sol\":3631:4559  function exchangeArbitrage(uint256 usdcAmount) external payable{... */\n    tag_9:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_48:\n      tag_49\n      jump\t// in\n    tag_47:\n      stop\n        /* \"Arbitrage_Swap.sol\":1912:2559  function swapExactInputSingleHop(uint256 usdcamountin, uint256 minETHamountout) public {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      pop\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_52:\n      tag_53\n      jump\t// in\n    tag_51:\n      stop\n        /* \"Arbitrage_Swap.sol\":2564:2765  function buyEthOnCurve(uint256 usdcAmount, uint256 minEthAmount) public {... */\n    tag_16:\n        /* \"Arbitrage_Swap.sol\":2708:2717  curvePool */\n      immutable(\"0xd1bfb39175379108a717b7ef0f82b6e824d30ad965caf5d88e1c0f8ae725e4a0\")\n        /* \"Arbitrage_Swap.sol\":2708:2726  curvePool.exchange */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x3df02124\n        /* \"Arbitrage_Swap.sol\":2727:2728  0 */\n      0x00\n        /* \"Arbitrage_Swap.sol\":2730:2731  1 */\n      0x01\n        /* \"Arbitrage_Swap.sol\":2733:2743  usdcAmount */\n      dup6\n        /* \"Arbitrage_Swap.sol\":2745:2757  minEthAmount */\n      dup6\n        /* \"Arbitrage_Swap.sol\":2708:2758  curvePool.exchange(0, 1, usdcAmount, minEthAmount) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_58\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_58:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      pop\n        /* \"Arbitrage_Swap.sol\":2564:2765  function buyEthOnCurve(uint256 usdcAmount, uint256 minEthAmount) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Arbitrage_Swap.sol\":5252:5401  function getAmountonCurve(uint256 usdcamount) public view returns (uint256){... */\n    tag_21:\n        /* \"Arbitrage_Swap.sol\":5319:5326  uint256 */\n      0x00\n        /* \"Arbitrage_Swap.sol\":5344:5353  curvePool */\n      immutable(\"0xd1bfb39175379108a717b7ef0f82b6e824d30ad965caf5d88e1c0f8ae725e4a0\")\n        /* \"Arbitrage_Swap.sol\":5344:5360  curvePool.get_dy */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x5e0d443f\n        /* \"Arbitrage_Swap.sol\":5361:5362  0 */\n      0x00\n        /* \"Arbitrage_Swap.sol\":5364:5365  1 */\n      0x01\n        /* \"Arbitrage_Swap.sol\":5367:5377  usdcamount */\n      dup6\n        /* \"Arbitrage_Swap.sol\":5344:5378  curvePool.get_dy(0, 1, usdcamount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_62\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_65\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_65:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_66\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_66:\n        /* \"Arbitrage_Swap.sol\":5337:5378  return curvePool.get_dy(0, 1, usdcamount) */\n      swap1\n      pop\n        /* \"Arbitrage_Swap.sol\":5252:5401  function getAmountonCurve(uint256 usdcamount) public view returns (uint256){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Arbitrage_Swap.sol\":1349:1386  ICurvePool public immutable curvePool */\n    tag_26:\n      immutable(\"0xd1bfb39175379108a717b7ef0f82b6e824d30ad965caf5d88e1c0f8ae725e4a0\")\n      dup2\n      jump\t// out\n        /* \"Arbitrage_Swap.sol\":1301:1343  ISwapRouter public immutable uniswapRouter */\n    tag_31:\n      immutable(\"0xc54c5452b104751fde6e79369f1e7835722fc73c62bb7947ed8a0846a81f48b5\")\n      dup2\n      jump\t// out\n        /* \"Arbitrage_Swap.sol\":3432:3626  function sellEthonCurve(uint256 ethAmount, uint256 minUsdcAmount) public {... */\n    tag_37:\n        /* \"Arbitrage_Swap.sol\":1523:1565  0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2 */\n      0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\n        /* \"Arbitrage_Swap.sol\":3515:3527  weth.approve */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x095ea7b3\n        /* \"Arbitrage_Swap.sol\":3536:3545  curvePool */\n      immutable(\"0xd1bfb39175379108a717b7ef0f82b6e824d30ad965caf5d88e1c0f8ae725e4a0\")\n        /* \"Arbitrage_Swap.sol\":3548:3561  minUsdcAmount */\n      dup4\n        /* \"Arbitrage_Swap.sol\":3515:3562  weth.approve(address(curvePool), minUsdcAmount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_68\n      swap3\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_71\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_71:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      pop\n        /* \"Arbitrage_Swap.sol\":3572:3581  curvePool */\n      immutable(\"0xd1bfb39175379108a717b7ef0f82b6e824d30ad965caf5d88e1c0f8ae725e4a0\")\n        /* \"Arbitrage_Swap.sol\":3572:3590  curvePool.exchange */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x3df02124\n        /* \"Arbitrage_Swap.sol\":3591:3592  1 */\n      0x01\n        /* \"Arbitrage_Swap.sol\":3594:3595  0 */\n      0x00\n        /* \"Arbitrage_Swap.sol\":3597:3606  ethAmount */\n      dup6\n        /* \"Arbitrage_Swap.sol\":3608:3609  0 */\n      0x00\n        /* \"Arbitrage_Swap.sol\":3572:3610  curvePool.exchange(1, 0, ethAmount, 0) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_74\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_77\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_77:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_78\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_78:\n      pop\n        /* \"Arbitrage_Swap.sol\":3432:3626  function sellEthonCurve(uint256 ethAmount, uint256 minUsdcAmount) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Arbitrage_Swap.sol\":4565:5248  function getAmountonUniswap(uint256 USDC_amount) public returns(uint256){... */\n    tag_41:\n        /* \"Arbitrage_Swap.sol\":4629:4636  uint256 */\n      0x00\n        /* \"Arbitrage_Swap.sol\":4647:4695  ISwapRouter.ExactInputSingleParams memory params */\n      dup1\n        /* \"Arbitrage_Swap.sol\":4710:5038  ISwapRouter.ExactInputSingleParams({... */\n      mload(0x40)\n      dup1\n      0x0100\n      add\n      0x40\n      mstore\n      dup1\n        /* \"Arbitrage_Swap.sol\":1595:1637  0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48 */\n      0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\n        /* \"Arbitrage_Swap.sol\":4710:5038  ISwapRouter.ExactInputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Arbitrage_Swap.sol\":1523:1565  0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2 */\n      0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\n        /* \"Arbitrage_Swap.sol\":4710:5038  ISwapRouter.ExactInputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Arbitrage_Swap.sol\":4828:4832  3000 */\n      0x0bb8\n        /* \"Arbitrage_Swap.sol\":4710:5038  ISwapRouter.ExactInputSingleParams({... */\n      0xffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Arbitrage_Swap.sol\":4860:4870  msg.sender */\n      caller\n        /* \"Arbitrage_Swap.sol\":4710:5038  ISwapRouter.ExactInputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Arbitrage_Swap.sol\":4897:4912  block.timestamp */\n      timestamp\n        /* \"Arbitrage_Swap.sol\":4710:5038  ISwapRouter.ExactInputSingleParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Arbitrage_Swap.sol\":4939:4950  USDC_amount */\n      dup5\n        /* \"Arbitrage_Swap.sol\":4710:5038  ISwapRouter.ExactInputSingleParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Arbitrage_Swap.sol\":4985:4986  1 */\n      0x01\n        /* \"Arbitrage_Swap.sol\":4710:5038  ISwapRouter.ExactInputSingleParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Arbitrage_Swap.sol\":5022:5023  0 */\n      0x00\n        /* \"Arbitrage_Swap.sol\":4710:5038  ISwapRouter.ExactInputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n        /* \"Arbitrage_Swap.sol\":4647:5038  ISwapRouter.ExactInputSingleParams memory params =... */\n      swap1\n      pop\n        /* \"Arbitrage_Swap.sol\":5106:5123  uint256 amountOut */\n      0x00\n        /* \"Arbitrage_Swap.sol\":5126:5139  uniswapRouter */\n      immutable(\"0xc54c5452b104751fde6e79369f1e7835722fc73c62bb7947ed8a0846a81f48b5\")\n        /* \"Arbitrage_Swap.sol\":5126:5156  uniswapRouter.exactInputSingle */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x414bf389\n        /* \"Arbitrage_Swap.sol\":5157:5163  params */\n      dup4\n        /* \"Arbitrage_Swap.sol\":5126:5164  uniswapRouter.exactInputSingle(params) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_80\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_83\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_83:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_84:\n        /* \"Arbitrage_Swap.sol\":5106:5164  uint256 amountOut = uniswapRouter.exactInputSingle(params) */\n      swap1\n      pop\n        /* \"Arbitrage_Swap.sol\":5233:5242  amountOut */\n      dup1\n        /* \"Arbitrage_Swap.sol\":5226:5242  return amountOut */\n      swap3\n      pop\n      pop\n      pop\n        /* \"Arbitrage_Swap.sol\":4565:5248  function getAmountonUniswap(uint256 USDC_amount) public returns(uint256){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Arbitrage_Swap.sol\":2770:3427  function swapExactOutputSingleHop(uint256 ethamountout, uint256 maxUSDCamountin) public {... */\n    tag_46:\n        /* \"Arbitrage_Swap.sol\":1523:1565  0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2 */\n      0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\n        /* \"Arbitrage_Swap.sol\":2868:2885  weth.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"Arbitrage_Swap.sol\":2886:2896  msg.sender */\n      caller\n        /* \"Arbitrage_Swap.sol\":2906:2910  this */\n      address\n        /* \"Arbitrage_Swap.sol\":2913:2928  maxUSDCamountin */\n      dup5\n        /* \"Arbitrage_Swap.sol\":2868:2929  weth.transferFrom(msg.sender, address(this), maxUSDCamountin) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_86\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_89\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_89:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_90\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_90:\n      pop\n        /* \"Arbitrage_Swap.sol\":1523:1565  0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2 */\n      0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\n        /* \"Arbitrage_Swap.sol\":2939:2951  weth.approve */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x095ea7b3\n        /* \"Arbitrage_Swap.sol\":2960:2973  uniswapRouter */\n      immutable(\"0xc54c5452b104751fde6e79369f1e7835722fc73c62bb7947ed8a0846a81f48b5\")\n        /* \"Arbitrage_Swap.sol\":2976:2991  maxUSDCamountin */\n      dup4\n        /* \"Arbitrage_Swap.sol\":2939:2992  weth.approve(address(uniswapRouter), maxUSDCamountin) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_91\n      swap3\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_91:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_93\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_93:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_94\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_94:\n      pop\n        /* \"Arbitrage_Swap.sol\":3003:3052  ISwapRouter.ExactOutputSingleParams memory params */\n      0x00\n        /* \"Arbitrage_Swap.sol\":3055:3371  ISwapRouter.ExactOutputSingleParams({... */\n      mload(0x40)\n      dup1\n      0x0100\n      add\n      0x40\n      mstore\n      dup1\n        /* \"Arbitrage_Swap.sol\":1595:1637  0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48 */\n      0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\n        /* \"Arbitrage_Swap.sol\":3055:3371  ISwapRouter.ExactOutputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Arbitrage_Swap.sol\":1523:1565  0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2 */\n      0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\n        /* \"Arbitrage_Swap.sol\":3055:3371  ISwapRouter.ExactOutputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Arbitrage_Swap.sol\":3165:3169  3000 */\n      0x0bb8\n        /* \"Arbitrage_Swap.sol\":3055:3371  ISwapRouter.ExactOutputSingleParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Arbitrage_Swap.sol\":3228:3243  block.timestamp */\n      timestamp\n        /* \"Arbitrage_Swap.sol\":3055:3371  ISwapRouter.ExactOutputSingleParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Arbitrage_Swap.sol\":3194:3204  msg.sender */\n      caller\n        /* \"Arbitrage_Swap.sol\":3055:3371  ISwapRouter.ExactOutputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Arbitrage_Swap.sol\":3268:3280  ethamountout */\n      dup5\n        /* \"Arbitrage_Swap.sol\":3055:3371  ISwapRouter.ExactOutputSingleParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Arbitrage_Swap.sol\":3311:3326  maxUSDCamountin */\n      dup4\n        /* \"Arbitrage_Swap.sol\":3055:3371  ISwapRouter.ExactOutputSingleParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Arbitrage_Swap.sol\":3359:3360  0 */\n      0x00\n        /* \"Arbitrage_Swap.sol\":3055:3371  ISwapRouter.ExactOutputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n        /* \"Arbitrage_Swap.sol\":3003:3371  ISwapRouter.ExactOutputSingleParams memory params = ISwapRouter.ExactOutputSingleParams({... */\n      swap1\n      pop\n        /* \"Arbitrage_Swap.sol\":3381:3394  uniswapRouter */\n      immutable(\"0xc54c5452b104751fde6e79369f1e7835722fc73c62bb7947ed8a0846a81f48b5\")\n        /* \"Arbitrage_Swap.sol\":3381:3412  uniswapRouter.exactOutputSingle */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x26a966c4\n        /* \"Arbitrage_Swap.sol\":3413:3419  params */\n      dup3\n        /* \"Arbitrage_Swap.sol\":3381:3420  uniswapRouter.exactOutputSingle(params) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_95\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_95:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_98\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_98:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_99\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_99:\n      pop\n        /* \"Arbitrage_Swap.sol\":2858:3427  {... */\n      pop\n        /* \"Arbitrage_Swap.sol\":2770:3427  function swapExactOutputSingleHop(uint256 ethamountout, uint256 maxUSDCamountin) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Arbitrage_Swap.sol\":3631:4559  function exchangeArbitrage(uint256 usdcAmount) external payable{... */\n    tag_49:\n        /* \"Arbitrage_Swap.sol\":3704:3721  uint256 allowance */\n      0x00\n        /* \"Arbitrage_Swap.sol\":1595:1637  0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48 */\n      0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\n        /* \"Arbitrage_Swap.sol\":3724:3738  usdc.allowance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdd62ed3e\n        /* \"Arbitrage_Swap.sol\":3739:3749  msg.sender */\n      caller\n        /* \"Arbitrage_Swap.sol\":3759:3763  this */\n      address\n        /* \"Arbitrage_Swap.sol\":3724:3765  usdc.allowance(msg.sender, address(this)) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_101\n      swap3\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_101:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_104\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_104:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_105\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_105:\n        /* \"Arbitrage_Swap.sol\":3704:3765  uint256 allowance = usdc.allowance(msg.sender, address(this)) */\n      swap1\n      pop\n        /* \"Arbitrage_Swap.sol\":3775:3790  uint256 balance */\n      0x00\n        /* \"Arbitrage_Swap.sol\":1595:1637  0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48 */\n      0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\n        /* \"Arbitrage_Swap.sol\":3793:3807  usdc.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"Arbitrage_Swap.sol\":3808:3818  msg.sender */\n      caller\n        /* \"Arbitrage_Swap.sol\":3793:3819  usdc.balanceOf(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_106\n      swap2\n      swap1\n      tag_107\n      jump\t// in\n    tag_106:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_109\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_109:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_110\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_110:\n        /* \"Arbitrage_Swap.sol\":3775:3819  uint256 balance = usdc.balanceOf(msg.sender) */\n      swap1\n      pop\n        /* \"Arbitrage_Swap.sol\":3851:3861  usdcAmount */\n      dup3\n        /* \"Arbitrage_Swap.sol\":3838:3847  allowance */\n      dup3\n        /* \"Arbitrage_Swap.sol\":3838:3861  allowance >= usdcAmount */\n      lt\n      iszero\n        /* \"Arbitrage_Swap.sol\":3830:3883  require(allowance >= usdcAmount, \"Allowance too low\") */\n      tag_111\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_112\n      swap1\n      tag_113\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_111:\n        /* \"Arbitrage_Swap.sol\":3912:3922  usdcAmount */\n      dup3\n        /* \"Arbitrage_Swap.sol\":3901:3908  balance */\n      dup2\n        /* \"Arbitrage_Swap.sol\":3901:3922  balance >= usdcAmount */\n      lt\n      iszero\n        /* \"Arbitrage_Swap.sol\":3893:3947  require(balance >= usdcAmount, \"Insufficient balance\") */\n      tag_114\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_115\n      swap1\n      tag_116\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_114:\n        /* \"Arbitrage_Swap.sol\":1595:1637  0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48 */\n      0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\n        /* \"Arbitrage_Swap.sol\":3958:3975  usdc.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"Arbitrage_Swap.sol\":3976:3986  msg.sender */\n      caller\n        /* \"Arbitrage_Swap.sol\":3996:4000  this */\n      address\n        /* \"Arbitrage_Swap.sol\":4003:4013  usdcAmount */\n      dup7\n        /* \"Arbitrage_Swap.sol\":3958:4014  usdc.transferFrom(msg.sender, address(this), usdcAmount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_117\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_117:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_119\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_119:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_120\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_120:\n      pop\n        /* \"Arbitrage_Swap.sol\":4024:4045  uint256 uniswap_price */\n      0x00\n        /* \"Arbitrage_Swap.sol\":4048:4078  getAmountonUniswap(usdcAmount) */\n      tag_121\n        /* \"Arbitrage_Swap.sol\":4067:4077  usdcAmount */\n      dup5\n        /* \"Arbitrage_Swap.sol\":4048:4066  getAmountonUniswap */\n      tag_41\n        /* \"Arbitrage_Swap.sol\":4048:4078  getAmountonUniswap(usdcAmount) */\n      jump\t// in\n    tag_121:\n        /* \"Arbitrage_Swap.sol\":4024:4078  uint256 uniswap_price = getAmountonUniswap(usdcAmount) */\n      swap1\n      pop\n        /* \"Arbitrage_Swap.sol\":4088:4107  uint256 curve_price */\n      0x00\n        /* \"Arbitrage_Swap.sol\":4110:4138  getAmountonCurve(usdcAmount) */\n      tag_122\n        /* \"Arbitrage_Swap.sol\":4127:4137  usdcAmount */\n      dup6\n        /* \"Arbitrage_Swap.sol\":4110:4126  getAmountonCurve */\n      tag_21\n        /* \"Arbitrage_Swap.sol\":4110:4138  getAmountonCurve(usdcAmount) */\n      jump\t// in\n    tag_122:\n        /* \"Arbitrage_Swap.sol\":4088:4138  uint256 curve_price = getAmountonCurve(usdcAmount) */\n      swap1\n      pop\n        /* \"Arbitrage_Swap.sol\":4169:4180  curve_price */\n      dup1\n        /* \"Arbitrage_Swap.sol\":4153:4166  uniswap_price */\n      dup3\n        /* \"Arbitrage_Swap.sol\":4153:4180  uniswap_price > curve_price */\n      gt\n        /* \"Arbitrage_Swap.sol\":4149:4536  if (uniswap_price > curve_price){... */\n      iszero\n      tag_123\n      jumpi\n        /* \"Arbitrage_Swap.sol\":4267:4305  buyEthOnCurve(usdcAmount, curve_price) */\n      tag_124\n        /* \"Arbitrage_Swap.sol\":4281:4291  usdcAmount */\n      dup6\n        /* \"Arbitrage_Swap.sol\":4293:4304  curve_price */\n      dup3\n        /* \"Arbitrage_Swap.sol\":4267:4280  buyEthOnCurve */\n      tag_16\n        /* \"Arbitrage_Swap.sol\":4267:4305  buyEthOnCurve(usdcAmount, curve_price) */\n      jump\t// in\n    tag_124:\n        /* \"Arbitrage_Swap.sol\":4319:4368  swapExactOutputSingleHop(usdcAmount, curve_price) */\n      tag_125\n        /* \"Arbitrage_Swap.sol\":4344:4354  usdcAmount */\n      dup6\n        /* \"Arbitrage_Swap.sol\":4356:4367  curve_price */\n      dup3\n        /* \"Arbitrage_Swap.sol\":4319:4343  swapExactOutputSingleHop */\n      tag_46\n        /* \"Arbitrage_Swap.sol\":4319:4368  swapExactOutputSingleHop(usdcAmount, curve_price) */\n      jump\t// in\n    tag_125:\n        /* \"Arbitrage_Swap.sol\":4149:4536  if (uniswap_price > curve_price){... */\n      jump(tag_126)\n    tag_123:\n        /* \"Arbitrage_Swap.sol\":4419:4469  swapExactInputSingleHop(usdcAmount, uniswap_price) */\n      tag_127\n        /* \"Arbitrage_Swap.sol\":4443:4453  usdcAmount */\n      dup6\n        /* \"Arbitrage_Swap.sol\":4455:4468  uniswap_price */\n      dup4\n        /* \"Arbitrage_Swap.sol\":4419:4442  swapExactInputSingleHop */\n      tag_53\n        /* \"Arbitrage_Swap.sol\":4419:4469  swapExactInputSingleHop(usdcAmount, uniswap_price) */\n      jump\t// in\n    tag_127:\n        /* \"Arbitrage_Swap.sol\":4483:4524  sellEthonCurve(uniswap_price, usdcAmount) */\n      tag_128\n        /* \"Arbitrage_Swap.sol\":4498:4511  uniswap_price */\n      dup3\n        /* \"Arbitrage_Swap.sol\":4513:4523  usdcAmount */\n      dup7\n        /* \"Arbitrage_Swap.sol\":4483:4497  sellEthonCurve */\n      tag_37\n        /* \"Arbitrage_Swap.sol\":4483:4524  sellEthonCurve(uniswap_price, usdcAmount) */\n      jump\t// in\n    tag_128:\n        /* \"Arbitrage_Swap.sol\":4149:4536  if (uniswap_price > curve_price){... */\n    tag_126:\n        /* \"Arbitrage_Swap.sol\":3694:4559  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"Arbitrage_Swap.sol\":3631:4559  function exchangeArbitrage(uint256 usdcAmount) external payable{... */\n      pop\n      jump\t// out\n        /* \"Arbitrage_Swap.sol\":1912:2559  function swapExactInputSingleHop(uint256 usdcamountin, uint256 minETHamountout) public {... */\n    tag_53:\n        /* \"Arbitrage_Swap.sol\":1595:1637  0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48 */\n      0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\n        /* \"Arbitrage_Swap.sol\":2009:2026  usdc.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"Arbitrage_Swap.sol\":2027:2037  msg.sender */\n      caller\n        /* \"Arbitrage_Swap.sol\":2047:2051  this */\n      address\n        /* \"Arbitrage_Swap.sol\":2054:2066  usdcamountin */\n      dup6\n        /* \"Arbitrage_Swap.sol\":2009:2067  usdc.transferFrom(msg.sender, address(this), usdcamountin) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_130\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_130:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_132\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_132:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_133\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_133:\n      pop\n        /* \"Arbitrage_Swap.sol\":1595:1637  0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48 */\n      0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\n        /* \"Arbitrage_Swap.sol\":2077:2089  usdc.approve */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x095ea7b3\n        /* \"Arbitrage_Swap.sol\":2098:2111  uniswapRouter */\n      immutable(\"0xc54c5452b104751fde6e79369f1e7835722fc73c62bb7947ed8a0846a81f48b5\")\n        /* \"Arbitrage_Swap.sol\":2114:2126  usdcamountin */\n      dup5\n        /* \"Arbitrage_Swap.sol\":2077:2127  usdc.approve(address(uniswapRouter), usdcamountin) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_134\n      swap3\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_134:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_136\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_136:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_137\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_137:\n      pop\n        /* \"Arbitrage_Swap.sol\":2138:2186  ISwapRouter.ExactInputSingleParams memory params */\n      0x00\n        /* \"Arbitrage_Swap.sol\":2189:2504  ISwapRouter.ExactInputSingleParams({... */\n      mload(0x40)\n      dup1\n      0x0100\n      add\n      0x40\n      mstore\n      dup1\n        /* \"Arbitrage_Swap.sol\":1595:1637  0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48 */\n      0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\n        /* \"Arbitrage_Swap.sol\":2189:2504  ISwapRouter.ExactInputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Arbitrage_Swap.sol\":1523:1565  0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2 */\n      0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\n        /* \"Arbitrage_Swap.sol\":2189:2504  ISwapRouter.ExactInputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Arbitrage_Swap.sol\":2298:2302  3000 */\n      0x0bb8\n        /* \"Arbitrage_Swap.sol\":2189:2504  ISwapRouter.ExactInputSingleParams({... */\n      0xffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Arbitrage_Swap.sol\":2327:2337  msg.sender */\n      caller\n        /* \"Arbitrage_Swap.sol\":2189:2504  ISwapRouter.ExactInputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Arbitrage_Swap.sol\":2361:2376  block.timestamp */\n      timestamp\n        /* \"Arbitrage_Swap.sol\":2189:2504  ISwapRouter.ExactInputSingleParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Arbitrage_Swap.sol\":2400:2412  usdcamountin */\n      dup5\n        /* \"Arbitrage_Swap.sol\":2189:2504  ISwapRouter.ExactInputSingleParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Arbitrage_Swap.sol\":2444:2459  minETHamountout */\n      dup4\n        /* \"Arbitrage_Swap.sol\":2189:2504  ISwapRouter.ExactInputSingleParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Arbitrage_Swap.sol\":2492:2493  0 */\n      0x00\n        /* \"Arbitrage_Swap.sol\":2189:2504  ISwapRouter.ExactInputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n        /* \"Arbitrage_Swap.sol\":2138:2504  ISwapRouter.ExactInputSingleParams memory params = ISwapRouter.ExactInputSingleParams({... */\n      swap1\n      pop\n        /* \"Arbitrage_Swap.sol\":2514:2527  uniswapRouter */\n      immutable(\"0xc54c5452b104751fde6e79369f1e7835722fc73c62bb7947ed8a0846a81f48b5\")\n        /* \"Arbitrage_Swap.sol\":2514:2544  uniswapRouter.exactInputSingle */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x414bf389\n        /* \"Arbitrage_Swap.sol\":2545:2551  params */\n      dup3\n        /* \"Arbitrage_Swap.sol\":2514:2552  uniswapRouter.exactInputSingle(params) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_138\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_138:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_140\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_140:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_141\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_141:\n      pop\n        /* \"Arbitrage_Swap.sol\":1999:2559  {... */\n      pop\n        /* \"Arbitrage_Swap.sol\":1912:2559  function swapExactInputSingleHop(uint256 usdcamountin, uint256 minETHamountout) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_143:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_145:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_146:\n        /* \"#utility.yul\":490:514   */\n      tag_190\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_145\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_191\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_191:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_147:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_193\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_146\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1164   */\n    tag_15:\n        /* \"#utility.yul\":758:764   */\n      0x00\n        /* \"#utility.yul\":766:772   */\n      dup1\n        /* \"#utility.yul\":815:817   */\n      0x40\n        /* \"#utility.yul\":803:812   */\n      dup4\n        /* \"#utility.yul\":794:801   */\n      dup6\n        /* \"#utility.yul\":790:813   */\n      sub\n        /* \"#utility.yul\":786:818   */\n      slt\n        /* \"#utility.yul\":783:902   */\n      iszero\n      tag_195\n      jumpi\n        /* \"#utility.yul\":821:900   */\n      tag_196\n      tag_143\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":783:902   */\n    tag_195:\n        /* \"#utility.yul\":941:942   */\n      0x00\n        /* \"#utility.yul\":966:1019   */\n      tag_197\n        /* \"#utility.yul\":1011:1018   */\n      dup6\n        /* \"#utility.yul\":1002:1008   */\n      dup3\n        /* \"#utility.yul\":991:1000   */\n      dup7\n        /* \"#utility.yul\":987:1009   */\n      add\n        /* \"#utility.yul\":966:1019   */\n      tag_147\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":956:1019   */\n      swap3\n      pop\n        /* \"#utility.yul\":912:1029   */\n      pop\n        /* \"#utility.yul\":1068:1070   */\n      0x20\n        /* \"#utility.yul\":1094:1147   */\n      tag_198\n        /* \"#utility.yul\":1139:1146   */\n      dup6\n        /* \"#utility.yul\":1130:1136   */\n      dup3\n        /* \"#utility.yul\":1119:1128   */\n      dup7\n        /* \"#utility.yul\":1115:1137   */\n      add\n        /* \"#utility.yul\":1094:1147   */\n      tag_147\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":1084:1147   */\n      swap2\n      pop\n        /* \"#utility.yul\":1039:1157   */\n      pop\n        /* \"#utility.yul\":690:1164   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1170:1499   */\n    tag_20:\n        /* \"#utility.yul\":1229:1235   */\n      0x00\n        /* \"#utility.yul\":1278:1280   */\n      0x20\n        /* \"#utility.yul\":1266:1275   */\n      dup3\n        /* \"#utility.yul\":1257:1264   */\n      dup5\n        /* \"#utility.yul\":1253:1276   */\n      sub\n        /* \"#utility.yul\":1249:1281   */\n      slt\n        /* \"#utility.yul\":1246:1365   */\n      iszero\n      tag_200\n      jumpi\n        /* \"#utility.yul\":1284:1363   */\n      tag_201\n      tag_143\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":1246:1365   */\n    tag_200:\n        /* \"#utility.yul\":1404:1405   */\n      0x00\n        /* \"#utility.yul\":1429:1482   */\n      tag_202\n        /* \"#utility.yul\":1474:1481   */\n      dup5\n        /* \"#utility.yul\":1465:1471   */\n      dup3\n        /* \"#utility.yul\":1454:1463   */\n      dup6\n        /* \"#utility.yul\":1450:1472   */\n      add\n        /* \"#utility.yul\":1429:1482   */\n      tag_147\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":1419:1482   */\n      swap2\n      pop\n        /* \"#utility.yul\":1375:1492   */\n      pop\n        /* \"#utility.yul\":1170:1499   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1505:1623   */\n    tag_148:\n        /* \"#utility.yul\":1592:1616   */\n      tag_204\n        /* \"#utility.yul\":1610:1615   */\n      dup2\n        /* \"#utility.yul\":1592:1616   */\n      tag_145\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":1587:1590   */\n      dup3\n        /* \"#utility.yul\":1580:1617   */\n      mstore\n        /* \"#utility.yul\":1505:1623   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1629:1851   */\n    tag_23:\n        /* \"#utility.yul\":1722:1726   */\n      0x00\n        /* \"#utility.yul\":1760:1762   */\n      0x20\n        /* \"#utility.yul\":1749:1758   */\n      dup3\n        /* \"#utility.yul\":1745:1763   */\n      add\n        /* \"#utility.yul\":1737:1763   */\n      swap1\n      pop\n        /* \"#utility.yul\":1773:1844   */\n      tag_206\n        /* \"#utility.yul\":1841:1842   */\n      0x00\n        /* \"#utility.yul\":1830:1839   */\n      dup4\n        /* \"#utility.yul\":1826:1843   */\n      add\n        /* \"#utility.yul\":1817:1823   */\n      dup5\n        /* \"#utility.yul\":1773:1844   */\n      tag_148\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":1629:1851   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1857:1983   */\n    tag_149:\n        /* \"#utility.yul\":1894:1901   */\n      0x00\n        /* \"#utility.yul\":1934:1976   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1927:1932   */\n      dup3\n        /* \"#utility.yul\":1923:1977   */\n      and\n        /* \"#utility.yul\":1912:1977   */\n      swap1\n      pop\n        /* \"#utility.yul\":1857:1983   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1989:2049   */\n    tag_150:\n        /* \"#utility.yul\":2017:2020   */\n      0x00\n        /* \"#utility.yul\":2038:2043   */\n      dup2\n        /* \"#utility.yul\":2031:2043   */\n      swap1\n      pop\n        /* \"#utility.yul\":1989:2049   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2055:2197   */\n    tag_151:\n        /* \"#utility.yul\":2105:2114   */\n      0x00\n        /* \"#utility.yul\":2138:2191   */\n      tag_210\n        /* \"#utility.yul\":2156:2190   */\n      tag_211\n        /* \"#utility.yul\":2165:2189   */\n      tag_212\n        /* \"#utility.yul\":2183:2188   */\n      dup5\n        /* \"#utility.yul\":2165:2189   */\n      tag_149\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":2156:2190   */\n      tag_150\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":2138:2191   */\n      tag_149\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":2125:2191   */\n      swap1\n      pop\n        /* \"#utility.yul\":2055:2197   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2203:2329   */\n    tag_152:\n        /* \"#utility.yul\":2253:2262   */\n      0x00\n        /* \"#utility.yul\":2286:2323   */\n      tag_214\n        /* \"#utility.yul\":2317:2322   */\n      dup3\n        /* \"#utility.yul\":2286:2323   */\n      tag_151\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":2273:2323   */\n      swap1\n      pop\n        /* \"#utility.yul\":2203:2329   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2335:2479   */\n    tag_153:\n        /* \"#utility.yul\":2403:2412   */\n      0x00\n        /* \"#utility.yul\":2436:2473   */\n      tag_216\n        /* \"#utility.yul\":2467:2472   */\n      dup3\n        /* \"#utility.yul\":2436:2473   */\n      tag_152\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":2423:2473   */\n      swap1\n      pop\n        /* \"#utility.yul\":2335:2479   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2485:2652   */\n    tag_154:\n        /* \"#utility.yul\":2590:2645   */\n      tag_218\n        /* \"#utility.yul\":2639:2644   */\n      dup2\n        /* \"#utility.yul\":2590:2645   */\n      tag_153\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":2585:2588   */\n      dup3\n        /* \"#utility.yul\":2578:2646   */\n      mstore\n        /* \"#utility.yul\":2485:2652   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2658:2916   */\n    tag_28:\n        /* \"#utility.yul\":2769:2773   */\n      0x00\n        /* \"#utility.yul\":2807:2809   */\n      0x20\n        /* \"#utility.yul\":2796:2805   */\n      dup3\n        /* \"#utility.yul\":2792:2810   */\n      add\n        /* \"#utility.yul\":2784:2810   */\n      swap1\n      pop\n        /* \"#utility.yul\":2820:2909   */\n      tag_220\n        /* \"#utility.yul\":2906:2907   */\n      0x00\n        /* \"#utility.yul\":2895:2904   */\n      dup4\n        /* \"#utility.yul\":2891:2908   */\n      add\n        /* \"#utility.yul\":2882:2888   */\n      dup5\n        /* \"#utility.yul\":2820:2909   */\n      tag_154\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":2658:2916   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2922:3067   */\n    tag_155:\n        /* \"#utility.yul\":2991:3000   */\n      0x00\n        /* \"#utility.yul\":3024:3061   */\n      tag_222\n        /* \"#utility.yul\":3055:3060   */\n      dup3\n        /* \"#utility.yul\":3024:3061   */\n      tag_152\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":3011:3061   */\n      swap1\n      pop\n        /* \"#utility.yul\":2922:3067   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3073:3242   */\n    tag_156:\n        /* \"#utility.yul\":3179:3235   */\n      tag_224\n        /* \"#utility.yul\":3229:3234   */\n      dup2\n        /* \"#utility.yul\":3179:3235   */\n      tag_155\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":3174:3177   */\n      dup3\n        /* \"#utility.yul\":3167:3236   */\n      mstore\n        /* \"#utility.yul\":3073:3242   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3248:3508   */\n    tag_33:\n        /* \"#utility.yul\":3360:3364   */\n      0x00\n        /* \"#utility.yul\":3398:3400   */\n      0x20\n        /* \"#utility.yul\":3387:3396   */\n      dup3\n        /* \"#utility.yul\":3383:3401   */\n      add\n        /* \"#utility.yul\":3375:3401   */\n      swap1\n      pop\n        /* \"#utility.yul\":3411:3501   */\n      tag_226\n        /* \"#utility.yul\":3498:3499   */\n      0x00\n        /* \"#utility.yul\":3487:3496   */\n      dup4\n        /* \"#utility.yul\":3483:3500   */\n      add\n        /* \"#utility.yul\":3474:3480   */\n      dup5\n        /* \"#utility.yul\":3411:3501   */\n      tag_156\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":3248:3508   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3514:3599   */\n    tag_157:\n        /* \"#utility.yul\":3559:3566   */\n      0x00\n        /* \"#utility.yul\":3588:3593   */\n      dup2\n        /* \"#utility.yul\":3577:3593   */\n      swap1\n      pop\n        /* \"#utility.yul\":3514:3599   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3605:3697   */\n    tag_158:\n        /* \"#utility.yul\":3641:3648   */\n      0x00\n        /* \"#utility.yul\":3685:3690   */\n      dup2\n        /* \"#utility.yul\":3681:3683   */\n      0x0f\n        /* \"#utility.yul\":3670:3691   */\n      signextend\n        /* \"#utility.yul\":3659:3691   */\n      swap1\n      pop\n        /* \"#utility.yul\":3605:3697   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3703:3859   */\n    tag_159:\n        /* \"#utility.yul\":3760:3769   */\n      0x00\n        /* \"#utility.yul\":3793:3853   */\n      tag_230\n        /* \"#utility.yul\":3810:3852   */\n      tag_231\n        /* \"#utility.yul\":3819:3851   */\n      tag_232\n        /* \"#utility.yul\":3845:3850   */\n      dup5\n        /* \"#utility.yul\":3819:3851   */\n      tag_157\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":3810:3852   */\n      tag_150\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":3793:3853   */\n      tag_158\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":3780:3853   */\n      swap1\n      pop\n        /* \"#utility.yul\":3703:3859   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3865:4010   */\n    tag_160:\n        /* \"#utility.yul\":3959:4003   */\n      tag_234\n        /* \"#utility.yul\":3997:4002   */\n      dup2\n        /* \"#utility.yul\":3959:4003   */\n      tag_159\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":3954:3957   */\n      dup3\n        /* \"#utility.yul\":3947:4004   */\n      mstore\n        /* \"#utility.yul\":3865:4010   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4016:4101   */\n    tag_161:\n        /* \"#utility.yul\":4061:4068   */\n      0x00\n        /* \"#utility.yul\":4090:4095   */\n      dup2\n        /* \"#utility.yul\":4079:4095   */\n      swap1\n      pop\n        /* \"#utility.yul\":4016:4101   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4107:4263   */\n    tag_162:\n        /* \"#utility.yul\":4164:4173   */\n      0x00\n        /* \"#utility.yul\":4197:4257   */\n      tag_237\n        /* \"#utility.yul\":4214:4256   */\n      tag_238\n        /* \"#utility.yul\":4223:4255   */\n      tag_239\n        /* \"#utility.yul\":4249:4254   */\n      dup5\n        /* \"#utility.yul\":4223:4255   */\n      tag_161\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":4214:4256   */\n      tag_150\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":4197:4257   */\n      tag_158\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":4184:4257   */\n      swap1\n      pop\n        /* \"#utility.yul\":4107:4263   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4269:4414   */\n    tag_163:\n        /* \"#utility.yul\":4363:4407   */\n      tag_241\n        /* \"#utility.yul\":4401:4406   */\n      dup2\n        /* \"#utility.yul\":4363:4407   */\n      tag_162\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":4358:4361   */\n      dup3\n        /* \"#utility.yul\":4351:4408   */\n      mstore\n        /* \"#utility.yul\":4269:4414   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4420:5001   */\n    tag_56:\n        /* \"#utility.yul\":4611:4615   */\n      0x00\n        /* \"#utility.yul\":4649:4652   */\n      0x80\n        /* \"#utility.yul\":4638:4647   */\n      dup3\n        /* \"#utility.yul\":4634:4653   */\n      add\n        /* \"#utility.yul\":4626:4653   */\n      swap1\n      pop\n        /* \"#utility.yul\":4663:4741   */\n      tag_243\n        /* \"#utility.yul\":4738:4739   */\n      0x00\n        /* \"#utility.yul\":4727:4736   */\n      dup4\n        /* \"#utility.yul\":4723:4740   */\n      add\n        /* \"#utility.yul\":4714:4720   */\n      dup8\n        /* \"#utility.yul\":4663:4741   */\n      tag_160\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":4751:4830   */\n      tag_244\n        /* \"#utility.yul\":4826:4828   */\n      0x20\n        /* \"#utility.yul\":4815:4824   */\n      dup4\n        /* \"#utility.yul\":4811:4829   */\n      add\n        /* \"#utility.yul\":4802:4808   */\n      dup7\n        /* \"#utility.yul\":4751:4830   */\n      tag_163\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":4840:4912   */\n      tag_245\n        /* \"#utility.yul\":4908:4910   */\n      0x40\n        /* \"#utility.yul\":4897:4906   */\n      dup4\n        /* \"#utility.yul\":4893:4911   */\n      add\n        /* \"#utility.yul\":4884:4890   */\n      dup6\n        /* \"#utility.yul\":4840:4912   */\n      tag_148\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":4922:4994   */\n      tag_246\n        /* \"#utility.yul\":4990:4992   */\n      0x60\n        /* \"#utility.yul\":4979:4988   */\n      dup4\n        /* \"#utility.yul\":4975:4993   */\n      add\n        /* \"#utility.yul\":4966:4972   */\n      dup5\n        /* \"#utility.yul\":4922:4994   */\n      tag_148\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":4420:5001   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5007:5150   */\n    tag_164:\n        /* \"#utility.yul\":5064:5069   */\n      0x00\n        /* \"#utility.yul\":5095:5101   */\n      dup2\n        /* \"#utility.yul\":5089:5102   */\n      mload\n        /* \"#utility.yul\":5080:5102   */\n      swap1\n      pop\n        /* \"#utility.yul\":5111:5144   */\n      tag_248\n        /* \"#utility.yul\":5138:5143   */\n      dup2\n        /* \"#utility.yul\":5111:5144   */\n      tag_146\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":5007:5150   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5156:5507   */\n    tag_60:\n        /* \"#utility.yul\":5226:5232   */\n      0x00\n        /* \"#utility.yul\":5275:5277   */\n      0x20\n        /* \"#utility.yul\":5263:5272   */\n      dup3\n        /* \"#utility.yul\":5254:5261   */\n      dup5\n        /* \"#utility.yul\":5250:5273   */\n      sub\n        /* \"#utility.yul\":5246:5278   */\n      slt\n        /* \"#utility.yul\":5243:5362   */\n      iszero\n      tag_250\n      jumpi\n        /* \"#utility.yul\":5281:5360   */\n      tag_251\n      tag_143\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":5243:5362   */\n    tag_250:\n        /* \"#utility.yul\":5401:5402   */\n      0x00\n        /* \"#utility.yul\":5426:5490   */\n      tag_252\n        /* \"#utility.yul\":5482:5489   */\n      dup5\n        /* \"#utility.yul\":5473:5479   */\n      dup3\n        /* \"#utility.yul\":5462:5471   */\n      dup6\n        /* \"#utility.yul\":5458:5480   */\n      add\n        /* \"#utility.yul\":5426:5490   */\n      tag_164\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":5416:5490   */\n      swap2\n      pop\n        /* \"#utility.yul\":5372:5500   */\n      pop\n        /* \"#utility.yul\":5156:5507   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5513:5983   */\n    tag_63:\n        /* \"#utility.yul\":5676:5680   */\n      0x00\n        /* \"#utility.yul\":5714:5716   */\n      0x60\n        /* \"#utility.yul\":5703:5712   */\n      dup3\n        /* \"#utility.yul\":5699:5717   */\n      add\n        /* \"#utility.yul\":5691:5717   */\n      swap1\n      pop\n        /* \"#utility.yul\":5727:5805   */\n      tag_254\n        /* \"#utility.yul\":5802:5803   */\n      0x00\n        /* \"#utility.yul\":5791:5800   */\n      dup4\n        /* \"#utility.yul\":5787:5804   */\n      add\n        /* \"#utility.yul\":5778:5784   */\n      dup7\n        /* \"#utility.yul\":5727:5805   */\n      tag_160\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":5815:5894   */\n      tag_255\n        /* \"#utility.yul\":5890:5892   */\n      0x20\n        /* \"#utility.yul\":5879:5888   */\n      dup4\n        /* \"#utility.yul\":5875:5893   */\n      add\n        /* \"#utility.yul\":5866:5872   */\n      dup6\n        /* \"#utility.yul\":5815:5894   */\n      tag_163\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":5904:5976   */\n      tag_256\n        /* \"#utility.yul\":5972:5974   */\n      0x40\n        /* \"#utility.yul\":5961:5970   */\n      dup4\n        /* \"#utility.yul\":5957:5975   */\n      add\n        /* \"#utility.yul\":5948:5954   */\n      dup5\n        /* \"#utility.yul\":5904:5976   */\n      tag_148\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":5513:5983   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5989:6085   */\n    tag_165:\n        /* \"#utility.yul\":6026:6033   */\n      0x00\n        /* \"#utility.yul\":6055:6079   */\n      tag_258\n        /* \"#utility.yul\":6073:6078   */\n      dup3\n        /* \"#utility.yul\":6055:6079   */\n      tag_149\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":6044:6079   */\n      swap1\n      pop\n        /* \"#utility.yul\":5989:6085   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6091:6209   */\n    tag_166:\n        /* \"#utility.yul\":6178:6202   */\n      tag_260\n        /* \"#utility.yul\":6196:6201   */\n      dup2\n        /* \"#utility.yul\":6178:6202   */\n      tag_165\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":6173:6176   */\n      dup3\n        /* \"#utility.yul\":6166:6203   */\n      mstore\n        /* \"#utility.yul\":6091:6209   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6215:6547   */\n    tag_69:\n        /* \"#utility.yul\":6336:6340   */\n      0x00\n        /* \"#utility.yul\":6374:6376   */\n      0x40\n        /* \"#utility.yul\":6363:6372   */\n      dup3\n        /* \"#utility.yul\":6359:6377   */\n      add\n        /* \"#utility.yul\":6351:6377   */\n      swap1\n      pop\n        /* \"#utility.yul\":6387:6458   */\n      tag_262\n        /* \"#utility.yul\":6455:6456   */\n      0x00\n        /* \"#utility.yul\":6444:6453   */\n      dup4\n        /* \"#utility.yul\":6440:6457   */\n      add\n        /* \"#utility.yul\":6431:6437   */\n      dup6\n        /* \"#utility.yul\":6387:6458   */\n      tag_166\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":6468:6540   */\n      tag_263\n        /* \"#utility.yul\":6536:6538   */\n      0x20\n        /* \"#utility.yul\":6525:6534   */\n      dup4\n        /* \"#utility.yul\":6521:6539   */\n      add\n        /* \"#utility.yul\":6512:6518   */\n      dup5\n        /* \"#utility.yul\":6468:6540   */\n      tag_148\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":6215:6547   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6553:6643   */\n    tag_167:\n        /* \"#utility.yul\":6587:6594   */\n      0x00\n        /* \"#utility.yul\":6630:6635   */\n      dup2\n        /* \"#utility.yul\":6623:6636   */\n      iszero\n        /* \"#utility.yul\":6616:6637   */\n      iszero\n        /* \"#utility.yul\":6605:6637   */\n      swap1\n      pop\n        /* \"#utility.yul\":6553:6643   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6649:6765   */\n    tag_168:\n        /* \"#utility.yul\":6719:6740   */\n      tag_266\n        /* \"#utility.yul\":6734:6739   */\n      dup2\n        /* \"#utility.yul\":6719:6740   */\n      tag_167\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":6712:6717   */\n      dup2\n        /* \"#utility.yul\":6709:6741   */\n      eq\n        /* \"#utility.yul\":6699:6759   */\n      tag_267\n      jumpi\n        /* \"#utility.yul\":6755:6756   */\n      0x00\n        /* \"#utility.yul\":6752:6753   */\n      dup1\n        /* \"#utility.yul\":6745:6757   */\n      revert\n        /* \"#utility.yul\":6699:6759   */\n    tag_267:\n        /* \"#utility.yul\":6649:6765   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6771:6908   */\n    tag_169:\n        /* \"#utility.yul\":6825:6830   */\n      0x00\n        /* \"#utility.yul\":6856:6862   */\n      dup2\n        /* \"#utility.yul\":6850:6863   */\n      mload\n        /* \"#utility.yul\":6841:6863   */\n      swap1\n      pop\n        /* \"#utility.yul\":6872:6902   */\n      tag_269\n        /* \"#utility.yul\":6896:6901   */\n      dup2\n        /* \"#utility.yul\":6872:6902   */\n      tag_168\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":6771:6908   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6914:7259   */\n    tag_73:\n        /* \"#utility.yul\":6981:6987   */\n      0x00\n        /* \"#utility.yul\":7030:7032   */\n      0x20\n        /* \"#utility.yul\":7018:7027   */\n      dup3\n        /* \"#utility.yul\":7009:7016   */\n      dup5\n        /* \"#utility.yul\":7005:7028   */\n      sub\n        /* \"#utility.yul\":7001:7033   */\n      slt\n        /* \"#utility.yul\":6998:7117   */\n      iszero\n      tag_271\n      jumpi\n        /* \"#utility.yul\":7036:7115   */\n      tag_272\n      tag_143\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":6998:7117   */\n    tag_271:\n        /* \"#utility.yul\":7156:7157   */\n      0x00\n        /* \"#utility.yul\":7181:7242   */\n      tag_273\n        /* \"#utility.yul\":7234:7241   */\n      dup5\n        /* \"#utility.yul\":7225:7231   */\n      dup3\n        /* \"#utility.yul\":7214:7223   */\n      dup6\n        /* \"#utility.yul\":7210:7232   */\n      add\n        /* \"#utility.yul\":7181:7242   */\n      tag_169\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":7171:7242   */\n      swap2\n      pop\n        /* \"#utility.yul\":7127:7252   */\n      pop\n        /* \"#utility.yul\":6914:7259   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7265:7423   */\n    tag_170:\n        /* \"#utility.yul\":7323:7332   */\n      0x00\n        /* \"#utility.yul\":7356:7417   */\n      tag_275\n        /* \"#utility.yul\":7374:7416   */\n      tag_276\n        /* \"#utility.yul\":7383:7415   */\n      tag_277\n        /* \"#utility.yul\":7409:7414   */\n      dup5\n        /* \"#utility.yul\":7383:7415   */\n      tag_157\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":7374:7416   */\n      tag_150\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":7356:7417   */\n      tag_145\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":7343:7417   */\n      swap1\n      pop\n        /* \"#utility.yul\":7265:7423   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7429:7576   */\n    tag_171:\n        /* \"#utility.yul\":7524:7569   */\n      tag_279\n        /* \"#utility.yul\":7563:7568   */\n      dup2\n        /* \"#utility.yul\":7524:7569   */\n      tag_170\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":7519:7522   */\n      dup3\n        /* \"#utility.yul\":7512:7570   */\n      mstore\n        /* \"#utility.yul\":7429:7576   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7582:8179   */\n    tag_75:\n        /* \"#utility.yul\":7781:7785   */\n      0x00\n        /* \"#utility.yul\":7819:7822   */\n      0x80\n        /* \"#utility.yul\":7808:7817   */\n      dup3\n        /* \"#utility.yul\":7804:7823   */\n      add\n        /* \"#utility.yul\":7796:7823   */\n      swap1\n      pop\n        /* \"#utility.yul\":7833:7911   */\n      tag_281\n        /* \"#utility.yul\":7908:7909   */\n      0x00\n        /* \"#utility.yul\":7897:7906   */\n      dup4\n        /* \"#utility.yul\":7893:7910   */\n      add\n        /* \"#utility.yul\":7884:7890   */\n      dup8\n        /* \"#utility.yul\":7833:7911   */\n      tag_163\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":7921:8000   */\n      tag_282\n        /* \"#utility.yul\":7996:7998   */\n      0x20\n        /* \"#utility.yul\":7985:7994   */\n      dup4\n        /* \"#utility.yul\":7981:7999   */\n      add\n        /* \"#utility.yul\":7972:7978   */\n      dup7\n        /* \"#utility.yul\":7921:8000   */\n      tag_160\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":8010:8082   */\n      tag_283\n        /* \"#utility.yul\":8078:8080   */\n      0x40\n        /* \"#utility.yul\":8067:8076   */\n      dup4\n        /* \"#utility.yul\":8063:8081   */\n      add\n        /* \"#utility.yul\":8054:8060   */\n      dup6\n        /* \"#utility.yul\":8010:8082   */\n      tag_148\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":8092:8172   */\n      tag_284\n        /* \"#utility.yul\":8168:8170   */\n      0x60\n        /* \"#utility.yul\":8157:8166   */\n      dup4\n        /* \"#utility.yul\":8153:8171   */\n      add\n        /* \"#utility.yul\":8144:8150   */\n      dup5\n        /* \"#utility.yul\":8092:8172   */\n      tag_171\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":7582:8179   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8185:8293   */\n    tag_172:\n        /* \"#utility.yul\":8262:8286   */\n      tag_286\n        /* \"#utility.yul\":8280:8285   */\n      dup2\n        /* \"#utility.yul\":8262:8286   */\n      tag_165\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":8257:8260   */\n      dup3\n        /* \"#utility.yul\":8250:8287   */\n      mstore\n        /* \"#utility.yul\":8185:8293   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8299:8390   */\n    tag_173:\n        /* \"#utility.yul\":8335:8342   */\n      0x00\n        /* \"#utility.yul\":8375:8383   */\n      0xffffff\n        /* \"#utility.yul\":8368:8373   */\n      dup3\n        /* \"#utility.yul\":8364:8384   */\n      and\n        /* \"#utility.yul\":8353:8384   */\n      swap1\n      pop\n        /* \"#utility.yul\":8299:8390   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8396:8501   */\n    tag_174:\n        /* \"#utility.yul\":8471:8494   */\n      tag_289\n        /* \"#utility.yul\":8488:8493   */\n      dup2\n        /* \"#utility.yul\":8471:8494   */\n      tag_173\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":8466:8469   */\n      dup3\n        /* \"#utility.yul\":8459:8495   */\n      mstore\n        /* \"#utility.yul\":8396:8501   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8507:8615   */\n    tag_175:\n        /* \"#utility.yul\":8584:8608   */\n      tag_291\n        /* \"#utility.yul\":8602:8607   */\n      dup2\n        /* \"#utility.yul\":8584:8608   */\n      tag_145\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":8579:8582   */\n      dup3\n        /* \"#utility.yul\":8572:8609   */\n      mstore\n        /* \"#utility.yul\":8507:8615   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8621:8729   */\n    tag_176:\n        /* \"#utility.yul\":8698:8722   */\n      tag_293\n        /* \"#utility.yul\":8716:8721   */\n      dup2\n        /* \"#utility.yul\":8698:8722   */\n      tag_149\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":8693:8696   */\n      dup3\n        /* \"#utility.yul\":8686:8723   */\n      mstore\n        /* \"#utility.yul\":8621:8729   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8829:10452   */\n    tag_177:\n        /* \"#utility.yul\":9004:9010   */\n      0x0100\n        /* \"#utility.yul\":8999:9002   */\n      dup3\n        /* \"#utility.yul\":8995:9011   */\n      add\n        /* \"#utility.yul\":9096:9100   */\n      0x00\n        /* \"#utility.yul\":9089:9094   */\n      dup3\n        /* \"#utility.yul\":9085:9101   */\n      add\n        /* \"#utility.yul\":9079:9102   */\n      mload\n        /* \"#utility.yul\":9115:9178   */\n      tag_295\n        /* \"#utility.yul\":9172:9176   */\n      0x00\n        /* \"#utility.yul\":9167:9170   */\n      dup6\n        /* \"#utility.yul\":9163:9177   */\n      add\n        /* \"#utility.yul\":9149:9161   */\n      dup3\n        /* \"#utility.yul\":9115:9178   */\n      tag_172\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":9021:9188   */\n      pop\n        /* \"#utility.yul\":9274:9278   */\n      0x20\n        /* \"#utility.yul\":9267:9272   */\n      dup3\n        /* \"#utility.yul\":9263:9279   */\n      add\n        /* \"#utility.yul\":9257:9280   */\n      mload\n        /* \"#utility.yul\":9293:9356   */\n      tag_296\n        /* \"#utility.yul\":9350:9354   */\n      0x20\n        /* \"#utility.yul\":9345:9348   */\n      dup6\n        /* \"#utility.yul\":9341:9355   */\n      add\n        /* \"#utility.yul\":9327:9339   */\n      dup3\n        /* \"#utility.yul\":9293:9356   */\n      tag_172\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":9198:9366   */\n      pop\n        /* \"#utility.yul\":9447:9451   */\n      0x40\n        /* \"#utility.yul\":9440:9445   */\n      dup3\n        /* \"#utility.yul\":9436:9452   */\n      add\n        /* \"#utility.yul\":9430:9453   */\n      mload\n        /* \"#utility.yul\":9466:9527   */\n      tag_297\n        /* \"#utility.yul\":9521:9525   */\n      0x40\n        /* \"#utility.yul\":9516:9519   */\n      dup6\n        /* \"#utility.yul\":9512:9526   */\n      add\n        /* \"#utility.yul\":9498:9510   */\n      dup3\n        /* \"#utility.yul\":9466:9527   */\n      tag_174\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":9376:9537   */\n      pop\n        /* \"#utility.yul\":9624:9628   */\n      0x60\n        /* \"#utility.yul\":9617:9622   */\n      dup3\n        /* \"#utility.yul\":9613:9629   */\n      add\n        /* \"#utility.yul\":9607:9630   */\n      mload\n        /* \"#utility.yul\":9643:9706   */\n      tag_298\n        /* \"#utility.yul\":9700:9704   */\n      0x60\n        /* \"#utility.yul\":9695:9698   */\n      dup6\n        /* \"#utility.yul\":9691:9705   */\n      add\n        /* \"#utility.yul\":9677:9689   */\n      dup3\n        /* \"#utility.yul\":9643:9706   */\n      tag_172\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":9547:9716   */\n      pop\n        /* \"#utility.yul\":9802:9806   */\n      0x80\n        /* \"#utility.yul\":9795:9800   */\n      dup3\n        /* \"#utility.yul\":9791:9807   */\n      add\n        /* \"#utility.yul\":9785:9808   */\n      mload\n        /* \"#utility.yul\":9821:9884   */\n      tag_299\n        /* \"#utility.yul\":9878:9882   */\n      0x80\n        /* \"#utility.yul\":9873:9876   */\n      dup6\n        /* \"#utility.yul\":9869:9883   */\n      add\n        /* \"#utility.yul\":9855:9867   */\n      dup3\n        /* \"#utility.yul\":9821:9884   */\n      tag_175\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":9726:9894   */\n      pop\n        /* \"#utility.yul\":9980:9984   */\n      0xa0\n        /* \"#utility.yul\":9973:9978   */\n      dup3\n        /* \"#utility.yul\":9969:9985   */\n      add\n        /* \"#utility.yul\":9963:9986   */\n      mload\n        /* \"#utility.yul\":9999:10062   */\n      tag_300\n        /* \"#utility.yul\":10056:10060   */\n      0xa0\n        /* \"#utility.yul\":10051:10054   */\n      dup6\n        /* \"#utility.yul\":10047:10061   */\n      add\n        /* \"#utility.yul\":10033:10045   */\n      dup3\n        /* \"#utility.yul\":9999:10062   */\n      tag_175\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":9904:10072   */\n      pop\n        /* \"#utility.yul\":10166:10170   */\n      0xc0\n        /* \"#utility.yul\":10159:10164   */\n      dup3\n        /* \"#utility.yul\":10155:10171   */\n      add\n        /* \"#utility.yul\":10149:10172   */\n      mload\n        /* \"#utility.yul\":10185:10248   */\n      tag_301\n        /* \"#utility.yul\":10242:10246   */\n      0xc0\n        /* \"#utility.yul\":10237:10240   */\n      dup6\n        /* \"#utility.yul\":10233:10247   */\n      add\n        /* \"#utility.yul\":10219:10231   */\n      dup3\n        /* \"#utility.yul\":10185:10248   */\n      tag_175\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":10082:10258   */\n      pop\n        /* \"#utility.yul\":10353:10357   */\n      0xe0\n        /* \"#utility.yul\":10346:10351   */\n      dup3\n        /* \"#utility.yul\":10342:10358   */\n      add\n        /* \"#utility.yul\":10336:10359   */\n      mload\n        /* \"#utility.yul\":10372:10435   */\n      tag_302\n        /* \"#utility.yul\":10429:10433   */\n      0xe0\n        /* \"#utility.yul\":10424:10427   */\n      dup6\n        /* \"#utility.yul\":10420:10434   */\n      add\n        /* \"#utility.yul\":10406:10418   */\n      dup3\n        /* \"#utility.yul\":10372:10435   */\n      tag_176\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":10268:10445   */\n      pop\n        /* \"#utility.yul\":8973:10452   */\n      pop\n        /* \"#utility.yul\":8829:10452   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10458:10837   */\n    tag_81:\n        /* \"#utility.yul\":10629:10633   */\n      0x00\n        /* \"#utility.yul\":10667:10670   */\n      0x0100\n        /* \"#utility.yul\":10656:10665   */\n      dup3\n        /* \"#utility.yul\":10652:10671   */\n      add\n        /* \"#utility.yul\":10644:10671   */\n      swap1\n      pop\n        /* \"#utility.yul\":10681:10830   */\n      tag_304\n        /* \"#utility.yul\":10827:10828   */\n      0x00\n        /* \"#utility.yul\":10816:10825   */\n      dup4\n        /* \"#utility.yul\":10812:10829   */\n      add\n        /* \"#utility.yul\":10803:10809   */\n      dup5\n        /* \"#utility.yul\":10681:10830   */\n      tag_177\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":10458:10837   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10843:11285   */\n    tag_87:\n        /* \"#utility.yul\":10992:10996   */\n      0x00\n        /* \"#utility.yul\":11030:11032   */\n      0x60\n        /* \"#utility.yul\":11019:11028   */\n      dup3\n        /* \"#utility.yul\":11015:11033   */\n      add\n        /* \"#utility.yul\":11007:11033   */\n      swap1\n      pop\n        /* \"#utility.yul\":11043:11114   */\n      tag_306\n        /* \"#utility.yul\":11111:11112   */\n      0x00\n        /* \"#utility.yul\":11100:11109   */\n      dup4\n        /* \"#utility.yul\":11096:11113   */\n      add\n        /* \"#utility.yul\":11087:11093   */\n      dup7\n        /* \"#utility.yul\":11043:11114   */\n      tag_166\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":11124:11196   */\n      tag_307\n        /* \"#utility.yul\":11192:11194   */\n      0x20\n        /* \"#utility.yul\":11181:11190   */\n      dup4\n        /* \"#utility.yul\":11177:11195   */\n      add\n        /* \"#utility.yul\":11168:11174   */\n      dup6\n        /* \"#utility.yul\":11124:11196   */\n      tag_166\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":11206:11278   */\n      tag_308\n        /* \"#utility.yul\":11274:11276   */\n      0x40\n        /* \"#utility.yul\":11263:11272   */\n      dup4\n        /* \"#utility.yul\":11259:11277   */\n      add\n        /* \"#utility.yul\":11250:11256   */\n      dup5\n        /* \"#utility.yul\":11206:11278   */\n      tag_148\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":10843:11285   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11387:13014   */\n    tag_178:\n        /* \"#utility.yul\":11564:11570   */\n      0x0100\n        /* \"#utility.yul\":11559:11562   */\n      dup3\n        /* \"#utility.yul\":11555:11571   */\n      add\n        /* \"#utility.yul\":11656:11660   */\n      0x00\n        /* \"#utility.yul\":11649:11654   */\n      dup3\n        /* \"#utility.yul\":11645:11661   */\n      add\n        /* \"#utility.yul\":11639:11662   */\n      mload\n        /* \"#utility.yul\":11675:11738   */\n      tag_310\n        /* \"#utility.yul\":11732:11736   */\n      0x00\n        /* \"#utility.yul\":11727:11730   */\n      dup6\n        /* \"#utility.yul\":11723:11737   */\n      add\n        /* \"#utility.yul\":11709:11721   */\n      dup3\n        /* \"#utility.yul\":11675:11738   */\n      tag_172\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":11581:11748   */\n      pop\n        /* \"#utility.yul\":11834:11838   */\n      0x20\n        /* \"#utility.yul\":11827:11832   */\n      dup3\n        /* \"#utility.yul\":11823:11839   */\n      add\n        /* \"#utility.yul\":11817:11840   */\n      mload\n        /* \"#utility.yul\":11853:11916   */\n      tag_311\n        /* \"#utility.yul\":11910:11914   */\n      0x20\n        /* \"#utility.yul\":11905:11908   */\n      dup6\n        /* \"#utility.yul\":11901:11915   */\n      add\n        /* \"#utility.yul\":11887:11899   */\n      dup3\n        /* \"#utility.yul\":11853:11916   */\n      tag_172\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":11758:11926   */\n      pop\n        /* \"#utility.yul\":12007:12011   */\n      0x40\n        /* \"#utility.yul\":12000:12005   */\n      dup3\n        /* \"#utility.yul\":11996:12012   */\n      add\n        /* \"#utility.yul\":11990:12013   */\n      mload\n        /* \"#utility.yul\":12026:12089   */\n      tag_312\n        /* \"#utility.yul\":12083:12087   */\n      0x40\n        /* \"#utility.yul\":12078:12081   */\n      dup6\n        /* \"#utility.yul\":12074:12088   */\n      add\n        /* \"#utility.yul\":12060:12072   */\n      dup3\n        /* \"#utility.yul\":12026:12089   */\n      tag_175\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":11936:12099   */\n      pop\n        /* \"#utility.yul\":12185:12189   */\n      0x60\n        /* \"#utility.yul\":12178:12183   */\n      dup3\n        /* \"#utility.yul\":12174:12190   */\n      add\n        /* \"#utility.yul\":12168:12191   */\n      mload\n        /* \"#utility.yul\":12204:12267   */\n      tag_313\n        /* \"#utility.yul\":12261:12265   */\n      0x60\n        /* \"#utility.yul\":12256:12259   */\n      dup6\n        /* \"#utility.yul\":12252:12266   */\n      add\n        /* \"#utility.yul\":12238:12250   */\n      dup3\n        /* \"#utility.yul\":12204:12267   */\n      tag_175\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":12109:12277   */\n      pop\n        /* \"#utility.yul\":12364:12368   */\n      0x80\n        /* \"#utility.yul\":12357:12362   */\n      dup3\n        /* \"#utility.yul\":12353:12369   */\n      add\n        /* \"#utility.yul\":12347:12370   */\n      mload\n        /* \"#utility.yul\":12383:12446   */\n      tag_314\n        /* \"#utility.yul\":12440:12444   */\n      0x80\n        /* \"#utility.yul\":12435:12438   */\n      dup6\n        /* \"#utility.yul\":12431:12445   */\n      add\n        /* \"#utility.yul\":12417:12429   */\n      dup3\n        /* \"#utility.yul\":12383:12446   */\n      tag_172\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":12287:12456   */\n      pop\n        /* \"#utility.yul\":12543:12547   */\n      0xa0\n        /* \"#utility.yul\":12536:12541   */\n      dup3\n        /* \"#utility.yul\":12532:12548   */\n      add\n        /* \"#utility.yul\":12526:12549   */\n      mload\n        /* \"#utility.yul\":12562:12625   */\n      tag_315\n        /* \"#utility.yul\":12619:12623   */\n      0xa0\n        /* \"#utility.yul\":12614:12617   */\n      dup6\n        /* \"#utility.yul\":12610:12624   */\n      add\n        /* \"#utility.yul\":12596:12608   */\n      dup3\n        /* \"#utility.yul\":12562:12625   */\n      tag_175\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":12466:12635   */\n      pop\n        /* \"#utility.yul\":12728:12732   */\n      0xc0\n        /* \"#utility.yul\":12721:12726   */\n      dup3\n        /* \"#utility.yul\":12717:12733   */\n      add\n        /* \"#utility.yul\":12711:12734   */\n      mload\n        /* \"#utility.yul\":12747:12810   */\n      tag_316\n        /* \"#utility.yul\":12804:12808   */\n      0xc0\n        /* \"#utility.yul\":12799:12802   */\n      dup6\n        /* \"#utility.yul\":12795:12809   */\n      add\n        /* \"#utility.yul\":12781:12793   */\n      dup3\n        /* \"#utility.yul\":12747:12810   */\n      tag_175\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":12645:12820   */\n      pop\n        /* \"#utility.yul\":12915:12919   */\n      0xe0\n        /* \"#utility.yul\":12908:12913   */\n      dup3\n        /* \"#utility.yul\":12904:12920   */\n      add\n        /* \"#utility.yul\":12898:12921   */\n      mload\n        /* \"#utility.yul\":12934:12997   */\n      tag_317\n        /* \"#utility.yul\":12991:12995   */\n      0xe0\n        /* \"#utility.yul\":12986:12989   */\n      dup6\n        /* \"#utility.yul\":12982:12996   */\n      add\n        /* \"#utility.yul\":12968:12980   */\n      dup3\n        /* \"#utility.yul\":12934:12997   */\n      tag_176\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":12830:13007   */\n      pop\n        /* \"#utility.yul\":11533:13014   */\n      pop\n        /* \"#utility.yul\":11387:13014   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13020:13403   */\n    tag_96:\n        /* \"#utility.yul\":13193:13197   */\n      0x00\n        /* \"#utility.yul\":13231:13234   */\n      0x0100\n        /* \"#utility.yul\":13220:13229   */\n      dup3\n        /* \"#utility.yul\":13216:13235   */\n      add\n        /* \"#utility.yul\":13208:13235   */\n      swap1\n      pop\n        /* \"#utility.yul\":13245:13396   */\n      tag_319\n        /* \"#utility.yul\":13393:13394   */\n      0x00\n        /* \"#utility.yul\":13382:13391   */\n      dup4\n        /* \"#utility.yul\":13378:13395   */\n      add\n        /* \"#utility.yul\":13369:13375   */\n      dup5\n        /* \"#utility.yul\":13245:13396   */\n      tag_178\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":13020:13403   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13409:13741   */\n    tag_102:\n        /* \"#utility.yul\":13530:13534   */\n      0x00\n        /* \"#utility.yul\":13568:13570   */\n      0x40\n        /* \"#utility.yul\":13557:13566   */\n      dup3\n        /* \"#utility.yul\":13553:13571   */\n      add\n        /* \"#utility.yul\":13545:13571   */\n      swap1\n      pop\n        /* \"#utility.yul\":13581:13652   */\n      tag_321\n        /* \"#utility.yul\":13649:13650   */\n      0x00\n        /* \"#utility.yul\":13638:13647   */\n      dup4\n        /* \"#utility.yul\":13634:13651   */\n      add\n        /* \"#utility.yul\":13625:13631   */\n      dup6\n        /* \"#utility.yul\":13581:13652   */\n      tag_166\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":13662:13734   */\n      tag_322\n        /* \"#utility.yul\":13730:13732   */\n      0x20\n        /* \"#utility.yul\":13719:13728   */\n      dup4\n        /* \"#utility.yul\":13715:13733   */\n      add\n        /* \"#utility.yul\":13706:13712   */\n      dup5\n        /* \"#utility.yul\":13662:13734   */\n      tag_166\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":13409:13741   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13747:13969   */\n    tag_107:\n        /* \"#utility.yul\":13840:13844   */\n      0x00\n        /* \"#utility.yul\":13878:13880   */\n      0x20\n        /* \"#utility.yul\":13867:13876   */\n      dup3\n        /* \"#utility.yul\":13863:13881   */\n      add\n        /* \"#utility.yul\":13855:13881   */\n      swap1\n      pop\n        /* \"#utility.yul\":13891:13962   */\n      tag_324\n        /* \"#utility.yul\":13959:13960   */\n      0x00\n        /* \"#utility.yul\":13948:13957   */\n      dup4\n        /* \"#utility.yul\":13944:13961   */\n      add\n        /* \"#utility.yul\":13935:13941   */\n      dup5\n        /* \"#utility.yul\":13891:13962   */\n      tag_166\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":13747:13969   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13975:14144   */\n    tag_179:\n        /* \"#utility.yul\":14059:14070   */\n      0x00\n        /* \"#utility.yul\":14093:14099   */\n      dup3\n        /* \"#utility.yul\":14088:14091   */\n      dup3\n        /* \"#utility.yul\":14081:14100   */\n      mstore\n        /* \"#utility.yul\":14133:14137   */\n      0x20\n        /* \"#utility.yul\":14128:14131   */\n      dup3\n        /* \"#utility.yul\":14124:14138   */\n      add\n        /* \"#utility.yul\":14109:14138   */\n      swap1\n      pop\n        /* \"#utility.yul\":13975:14144   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14150:14317   */\n    tag_180:\n        /* \"#utility.yul\":14290:14309   */\n      0x416c6c6f77616e636520746f6f206c6f77000000000000000000000000000000\n        /* \"#utility.yul\":14286:14287   */\n      0x00\n        /* \"#utility.yul\":14278:14284   */\n      dup3\n        /* \"#utility.yul\":14274:14288   */\n      add\n        /* \"#utility.yul\":14267:14310   */\n      mstore\n        /* \"#utility.yul\":14150:14317   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14323:14689   */\n    tag_181:\n        /* \"#utility.yul\":14465:14468   */\n      0x00\n        /* \"#utility.yul\":14486:14553   */\n      tag_328\n        /* \"#utility.yul\":14550:14552   */\n      0x11\n        /* \"#utility.yul\":14545:14548   */\n      dup4\n        /* \"#utility.yul\":14486:14553   */\n      tag_179\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":14479:14553   */\n      swap2\n      pop\n        /* \"#utility.yul\":14562:14655   */\n      tag_329\n        /* \"#utility.yul\":14651:14654   */\n      dup3\n        /* \"#utility.yul\":14562:14655   */\n      tag_180\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":14680:14682   */\n      0x20\n        /* \"#utility.yul\":14675:14678   */\n      dup3\n        /* \"#utility.yul\":14671:14683   */\n      add\n        /* \"#utility.yul\":14664:14683   */\n      swap1\n      pop\n        /* \"#utility.yul\":14323:14689   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14695:15114   */\n    tag_113:\n        /* \"#utility.yul\":14861:14865   */\n      0x00\n        /* \"#utility.yul\":14899:14901   */\n      0x20\n        /* \"#utility.yul\":14888:14897   */\n      dup3\n        /* \"#utility.yul\":14884:14902   */\n      add\n        /* \"#utility.yul\":14876:14902   */\n      swap1\n      pop\n        /* \"#utility.yul\":14948:14957   */\n      dup2\n        /* \"#utility.yul\":14942:14946   */\n      dup2\n        /* \"#utility.yul\":14938:14958   */\n      sub\n        /* \"#utility.yul\":14934:14935   */\n      0x00\n        /* \"#utility.yul\":14923:14932   */\n      dup4\n        /* \"#utility.yul\":14919:14936   */\n      add\n        /* \"#utility.yul\":14912:14959   */\n      mstore\n        /* \"#utility.yul\":14976:15107   */\n      tag_331\n        /* \"#utility.yul\":15102:15106   */\n      dup2\n        /* \"#utility.yul\":14976:15107   */\n      tag_181\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":14968:15107   */\n      swap1\n      pop\n        /* \"#utility.yul\":14695:15114   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15120:15290   */\n    tag_182:\n        /* \"#utility.yul\":15260:15282   */\n      0x496e73756666696369656e742062616c616e6365000000000000000000000000\n        /* \"#utility.yul\":15256:15257   */\n      0x00\n        /* \"#utility.yul\":15248:15254   */\n      dup3\n        /* \"#utility.yul\":15244:15258   */\n      add\n        /* \"#utility.yul\":15237:15283   */\n      mstore\n        /* \"#utility.yul\":15120:15290   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15296:15662   */\n    tag_183:\n        /* \"#utility.yul\":15438:15441   */\n      0x00\n        /* \"#utility.yul\":15459:15526   */\n      tag_334\n        /* \"#utility.yul\":15523:15525   */\n      0x14\n        /* \"#utility.yul\":15518:15521   */\n      dup4\n        /* \"#utility.yul\":15459:15526   */\n      tag_179\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":15452:15526   */\n      swap2\n      pop\n        /* \"#utility.yul\":15535:15628   */\n      tag_335\n        /* \"#utility.yul\":15624:15627   */\n      dup3\n        /* \"#utility.yul\":15535:15628   */\n      tag_182\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":15653:15655   */\n      0x20\n        /* \"#utility.yul\":15648:15651   */\n      dup3\n        /* \"#utility.yul\":15644:15656   */\n      add\n        /* \"#utility.yul\":15637:15656   */\n      swap1\n      pop\n        /* \"#utility.yul\":15296:15662   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15668:16087   */\n    tag_116:\n        /* \"#utility.yul\":15834:15838   */\n      0x00\n        /* \"#utility.yul\":15872:15874   */\n      0x20\n        /* \"#utility.yul\":15861:15870   */\n      dup3\n        /* \"#utility.yul\":15857:15875   */\n      add\n        /* \"#utility.yul\":15849:15875   */\n      swap1\n      pop\n        /* \"#utility.yul\":15921:15930   */\n      dup2\n        /* \"#utility.yul\":15915:15919   */\n      dup2\n        /* \"#utility.yul\":15911:15931   */\n      sub\n        /* \"#utility.yul\":15907:15908   */\n      0x00\n        /* \"#utility.yul\":15896:15905   */\n      dup4\n        /* \"#utility.yul\":15892:15909   */\n      add\n        /* \"#utility.yul\":15885:15932   */\n      mstore\n        /* \"#utility.yul\":15949:16080   */\n      tag_337\n        /* \"#utility.yul\":16075:16079   */\n      dup2\n        /* \"#utility.yul\":15949:16080   */\n      tag_183\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":15941:16080   */\n      swap1\n      pop\n        /* \"#utility.yul\":15668:16087   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122021ee3f7d0de829e58cab3d8e70cd3a80ebd2073d3700f6f7e6c28ed06fca704464736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_787": {
									"entryPoint": null,
									"id": 787,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 245,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 267,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 201,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 170,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 166,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 220,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1355:5",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:5",
														"type": ""
													}
												],
												"src": "7:75:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:5",
														"type": ""
													}
												],
												"src": "334:126:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:5",
														"type": ""
													}
												],
												"src": "466:96:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:5"
															},
															"nodeType": "YulIf",
															"src": "621:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:5",
														"type": ""
													}
												],
												"src": "568:122:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:5"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:5",
														"type": ""
													}
												],
												"src": "696:143:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "939:413:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "985:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "987:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "987:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "987:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "960:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "969:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "956:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "956:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "981:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "952:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "952:32:5"
															},
															"nodeType": "YulIf",
															"src": "949:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "1078:128:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1093:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1107:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1097:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1122:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1168:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1179:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1164:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1164:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1188:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1132:31:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1132:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1122:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1216:129:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1231:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1245:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1235:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1261:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1307:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1318:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1303:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1303:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1327:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1271:31:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1271:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1261:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "901:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "912:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "924:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "932:6:5",
														"type": ""
													}
												],
												"src": "845:507:5"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1713 CODESIZE SUB DUP1 PUSH3 0x1713 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x10B JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP PUSH3 0x150 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0xD5 DUP3 PUSH3 0xAA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xE7 DUP2 PUSH3 0xC9 JUMP JUMPDEST DUP2 EQ PUSH3 0xF2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x105 DUP2 PUSH3 0xDC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x124 JUMPI PUSH3 0x123 PUSH3 0xA6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x133 DUP6 DUP3 DUP7 ADD PUSH3 0xF5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x146 DUP6 DUP3 DUP7 ADD PUSH3 0xF5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x1562 PUSH3 0x1B1 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x213 ADD MSTORE DUP2 DUP2 PUSH2 0x2B9 ADD MSTORE DUP2 DUP2 PUSH2 0x35D ADD MSTORE DUP2 DUP2 PUSH2 0x3D5 ADD MSTORE PUSH2 0x455 ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0x381 ADD MSTORE DUP2 DUP2 PUSH2 0x5C1 ADD MSTORE DUP2 DUP2 PUSH2 0x728 ADD MSTORE DUP2 DUP2 PUSH2 0x867 ADD MSTORE DUP2 DUP2 PUSH2 0xC55 ADD MSTORE PUSH2 0xD99 ADD MSTORE PUSH2 0x1562 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x85 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x87B8D225 GT PUSH2 0x58 JUMPI DUP1 PUSH4 0x87B8D225 EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0xC477B581 EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0xC9EB5E5A EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0xD22CC067 EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0xE4EAAB96 EQ PUSH2 0x1E9 JUMPI PUSH2 0x85 JUMP JUMPDEST DUP1 PUSH4 0x4907BBB EQ PUSH2 0x89 JUMPI DUP1 PUSH4 0x1540E747 EQ PUSH2 0xB1 JUMPI DUP1 PUSH4 0x218751B2 EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x735DE9F7 EQ PUSH2 0x117 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x94 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xAF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAA SWAP2 SWAP1 PUSH2 0xE6D JUMP JUMPDEST PUSH2 0x211 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xD7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD2 SWAP2 SWAP1 PUSH2 0xEAB JUMP JUMPDEST PUSH2 0x2B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE4 SWAP2 SWAP1 PUSH2 0xEE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x101 PUSH2 0x35B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10E SWAP2 SWAP1 PUSH2 0xF78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x122 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x12B PUSH2 0x37F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x138 SWAP2 SWAP1 PUSH2 0xFB1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x167 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x162 SWAP2 SWAP1 PUSH2 0xE6D JUMP JUMPDEST PUSH2 0x3A3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x174 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x18F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18A SWAP2 SWAP1 PUSH2 0xEAB JUMP JUMPDEST PUSH2 0x4F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19C SWAP2 SWAP1 PUSH2 0xEE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0xE6D JUMP JUMPDEST PUSH2 0x664 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0xEAB JUMP JUMPDEST PUSH2 0x904 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x20F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20A SWAP2 SWAP1 PUSH2 0xE6D JUMP JUMPDEST PUSH2 0xB91 JUMP JUMPDEST STOP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3DF02124 PUSH0 PUSH1 0x1 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x271 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1048 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x28D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2B1 SWAP2 SWAP1 PUSH2 0x109F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5E0D443F PUSH0 PUSH1 0x1 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x315 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x10CA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x330 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x354 SWAP2 SWAP1 PUSH2 0x109F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH32 0x0 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x412 SWAP3 SWAP2 SWAP1 PUSH2 0x111F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x42E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x452 SWAP2 SWAP1 PUSH2 0x117B JUMP JUMPDEST POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3DF02124 PUSH1 0x1 PUSH0 DUP6 PUSH0 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B3 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x11D6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4CF JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4F3 SWAP2 SWAP1 PUSH2 0x109F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 PUSH20 0xA0B86991C6218B36C1D19D4A2E9EB0CE3606EB48 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBB8 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x414BF389 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x618 SWAP2 SWAP1 PUSH2 0x1303 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x634 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x658 SWAP2 SWAP1 PUSH2 0x109F JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x131D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6D1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6F5 SWAP2 SWAP1 PUSH2 0x117B JUMP JUMPDEST POP PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH32 0x0 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x765 SWAP3 SWAP2 SWAP1 PUSH2 0x111F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x781 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7A5 SWAP2 SWAP1 PUSH2 0x117B JUMP JUMPDEST POP PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 PUSH20 0xA0B86991C6218B36C1D19D4A2E9EB0CE3606EB48 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBB8 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x26A966C4 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8BE SWAP2 SWAP1 PUSH2 0x13F2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8DA JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8FE SWAP2 SWAP1 PUSH2 0x109F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xA0B86991C6218B36C1D19D4A2E9EB0CE3606EB48 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x954 SWAP3 SWAP2 SWAP1 PUSH2 0x140C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x96F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x993 SWAP2 SWAP1 PUSH2 0x109F JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xA0B86991C6218B36C1D19D4A2E9EB0CE3606EB48 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E3 SWAP2 SWAP1 PUSH2 0x1433 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9FE JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA22 SWAP2 SWAP1 PUSH2 0x109F JUMP JUMPDEST SWAP1 POP DUP3 DUP3 LT ISZERO PUSH2 0xA67 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA5E SWAP1 PUSH2 0x14A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xAAA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAA1 SWAP1 PUSH2 0x150E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0xA0B86991C6218B36C1D19D4A2E9EB0CE3606EB48 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAFB SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x131D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB17 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB3B SWAP2 SWAP1 PUSH2 0x117B JUMP JUMPDEST POP PUSH0 PUSH2 0xB46 DUP5 PUSH2 0x4F8 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xB52 DUP6 PUSH2 0x2B6 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xB75 JUMPI PUSH2 0xB66 DUP6 DUP3 PUSH2 0x211 JUMP JUMPDEST PUSH2 0xB70 DUP6 DUP3 PUSH2 0x664 JUMP JUMPDEST PUSH2 0xB8A JUMP JUMPDEST PUSH2 0xB7F DUP6 DUP4 PUSH2 0xB91 JUMP JUMPDEST PUSH2 0xB89 DUP3 DUP7 PUSH2 0x3A3 JUMP JUMPDEST JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH20 0xA0B86991C6218B36C1D19D4A2E9EB0CE3606EB48 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBE2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x131D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBFE JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC22 SWAP2 SWAP1 PUSH2 0x117B JUMP JUMPDEST POP PUSH20 0xA0B86991C6218B36C1D19D4A2E9EB0CE3606EB48 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH32 0x0 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC92 SWAP3 SWAP2 SWAP1 PUSH2 0x111F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCAE JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCD2 SWAP2 SWAP1 PUSH2 0x117B JUMP JUMPDEST POP PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 PUSH20 0xA0B86991C6218B36C1D19D4A2E9EB0CE3606EB48 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBB8 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x414BF389 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDF0 SWAP2 SWAP1 PUSH2 0x1303 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE0C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE30 SWAP2 SWAP1 PUSH2 0x109F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE4C DUP2 PUSH2 0xE3A JUMP JUMPDEST DUP2 EQ PUSH2 0xE56 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE67 DUP2 PUSH2 0xE43 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE83 JUMPI PUSH2 0xE82 PUSH2 0xE36 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE90 DUP6 DUP3 DUP7 ADD PUSH2 0xE59 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xEA1 DUP6 DUP3 DUP7 ADD PUSH2 0xE59 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEC0 JUMPI PUSH2 0xEBF PUSH2 0xE36 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xECD DUP5 DUP3 DUP6 ADD PUSH2 0xE59 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xEDF DUP2 PUSH2 0xE3A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEF8 PUSH0 DUP4 ADD DUP5 PUSH2 0xED6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF40 PUSH2 0xF3B PUSH2 0xF36 DUP5 PUSH2 0xEFE JUMP JUMPDEST PUSH2 0xF1D JUMP JUMPDEST PUSH2 0xEFE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF51 DUP3 PUSH2 0xF26 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF62 DUP3 PUSH2 0xF47 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF72 DUP2 PUSH2 0xF58 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF8B PUSH0 DUP4 ADD DUP5 PUSH2 0xF69 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xF9B DUP3 PUSH2 0xF47 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFAB DUP2 PUSH2 0xF91 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFC4 PUSH0 DUP4 ADD DUP5 PUSH2 0xFA2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0xF SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xFF9 PUSH2 0xFF4 PUSH2 0xFEF DUP5 PUSH2 0xFCA JUMP JUMPDEST PUSH2 0xF1D JUMP JUMPDEST PUSH2 0xFD3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1009 DUP2 PUSH2 0xFDF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1032 PUSH2 0x102D PUSH2 0x1028 DUP5 PUSH2 0x100F JUMP JUMPDEST PUSH2 0xF1D JUMP JUMPDEST PUSH2 0xFD3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1042 DUP2 PUSH2 0x1018 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x105B PUSH0 DUP4 ADD DUP8 PUSH2 0x1000 JUMP JUMPDEST PUSH2 0x1068 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1039 JUMP JUMPDEST PUSH2 0x1075 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xED6 JUMP JUMPDEST PUSH2 0x1082 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0xED6 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1099 DUP2 PUSH2 0xE43 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10B4 JUMPI PUSH2 0x10B3 PUSH2 0xE36 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x10C1 DUP5 DUP3 DUP6 ADD PUSH2 0x108B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x10DD PUSH0 DUP4 ADD DUP7 PUSH2 0x1000 JUMP JUMPDEST PUSH2 0x10EA PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1039 JUMP JUMPDEST PUSH2 0x10F7 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xED6 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1109 DUP3 PUSH2 0xEFE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1119 DUP2 PUSH2 0x10FF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1132 PUSH0 DUP4 ADD DUP6 PUSH2 0x1110 JUMP JUMPDEST PUSH2 0x113F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xED6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x115A DUP2 PUSH2 0x1146 JUMP JUMPDEST DUP2 EQ PUSH2 0x1164 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1175 DUP2 PUSH2 0x1151 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1190 JUMPI PUSH2 0x118F PUSH2 0xE36 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x119D DUP5 DUP3 DUP6 ADD PUSH2 0x1167 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x11C0 PUSH2 0x11BB PUSH2 0x11B6 DUP5 PUSH2 0xFCA JUMP JUMPDEST PUSH2 0xF1D JUMP JUMPDEST PUSH2 0xE3A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11D0 DUP2 PUSH2 0x11A6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x11E9 PUSH0 DUP4 ADD DUP8 PUSH2 0x1039 JUMP JUMPDEST PUSH2 0x11F6 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1000 JUMP JUMPDEST PUSH2 0x1203 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xED6 JUMP JUMPDEST PUSH2 0x1210 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x11C7 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1222 DUP2 PUSH2 0x10FF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x123F DUP2 PUSH2 0x1228 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x124E DUP2 PUSH2 0xE3A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x125D DUP2 PUSH2 0xEFE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x100 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x1278 PUSH0 DUP6 ADD DUP3 PUSH2 0x1219 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x128B PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x1219 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x129E PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x1236 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x12B1 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x1219 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x12C4 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x1245 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x12D7 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x1245 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x12EA PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x1245 JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x12FD PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0x1254 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0x1317 PUSH0 DUP4 ADD DUP5 PUSH2 0x1263 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1330 PUSH0 DUP4 ADD DUP7 PUSH2 0x1110 JUMP JUMPDEST PUSH2 0x133D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1110 JUMP JUMPDEST PUSH2 0x134A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xED6 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x100 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x1367 PUSH0 DUP6 ADD DUP3 PUSH2 0x1219 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x137A PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x1219 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x138D PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x1245 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x13A0 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x1245 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x13B3 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x1219 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x13C6 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x1245 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x13D9 PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x1245 JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x13EC PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0x1254 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0x1406 PUSH0 DUP4 ADD DUP5 PUSH2 0x1352 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x141F PUSH0 DUP4 ADD DUP6 PUSH2 0x1110 JUMP JUMPDEST PUSH2 0x142C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1110 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1446 PUSH0 DUP4 ADD DUP5 PUSH2 0x1110 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416C6C6F77616E636520746F6F206C6F77000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1490 PUSH1 0x11 DUP4 PUSH2 0x144C JUMP JUMPDEST SWAP2 POP PUSH2 0x149B DUP3 PUSH2 0x145C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x14BD DUP2 PUSH2 0x1484 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x14F8 PUSH1 0x14 DUP4 PUSH2 0x144C JUMP JUMPDEST SWAP2 POP PUSH2 0x1503 DUP3 PUSH2 0x14C4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1525 DUP2 PUSH2 0x14EC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x21 0xEE EXTCODEHASH PUSH30 0xDE829E58CAB3D8E70CD3A80EBD2073D3700F6F7E6C28ED06FCA70446473 PUSH16 0x6C634300081400330000000000000000 ",
							"sourceMap": "1244:4165:4:-:0;;;1743:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1836:14;1808:43;;;;;;;;;;1884:10;1861:34;;;;;;;;;;1743:159;;1244:4165;;88:117:5;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;1244:4165:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@buyEthOnCurve_859": {
									"entryPoint": 529,
									"id": 859,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@curvePool_746": {
									"entryPoint": 859,
									"id": 746,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@exchangeArbitrage_1031": {
									"entryPoint": 2308,
									"id": 1031,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getAmountonCurve_1082": {
									"entryPoint": 694,
									"id": 1082,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getAmountonUniswap_1067": {
									"entryPoint": 1272,
									"id": 1067,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@sellEthonCurve_941": {
									"entryPoint": 931,
									"id": 941,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@swapExactInputSingleHop_842": {
									"entryPoint": 2961,
									"id": 842,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@swapExactOutputSingleHop_914": {
									"entryPoint": 1636,
									"id": 914,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@uniswapRouter_743": {
									"entryPoint": 895,
									"id": 743,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 4455,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3673,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 4235,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 4475,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3755,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 4255,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 3693,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 4633,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4368,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_ICurvePool_$736_to_t_address_fromStack": {
									"entryPoint": 3945,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_ISwapRouter_$711_to_t_address_fromStack": {
									"entryPoint": 4002,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_0_by_1_to_t_int128_fromStack": {
									"entryPoint": 4096,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_0_by_1_to_t_uint256_fromStack": {
									"entryPoint": 4551,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_1_by_1_to_t_int128_fromStack": {
									"entryPoint": 4153,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5356,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9df0e97ee766a49f7ac27fed355dd1fab458cd8ac6dddadb84c6cba9b65af284_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5252,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_ExactInputSingleParams_$677_memory_ptr_to_t_struct$_ExactInputSingleParams_$677_memory_ptr_fromStack": {
									"entryPoint": 4707,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_struct$_ExactOutputSingleParams_$702_memory_ptr_to_t_struct$_ExactOutputSingleParams_$702_memory_ptr_fromStack": {
									"entryPoint": 4946,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint160_to_t_uint160": {
									"entryPoint": 4692,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint24_to_t_uint24": {
									"entryPoint": 4662,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 4677,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3798,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5171,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 5132,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4893,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4383,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_ICurvePool_$736__to_t_address__fromStack_reversed": {
									"entryPoint": 3960,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_ISwapRouter_$711__to_t_address__fromStack_reversed": {
									"entryPoint": 4017,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_0_by_1_t_rational_1_by_1_t_uint256__to_t_int128_t_int128_t_uint256__fromStack_reversed": {
									"entryPoint": 4298,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_0_by_1_t_rational_1_by_1_t_uint256_t_uint256__to_t_int128_t_int128_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 4168,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1_t_rational_0_by_1_t_uint256_t_rational_0_by_1__to_t_int128_t_int128_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 4566,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5390,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9df0e97ee766a49f7ac27fed355dd1fab458cd8ac6dddadb84c6cba9b65af284__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5286,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_ExactInputSingleParams_$677_memory_ptr__to_t_struct$_ExactInputSingleParams_$677_memory_ptr__fromStack_reversed": {
									"entryPoint": 4867,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_ExactOutputSingleParams_$702_memory_ptr__to_t_struct$_ExactOutputSingleParams_$702_memory_ptr__fromStack_reversed": {
									"entryPoint": 5106,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3813,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5196,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4351,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4422,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_int128": {
									"entryPoint": 4051,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_0_by_1": {
									"entryPoint": 4042,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_1_by_1": {
									"entryPoint": 4111,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3838,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint24": {
									"entryPoint": 4648,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3642,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_ICurvePool_$736_to_t_address": {
									"entryPoint": 3928,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_ISwapRouter_$711_to_t_address": {
									"entryPoint": 3985,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_0_by_1_to_t_int128": {
									"entryPoint": 4063,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_0_by_1_to_t_uint256": {
									"entryPoint": 4518,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_1_by_1_to_t_int128": {
									"entryPoint": 4120,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 3911,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 3878,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 3869,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3638,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5": {
									"entryPoint": 5316,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9df0e97ee766a49f7ac27fed355dd1fab458cd8ac6dddadb84c6cba9b65af284": {
									"entryPoint": 5212,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 4433,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3651,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:16090:5",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:5",
														"type": ""
													}
												],
												"src": "7:75:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:5",
														"type": ""
													}
												],
												"src": "334:77:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:5"
															},
															"nodeType": "YulIf",
															"src": "470:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:5",
														"type": ""
													}
												],
												"src": "417:122:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "597:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "607:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "616:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "645:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "645:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "575:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "583:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "591:5:5",
														"type": ""
													}
												],
												"src": "545:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "773:391:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "819:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "821:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "821:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "821:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "794:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "803:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "790:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "790:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "815:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "786:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "786:32:5"
															},
															"nodeType": "YulIf",
															"src": "783:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "912:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "927:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "941:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "931:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "956:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "991:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1002:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "987:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "987:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1011:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "966:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "966:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "956:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1039:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1054:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1068:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1058:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1084:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1119:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1130:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1115:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1115:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1139:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1094:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1094:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1084:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "735:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "746:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "758:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "766:6:5",
														"type": ""
													}
												],
												"src": "690:474:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1236:263:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1282:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1284:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1284:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1284:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1257:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1266:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1253:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1253:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1278:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1249:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1249:32:5"
															},
															"nodeType": "YulIf",
															"src": "1246:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "1375:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1390:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1404:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1394:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1419:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1454:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1465:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1450:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1450:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1474:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1429:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1429:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1419:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1206:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1217:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1229:6:5",
														"type": ""
													}
												],
												"src": "1170:329:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1570:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1587:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1610:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1592:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1592:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1580:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1580:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1580:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1558:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1565:3:5",
														"type": ""
													}
												],
												"src": "1505:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1727:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1737:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1749:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1760:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1745:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1745:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1737:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1817:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1830:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1841:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1826:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1826:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1773:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1773:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1773:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1699:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1711:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1722:4:5",
														"type": ""
													}
												],
												"src": "1629:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1902:81:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1912:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1927:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1934:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1923:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1923:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1912:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1884:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1894:7:5",
														"type": ""
													}
												],
												"src": "1857:126:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2021:28:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2031:12:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2038:5:5"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "2031:3:5"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2007:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "2017:3:5",
														"type": ""
													}
												],
												"src": "1989:60:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2115:82:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2125:66:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2183:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nodeType": "YulIdentifier",
																					"src": "2165:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2165:24:5"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "2156:8:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2156:34:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2138:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2138:53:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "2125:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2095:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "2105:9:5",
														"type": ""
													}
												],
												"src": "2055:142:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2263:66:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2273:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2317:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2286:30:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2286:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "2273:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2243:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "2253:9:5",
														"type": ""
													}
												],
												"src": "2203:126:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2413:66:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2423:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2467:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2436:30:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2436:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "2423:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_ICurvePool_$736_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2393:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "2403:9:5",
														"type": ""
													}
												],
												"src": "2335:144:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2568:84:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2585:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2639:5:5"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_ICurvePool_$736_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2590:48:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2590:55:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2578:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2578:68:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2578:68:5"
														}
													]
												},
												"name": "abi_encode_t_contract$_ICurvePool_$736_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2556:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2563:3:5",
														"type": ""
													}
												],
												"src": "2485:167:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2774:142:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2784:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2796:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2807:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2792:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2792:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2784:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2882:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2895:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2906:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2891:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2891:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_ICurvePool_$736_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2820:61:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2820:89:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2820:89:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ICurvePool_$736__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2746:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2758:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2769:4:5",
														"type": ""
													}
												],
												"src": "2658:258:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3001:66:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3011:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3055:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "3024:30:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3024:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "3011:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_ISwapRouter_$711_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2981:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "2991:9:5",
														"type": ""
													}
												],
												"src": "2922:145:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3157:85:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3174:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3229:5:5"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_ISwapRouter_$711_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3179:49:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3179:56:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3167:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3167:69:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3167:69:5"
														}
													]
												},
												"name": "abi_encode_t_contract$_ISwapRouter_$711_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3145:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3152:3:5",
														"type": ""
													}
												],
												"src": "3073:169:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3365:143:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3375:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3387:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3398:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3383:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3383:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3375:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3474:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3487:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3498:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3483:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3483:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_ISwapRouter_$711_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3411:62:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3411:90:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3411:90:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ISwapRouter_$711__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3337:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3349:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3360:4:5",
														"type": ""
													}
												],
												"src": "3248:260:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3567:32:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3577:16:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3588:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3577:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_0_by_1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3549:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3559:7:5",
														"type": ""
													}
												],
												"src": "3514:85:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3649:48:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3659:32:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3681:2:5",
																		"type": "",
																		"value": "15"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3685:5:5"
																	}
																],
																"functionName": {
																	"name": "signextend",
																	"nodeType": "YulIdentifier",
																	"src": "3670:10:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3670:21:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3659:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int128",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3631:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3641:7:5",
														"type": ""
													}
												],
												"src": "3605:92:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3770:89:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3780:73:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3845:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_0_by_1",
																					"nodeType": "YulIdentifier",
																					"src": "3819:25:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3819:32:5"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "3810:8:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3810:42:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int128",
																	"nodeType": "YulIdentifier",
																	"src": "3793:16:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3793:60:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "3780:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_0_by_1_to_t_int128",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3750:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "3760:9:5",
														"type": ""
													}
												],
												"src": "3703:156:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3937:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3954:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3997:5:5"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_0_by_1_to_t_int128",
																			"nodeType": "YulIdentifier",
																			"src": "3959:37:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3959:44:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3947:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3947:57:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3947:57:5"
														}
													]
												},
												"name": "abi_encode_t_rational_0_by_1_to_t_int128_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3925:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3932:3:5",
														"type": ""
													}
												],
												"src": "3865:145:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4069:32:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4079:16:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4090:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4079:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_1_by_1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4051:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4061:7:5",
														"type": ""
													}
												],
												"src": "4016:85:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4174:89:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4184:73:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4249:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_1_by_1",
																					"nodeType": "YulIdentifier",
																					"src": "4223:25:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4223:32:5"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "4214:8:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4214:42:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int128",
																	"nodeType": "YulIdentifier",
																	"src": "4197:16:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4197:60:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "4184:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_1_by_1_to_t_int128",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4154:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "4164:9:5",
														"type": ""
													}
												],
												"src": "4107:156:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4341:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4358:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4401:5:5"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_1_by_1_to_t_int128",
																			"nodeType": "YulIdentifier",
																			"src": "4363:37:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4363:44:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4351:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4351:57:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4351:57:5"
														}
													]
												},
												"name": "abi_encode_t_rational_1_by_1_to_t_int128_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4329:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4336:3:5",
														"type": ""
													}
												],
												"src": "4269:145:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4616:385:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4626:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4638:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4649:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4634:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4634:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4626:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4714:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4727:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4738:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4723:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4723:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_0_by_1_to_t_int128_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4663:50:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4663:78:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4663:78:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4802:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4815:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4826:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4811:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4811:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_1_by_1_to_t_int128_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4751:50:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4751:79:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4751:79:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "4884:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4897:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4908:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4893:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4893:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4840:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4840:72:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4840:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "4966:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4979:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4990:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4975:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4975:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4922:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4922:72:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4922:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_0_by_1_t_rational_1_by_1_t_uint256_t_uint256__to_t_int128_t_int128_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4564:9:5",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4576:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4584:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4592:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4600:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4611:4:5",
														"type": ""
													}
												],
												"src": "4420:581:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5070:80:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5080:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5095:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5089:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5089:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "5080:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5138:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5111:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5111:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5111:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5048:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5056:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5064:5:5",
														"type": ""
													}
												],
												"src": "5007:143:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5233:274:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5279:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5281:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5281:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5281:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5254:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5263:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5250:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5250:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5275:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5246:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5246:32:5"
															},
															"nodeType": "YulIf",
															"src": "5243:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "5372:128:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5387:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5401:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5391:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5416:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5462:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5473:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5458:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5458:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5482:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "5426:31:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5426:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5416:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5203:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5214:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5226:6:5",
														"type": ""
													}
												],
												"src": "5156:351:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5681:302:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5691:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5703:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5714:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5699:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5699:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5691:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5778:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5791:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5802:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5787:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5787:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_0_by_1_to_t_int128_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5727:50:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5727:78:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5727:78:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5866:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5879:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5890:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5875:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5875:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_1_by_1_to_t_int128_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5815:50:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5815:79:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5815:79:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "5948:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5961:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5972:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5957:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5957:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5904:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5904:72:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5904:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_0_by_1_t_rational_1_by_1_t_uint256__to_t_int128_t_int128_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5637:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5649:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5657:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5665:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5676:4:5",
														"type": ""
													}
												],
												"src": "5513:470:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6034:51:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6044:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6073:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "6055:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6055:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "6044:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6016:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "6026:7:5",
														"type": ""
													}
												],
												"src": "5989:96:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6156:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6173:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6196:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6178:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6178:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6166:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6166:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6166:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6144:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6151:3:5",
														"type": ""
													}
												],
												"src": "6091:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6341:206:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6351:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6363:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6374:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6359:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6359:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6351:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6431:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6444:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6455:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6440:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6440:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6387:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6387:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6387:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6512:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6525:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6536:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6521:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6521:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6468:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6468:72:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6468:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6305:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6317:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6325:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6336:4:5",
														"type": ""
													}
												],
												"src": "6215:332:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6595:48:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6605:32:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6630:5:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "6623:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6623:13:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6616:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6616:21:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "6605:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6577:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "6587:7:5",
														"type": ""
													}
												],
												"src": "6553:90:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6689:76:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6743:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6752:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6755:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6745:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6745:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6745:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6712:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6734:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "6719:14:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6719:21:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6709:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6709:32:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6702:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6702:40:5"
															},
															"nodeType": "YulIf",
															"src": "6699:60:5"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6682:5:5",
														"type": ""
													}
												],
												"src": "6649:116:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6831:77:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6841:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6856:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6850:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6850:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "6841:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6896:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "6872:23:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6872:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6872:30:5"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6809:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6817:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6825:5:5",
														"type": ""
													}
												],
												"src": "6771:137:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6988:271:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7034:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "7036:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7036:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7036:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7009:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7018:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7005:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7005:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7030:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7001:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7001:32:5"
															},
															"nodeType": "YulIf",
															"src": "6998:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "7127:125:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7142:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7156:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7146:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7171:71:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7214:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7225:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7210:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7210:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7234:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "7181:28:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7181:61:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7171:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6958:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6969:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6981:6:5",
														"type": ""
													}
												],
												"src": "6914:345:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7333:90:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7343:74:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7409:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_0_by_1",
																					"nodeType": "YulIdentifier",
																					"src": "7383:25:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7383:32:5"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "7374:8:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7374:42:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7356:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7356:61:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "7343:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_0_by_1_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7313:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "7323:9:5",
														"type": ""
													}
												],
												"src": "7265:158:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7502:74:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7519:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7563:5:5"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_0_by_1_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "7524:38:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7524:45:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7512:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7512:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7512:58:5"
														}
													]
												},
												"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7490:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7497:3:5",
														"type": ""
													}
												],
												"src": "7429:147:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7786:393:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7796:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7808:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7819:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7804:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7804:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7796:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7884:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7897:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7908:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7893:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7893:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_1_by_1_to_t_int128_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7833:50:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7833:78:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7833:78:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7972:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7985:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7996:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7981:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7981:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_0_by_1_to_t_int128_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7921:50:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7921:79:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7921:79:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "8054:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8067:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8078:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8063:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8063:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8010:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8010:72:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8010:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "8144:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8157:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8168:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8153:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8153:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8092:51:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8092:80:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8092:80:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1_t_rational_0_by_1_t_uint256_t_rational_0_by_1__to_t_int128_t_int128_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7734:9:5",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "7746:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7754:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7762:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7770:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7781:4:5",
														"type": ""
													}
												],
												"src": "7582:597:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8240:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8257:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8280:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "8262:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8262:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8250:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8250:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8250:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8228:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8235:3:5",
														"type": ""
													}
												],
												"src": "8185:108:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8343:47:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8353:31:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8368:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8375:8:5",
																		"type": "",
																		"value": "0xffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "8364:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8364:20:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "8353:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint24",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8325:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "8335:7:5",
														"type": ""
													}
												],
												"src": "8299:91:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8449:52:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8466:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8488:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint24",
																			"nodeType": "YulIdentifier",
																			"src": "8471:16:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8471:23:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8459:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8459:36:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8459:36:5"
														}
													]
												},
												"name": "abi_encode_t_uint24_to_t_uint24",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8437:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8444:3:5",
														"type": ""
													}
												],
												"src": "8396:105:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8562:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8579:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8602:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "8584:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8584:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8572:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8572:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8572:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8550:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8557:3:5",
														"type": ""
													}
												],
												"src": "8507:108:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8676:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8693:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8716:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint160",
																			"nodeType": "YulIdentifier",
																			"src": "8698:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8698:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8686:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8686:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8686:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8664:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8671:3:5",
														"type": ""
													}
												],
												"src": "8621:108:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8973:1479:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8983:28:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8999:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9004:6:5",
																		"type": "",
																		"value": "0x0100"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8995:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8995:16:5"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "8987:4:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9021:167:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9059:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "9089:5:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9096:4:5",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9085:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9085:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "9079:5:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9079:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "9063:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "9149:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "9167:3:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9172:4:5",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9163:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9163:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9115:33:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9115:63:5"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "9115:63:5"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9198:168:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9237:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "9267:5:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9274:4:5",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9263:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9263:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "9257:5:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9257:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "9241:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "9327:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "9345:3:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9350:4:5",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9341:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9341:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9293:33:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9293:63:5"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "9293:63:5"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9376:161:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9410:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "9440:5:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9447:4:5",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9436:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9436:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "9430:5:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9430:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "9414:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "9498:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "9516:3:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9521:4:5",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9512:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9512:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint24_to_t_uint24",
																			"nodeType": "YulIdentifier",
																			"src": "9466:31:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9466:61:5"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "9466:61:5"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9547:169:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9587:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "9617:5:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9624:4:5",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9613:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9613:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "9607:5:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9607:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "9591:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "9677:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "9695:3:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9700:4:5",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9691:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9691:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9643:33:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9643:63:5"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "9643:63:5"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9726:168:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9765:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "9795:5:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9802:4:5",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9791:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9791:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "9785:5:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9785:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "9769:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "9855:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "9873:3:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9878:4:5",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9869:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9869:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "9821:33:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9821:63:5"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "9821:63:5"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9904:168:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9943:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "9973:5:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9980:4:5",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9969:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9969:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "9963:5:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9963:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "9947:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "10033:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "10051:3:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10056:4:5",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10047:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10047:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "9999:33:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9999:63:5"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "9999:63:5"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "10082:176:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10129:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "10159:5:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10166:4:5",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10155:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10155:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "10149:5:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10149:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "10133:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "10219:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "10237:3:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10242:4:5",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10233:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10233:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "10185:33:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10185:63:5"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "10185:63:5"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "10268:177:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10316:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "10346:5:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10353:4:5",
																						"type": "",
																						"value": "0xe0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10342:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10342:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "10336:5:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10336:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "10320:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "10406:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "10424:3:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10429:4:5",
																						"type": "",
																						"value": "0xe0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10420:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10420:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint160_to_t_uint160",
																			"nodeType": "YulIdentifier",
																			"src": "10372:33:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10372:63:5"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "10372:63:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_ExactInputSingleParams_$677_memory_ptr_to_t_struct$_ExactInputSingleParams_$677_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8960:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8967:3:5",
														"type": ""
													}
												],
												"src": "8829:1623:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10634:203:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10644:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10656:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10667:3:5",
																		"type": "",
																		"value": "256"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10652:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10652:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10644:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10803:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10816:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10827:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10812:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10812:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_ExactInputSingleParams_$677_memory_ptr_to_t_struct$_ExactInputSingleParams_$677_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10681:121:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10681:149:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10681:149:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_ExactInputSingleParams_$677_memory_ptr__to_t_struct$_ExactInputSingleParams_$677_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10606:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10618:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10629:4:5",
														"type": ""
													}
												],
												"src": "10458:379:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10997:288:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11007:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11019:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11030:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11015:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11015:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11007:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11087:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11100:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11111:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11096:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11096:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11043:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11043:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11043:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11168:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11181:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11192:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11177:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11177:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11124:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11124:72:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11124:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "11250:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11263:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11274:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11259:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11259:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11206:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11206:72:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11206:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10953:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "10965:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10973:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10981:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10992:4:5",
														"type": ""
													}
												],
												"src": "10843:442:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11533:1481:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11543:28:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11559:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11564:6:5",
																		"type": "",
																		"value": "0x0100"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11555:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11555:16:5"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "11547:4:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "11581:167:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11619:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "11649:5:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11656:4:5",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11645:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11645:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "11639:5:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11639:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "11623:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "11709:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "11727:3:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11732:4:5",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11723:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11723:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "11675:33:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11675:63:5"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "11675:63:5"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "11758:168:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11797:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "11827:5:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11834:4:5",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11823:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11823:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "11817:5:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11817:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "11801:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "11887:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "11905:3:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11910:4:5",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11901:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11901:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "11853:33:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11853:63:5"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "11853:63:5"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "11936:163:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11970:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "12000:5:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12007:4:5",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11996:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11996:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "11990:5:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11990:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "11974:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "12060:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "12078:3:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12083:4:5",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12074:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12074:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "12026:33:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12026:63:5"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "12026:63:5"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "12109:168:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "12148:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "12178:5:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12185:4:5",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12174:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12174:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "12168:5:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12168:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "12152:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "12238:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "12256:3:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12261:4:5",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12252:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12252:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "12204:33:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12204:63:5"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "12204:63:5"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "12287:169:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "12327:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "12357:5:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12364:4:5",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12353:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12353:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "12347:5:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12347:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "12331:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "12417:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "12435:3:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12440:4:5",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12431:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12431:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "12383:33:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12383:63:5"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "12383:63:5"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "12466:169:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "12506:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "12536:5:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12543:4:5",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12532:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12532:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "12526:5:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12526:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "12510:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "12596:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "12614:3:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12619:4:5",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12610:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12610:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "12562:33:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12562:63:5"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "12562:63:5"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "12645:175:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "12691:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "12721:5:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12728:4:5",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12717:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12717:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "12711:5:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12711:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "12695:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "12781:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "12799:3:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12804:4:5",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12795:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12795:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "12747:33:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12747:63:5"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "12747:63:5"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "12830:177:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "12878:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "12908:5:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12915:4:5",
																						"type": "",
																						"value": "0xe0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12904:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12904:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "12898:5:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12898:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "12882:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "12968:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "12986:3:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12991:4:5",
																						"type": "",
																						"value": "0xe0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12982:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12982:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint160_to_t_uint160",
																			"nodeType": "YulIdentifier",
																			"src": "12934:33:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12934:63:5"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "12934:63:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_ExactOutputSingleParams_$702_memory_ptr_to_t_struct$_ExactOutputSingleParams_$702_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11520:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11527:3:5",
														"type": ""
													}
												],
												"src": "11387:1627:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13198:205:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13208:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13220:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13231:3:5",
																		"type": "",
																		"value": "256"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13216:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13216:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13208:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13369:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13382:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13393:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13378:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13378:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_ExactOutputSingleParams_$702_memory_ptr_to_t_struct$_ExactOutputSingleParams_$702_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13245:123:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13245:151:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13245:151:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_ExactOutputSingleParams_$702_memory_ptr__to_t_struct$_ExactOutputSingleParams_$702_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13170:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13182:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13193:4:5",
														"type": ""
													}
												],
												"src": "13020:383:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13535:206:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13545:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13557:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13568:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13553:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13553:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13545:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13625:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13638:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13649:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13634:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13634:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13581:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13581:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13581:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "13706:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13719:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13730:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13715:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13715:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13662:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13662:72:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13662:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13499:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13511:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13519:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13530:4:5",
														"type": ""
													}
												],
												"src": "13409:332:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13845:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13855:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13867:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13878:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13863:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13863:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13855:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13935:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13948:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13959:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13944:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13944:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13891:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13891:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13891:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13817:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13829:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13840:4:5",
														"type": ""
													}
												],
												"src": "13747:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14071:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14088:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14093:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14081:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14081:19:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14081:19:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14109:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14128:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14133:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14124:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14124:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "14109:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14043:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "14048:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "14059:11:5",
														"type": ""
													}
												],
												"src": "13975:169:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14256:61:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14278:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14286:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14274:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14274:14:5"
																	},
																	{
																		"hexValue": "416c6c6f77616e636520746f6f206c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14290:19:5",
																		"type": "",
																		"value": "Allowance too low"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14267:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14267:43:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14267:43:5"
														}
													]
												},
												"name": "store_literal_in_memory_9df0e97ee766a49f7ac27fed355dd1fab458cd8ac6dddadb84c6cba9b65af284",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14248:6:5",
														"type": ""
													}
												],
												"src": "14150:167:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14469:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14479:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14545:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14550:2:5",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14486:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14486:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14479:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14651:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9df0e97ee766a49f7ac27fed355dd1fab458cd8ac6dddadb84c6cba9b65af284",
																	"nodeType": "YulIdentifier",
																	"src": "14562:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14562:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14562:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14664:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14675:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14680:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14671:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14671:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14664:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9df0e97ee766a49f7ac27fed355dd1fab458cd8ac6dddadb84c6cba9b65af284_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14457:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14465:3:5",
														"type": ""
													}
												],
												"src": "14323:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14866:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14876:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14888:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14899:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14884:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14884:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14876:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14923:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14934:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14919:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14919:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14942:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14948:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14938:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14938:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14912:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14912:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14912:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14968:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15102:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9df0e97ee766a49f7ac27fed355dd1fab458cd8ac6dddadb84c6cba9b65af284_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14976:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14976:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14968:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9df0e97ee766a49f7ac27fed355dd1fab458cd8ac6dddadb84c6cba9b65af284__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14846:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14861:4:5",
														"type": ""
													}
												],
												"src": "14695:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15226:64:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15248:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15256:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15244:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15244:14:5"
																	},
																	{
																		"hexValue": "496e73756666696369656e742062616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15260:22:5",
																		"type": "",
																		"value": "Insufficient balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15237:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15237:46:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15237:46:5"
														}
													]
												},
												"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15218:6:5",
														"type": ""
													}
												],
												"src": "15120:170:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15442:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15452:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15518:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15523:2:5",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15459:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15459:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15452:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15624:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																	"nodeType": "YulIdentifier",
																	"src": "15535:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15535:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15535:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15637:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15648:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15653:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15644:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15644:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15637:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15430:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15438:3:5",
														"type": ""
													}
												],
												"src": "15296:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15839:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15849:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15861:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15872:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15857:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15857:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15849:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15896:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15907:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15892:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15892:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15915:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15921:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15911:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15911:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15885:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15885:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15885:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15941:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16075:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15949:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15949:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15941:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15819:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15834:4:5",
														"type": ""
													}
												],
												"src": "15668:419:5"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ICurvePool_$736_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ICurvePool_$736_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ICurvePool_$736_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ICurvePool_$736__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ICurvePool_$736_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function convert_t_contract$_ISwapRouter_$711_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ISwapRouter_$711_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ISwapRouter_$711_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ISwapRouter_$711__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ISwapRouter_$711_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_rational_0_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_int128(value) -> cleaned {\n        cleaned := signextend(15, value)\n    }\n\n    function convert_t_rational_0_by_1_to_t_int128(value) -> converted {\n        converted := cleanup_t_int128(identity(cleanup_t_rational_0_by_1(value)))\n    }\n\n    function abi_encode_t_rational_0_by_1_to_t_int128_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_0_by_1_to_t_int128(value))\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_rational_1_by_1_to_t_int128(value) -> converted {\n        converted := cleanup_t_int128(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_int128_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_int128(value))\n    }\n\n    function abi_encode_tuple_t_rational_0_by_1_t_rational_1_by_1_t_uint256_t_uint256__to_t_int128_t_int128_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_rational_0_by_1_to_t_int128_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_rational_1_by_1_to_t_int128_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_rational_0_by_1_t_rational_1_by_1_t_uint256__to_t_int128_t_int128_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_rational_0_by_1_to_t_int128_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_rational_1_by_1_to_t_int128_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function convert_t_rational_0_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_rational_0_by_1(value)))\n    }\n\n    function abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_0_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1_t_rational_0_by_1_t_uint256_t_rational_0_by_1__to_t_int128_t_int128_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_rational_1_by_1_to_t_int128_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_rational_0_by_1_to_t_int128_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function cleanup_t_uint24(value) -> cleaned {\n        cleaned := and(value, 0xffffff)\n    }\n\n    function abi_encode_t_uint24_to_t_uint24(value, pos) {\n        mstore(pos, cleanup_t_uint24(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint160_to_t_uint160(value, pos) {\n        mstore(pos, cleanup_t_uint160(value))\n    }\n\n    // struct ISwapRouter.ExactInputSingleParams -> struct ISwapRouter.ExactInputSingleParams\n    function abi_encode_t_struct$_ExactInputSingleParams_$677_memory_ptr_to_t_struct$_ExactInputSingleParams_$677_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x0100)\n\n        {\n            // tokenIn\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // tokenOut\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // fee\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint24_to_t_uint24(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // recipient\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // deadline\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // amountIn\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // amountOutMinimum\n\n            let memberValue0 := mload(add(value, 0xc0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xc0))\n        }\n\n        {\n            // sqrtPriceLimitX96\n\n            let memberValue0 := mload(add(value, 0xe0))\n            abi_encode_t_uint160_to_t_uint160(memberValue0, add(pos, 0xe0))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_ExactInputSingleParams_$677_memory_ptr__to_t_struct$_ExactInputSingleParams_$677_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 256)\n\n        abi_encode_t_struct$_ExactInputSingleParams_$677_memory_ptr_to_t_struct$_ExactInputSingleParams_$677_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    // struct ISwapRouter.ExactOutputSingleParams -> struct ISwapRouter.ExactOutputSingleParams\n    function abi_encode_t_struct$_ExactOutputSingleParams_$702_memory_ptr_to_t_struct$_ExactOutputSingleParams_$702_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x0100)\n\n        {\n            // tokenIn\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // tokenOut\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // fee\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // deadline\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // recipient\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // amountOut\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // amountInMaximum\n\n            let memberValue0 := mload(add(value, 0xc0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xc0))\n        }\n\n        {\n            // sqrtPriceLimitX96\n\n            let memberValue0 := mload(add(value, 0xe0))\n            abi_encode_t_uint160_to_t_uint160(memberValue0, add(pos, 0xe0))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_ExactOutputSingleParams_$702_memory_ptr__to_t_struct$_ExactOutputSingleParams_$702_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 256)\n\n        abi_encode_t_struct$_ExactOutputSingleParams_$702_memory_ptr_to_t_struct$_ExactOutputSingleParams_$702_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_9df0e97ee766a49f7ac27fed355dd1fab458cd8ac6dddadb84c6cba9b65af284(memPtr) {\n\n        mstore(add(memPtr, 0), \"Allowance too low\")\n\n    }\n\n    function abi_encode_t_stringliteral_9df0e97ee766a49f7ac27fed355dd1fab458cd8ac6dddadb84c6cba9b65af284_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_9df0e97ee766a49f7ac27fed355dd1fab458cd8ac6dddadb84c6cba9b65af284(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9df0e97ee766a49f7ac27fed355dd1fab458cd8ac6dddadb84c6cba9b65af284__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9df0e97ee766a49f7ac27fed355dd1fab458cd8ac6dddadb84c6cba9b65af284_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"743": [
									{
										"length": 32,
										"start": 897
									},
									{
										"length": 32,
										"start": 1473
									},
									{
										"length": 32,
										"start": 1832
									},
									{
										"length": 32,
										"start": 2151
									},
									{
										"length": 32,
										"start": 3157
									},
									{
										"length": 32,
										"start": 3481
									}
								],
								"746": [
									{
										"length": 32,
										"start": 531
									},
									{
										"length": 32,
										"start": 697
									},
									{
										"length": 32,
										"start": 861
									},
									{
										"length": 32,
										"start": 981
									},
									{
										"length": 32,
										"start": 1109
									}
								]
							},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x85 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x87B8D225 GT PUSH2 0x58 JUMPI DUP1 PUSH4 0x87B8D225 EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0xC477B581 EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0xC9EB5E5A EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0xD22CC067 EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0xE4EAAB96 EQ PUSH2 0x1E9 JUMPI PUSH2 0x85 JUMP JUMPDEST DUP1 PUSH4 0x4907BBB EQ PUSH2 0x89 JUMPI DUP1 PUSH4 0x1540E747 EQ PUSH2 0xB1 JUMPI DUP1 PUSH4 0x218751B2 EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x735DE9F7 EQ PUSH2 0x117 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x94 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xAF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAA SWAP2 SWAP1 PUSH2 0xE6D JUMP JUMPDEST PUSH2 0x211 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xD7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD2 SWAP2 SWAP1 PUSH2 0xEAB JUMP JUMPDEST PUSH2 0x2B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE4 SWAP2 SWAP1 PUSH2 0xEE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x101 PUSH2 0x35B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10E SWAP2 SWAP1 PUSH2 0xF78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x122 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x12B PUSH2 0x37F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x138 SWAP2 SWAP1 PUSH2 0xFB1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x167 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x162 SWAP2 SWAP1 PUSH2 0xE6D JUMP JUMPDEST PUSH2 0x3A3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x174 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x18F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18A SWAP2 SWAP1 PUSH2 0xEAB JUMP JUMPDEST PUSH2 0x4F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19C SWAP2 SWAP1 PUSH2 0xEE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0xE6D JUMP JUMPDEST PUSH2 0x664 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0xEAB JUMP JUMPDEST PUSH2 0x904 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x20F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20A SWAP2 SWAP1 PUSH2 0xE6D JUMP JUMPDEST PUSH2 0xB91 JUMP JUMPDEST STOP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3DF02124 PUSH0 PUSH1 0x1 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x271 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1048 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x28D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2B1 SWAP2 SWAP1 PUSH2 0x109F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5E0D443F PUSH0 PUSH1 0x1 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x315 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x10CA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x330 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x354 SWAP2 SWAP1 PUSH2 0x109F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH32 0x0 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x412 SWAP3 SWAP2 SWAP1 PUSH2 0x111F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x42E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x452 SWAP2 SWAP1 PUSH2 0x117B JUMP JUMPDEST POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3DF02124 PUSH1 0x1 PUSH0 DUP6 PUSH0 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B3 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x11D6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4CF JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4F3 SWAP2 SWAP1 PUSH2 0x109F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 PUSH20 0xA0B86991C6218B36C1D19D4A2E9EB0CE3606EB48 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBB8 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x414BF389 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x618 SWAP2 SWAP1 PUSH2 0x1303 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x634 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x658 SWAP2 SWAP1 PUSH2 0x109F JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x131D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6D1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6F5 SWAP2 SWAP1 PUSH2 0x117B JUMP JUMPDEST POP PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH32 0x0 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x765 SWAP3 SWAP2 SWAP1 PUSH2 0x111F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x781 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7A5 SWAP2 SWAP1 PUSH2 0x117B JUMP JUMPDEST POP PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 PUSH20 0xA0B86991C6218B36C1D19D4A2E9EB0CE3606EB48 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBB8 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x26A966C4 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8BE SWAP2 SWAP1 PUSH2 0x13F2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8DA JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8FE SWAP2 SWAP1 PUSH2 0x109F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xA0B86991C6218B36C1D19D4A2E9EB0CE3606EB48 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x954 SWAP3 SWAP2 SWAP1 PUSH2 0x140C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x96F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x993 SWAP2 SWAP1 PUSH2 0x109F JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xA0B86991C6218B36C1D19D4A2E9EB0CE3606EB48 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E3 SWAP2 SWAP1 PUSH2 0x1433 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9FE JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA22 SWAP2 SWAP1 PUSH2 0x109F JUMP JUMPDEST SWAP1 POP DUP3 DUP3 LT ISZERO PUSH2 0xA67 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA5E SWAP1 PUSH2 0x14A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xAAA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAA1 SWAP1 PUSH2 0x150E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0xA0B86991C6218B36C1D19D4A2E9EB0CE3606EB48 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAFB SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x131D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB17 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB3B SWAP2 SWAP1 PUSH2 0x117B JUMP JUMPDEST POP PUSH0 PUSH2 0xB46 DUP5 PUSH2 0x4F8 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xB52 DUP6 PUSH2 0x2B6 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xB75 JUMPI PUSH2 0xB66 DUP6 DUP3 PUSH2 0x211 JUMP JUMPDEST PUSH2 0xB70 DUP6 DUP3 PUSH2 0x664 JUMP JUMPDEST PUSH2 0xB8A JUMP JUMPDEST PUSH2 0xB7F DUP6 DUP4 PUSH2 0xB91 JUMP JUMPDEST PUSH2 0xB89 DUP3 DUP7 PUSH2 0x3A3 JUMP JUMPDEST JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH20 0xA0B86991C6218B36C1D19D4A2E9EB0CE3606EB48 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBE2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x131D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBFE JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC22 SWAP2 SWAP1 PUSH2 0x117B JUMP JUMPDEST POP PUSH20 0xA0B86991C6218B36C1D19D4A2E9EB0CE3606EB48 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH32 0x0 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC92 SWAP3 SWAP2 SWAP1 PUSH2 0x111F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCAE JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCD2 SWAP2 SWAP1 PUSH2 0x117B JUMP JUMPDEST POP PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 PUSH20 0xA0B86991C6218B36C1D19D4A2E9EB0CE3606EB48 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBB8 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x414BF389 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDF0 SWAP2 SWAP1 PUSH2 0x1303 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE0C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE30 SWAP2 SWAP1 PUSH2 0x109F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE4C DUP2 PUSH2 0xE3A JUMP JUMPDEST DUP2 EQ PUSH2 0xE56 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE67 DUP2 PUSH2 0xE43 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE83 JUMPI PUSH2 0xE82 PUSH2 0xE36 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE90 DUP6 DUP3 DUP7 ADD PUSH2 0xE59 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xEA1 DUP6 DUP3 DUP7 ADD PUSH2 0xE59 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEC0 JUMPI PUSH2 0xEBF PUSH2 0xE36 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xECD DUP5 DUP3 DUP6 ADD PUSH2 0xE59 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xEDF DUP2 PUSH2 0xE3A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEF8 PUSH0 DUP4 ADD DUP5 PUSH2 0xED6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF40 PUSH2 0xF3B PUSH2 0xF36 DUP5 PUSH2 0xEFE JUMP JUMPDEST PUSH2 0xF1D JUMP JUMPDEST PUSH2 0xEFE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF51 DUP3 PUSH2 0xF26 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF62 DUP3 PUSH2 0xF47 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF72 DUP2 PUSH2 0xF58 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF8B PUSH0 DUP4 ADD DUP5 PUSH2 0xF69 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xF9B DUP3 PUSH2 0xF47 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFAB DUP2 PUSH2 0xF91 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFC4 PUSH0 DUP4 ADD DUP5 PUSH2 0xFA2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0xF SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xFF9 PUSH2 0xFF4 PUSH2 0xFEF DUP5 PUSH2 0xFCA JUMP JUMPDEST PUSH2 0xF1D JUMP JUMPDEST PUSH2 0xFD3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1009 DUP2 PUSH2 0xFDF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1032 PUSH2 0x102D PUSH2 0x1028 DUP5 PUSH2 0x100F JUMP JUMPDEST PUSH2 0xF1D JUMP JUMPDEST PUSH2 0xFD3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1042 DUP2 PUSH2 0x1018 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x105B PUSH0 DUP4 ADD DUP8 PUSH2 0x1000 JUMP JUMPDEST PUSH2 0x1068 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1039 JUMP JUMPDEST PUSH2 0x1075 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xED6 JUMP JUMPDEST PUSH2 0x1082 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0xED6 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1099 DUP2 PUSH2 0xE43 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10B4 JUMPI PUSH2 0x10B3 PUSH2 0xE36 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x10C1 DUP5 DUP3 DUP6 ADD PUSH2 0x108B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x10DD PUSH0 DUP4 ADD DUP7 PUSH2 0x1000 JUMP JUMPDEST PUSH2 0x10EA PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1039 JUMP JUMPDEST PUSH2 0x10F7 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xED6 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1109 DUP3 PUSH2 0xEFE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1119 DUP2 PUSH2 0x10FF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1132 PUSH0 DUP4 ADD DUP6 PUSH2 0x1110 JUMP JUMPDEST PUSH2 0x113F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xED6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x115A DUP2 PUSH2 0x1146 JUMP JUMPDEST DUP2 EQ PUSH2 0x1164 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1175 DUP2 PUSH2 0x1151 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1190 JUMPI PUSH2 0x118F PUSH2 0xE36 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x119D DUP5 DUP3 DUP6 ADD PUSH2 0x1167 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x11C0 PUSH2 0x11BB PUSH2 0x11B6 DUP5 PUSH2 0xFCA JUMP JUMPDEST PUSH2 0xF1D JUMP JUMPDEST PUSH2 0xE3A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11D0 DUP2 PUSH2 0x11A6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x11E9 PUSH0 DUP4 ADD DUP8 PUSH2 0x1039 JUMP JUMPDEST PUSH2 0x11F6 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1000 JUMP JUMPDEST PUSH2 0x1203 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xED6 JUMP JUMPDEST PUSH2 0x1210 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x11C7 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1222 DUP2 PUSH2 0x10FF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x123F DUP2 PUSH2 0x1228 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x124E DUP2 PUSH2 0xE3A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x125D DUP2 PUSH2 0xEFE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x100 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x1278 PUSH0 DUP6 ADD DUP3 PUSH2 0x1219 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x128B PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x1219 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x129E PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x1236 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x12B1 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x1219 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x12C4 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x1245 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x12D7 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x1245 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x12EA PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x1245 JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x12FD PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0x1254 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0x1317 PUSH0 DUP4 ADD DUP5 PUSH2 0x1263 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1330 PUSH0 DUP4 ADD DUP7 PUSH2 0x1110 JUMP JUMPDEST PUSH2 0x133D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1110 JUMP JUMPDEST PUSH2 0x134A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xED6 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x100 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x1367 PUSH0 DUP6 ADD DUP3 PUSH2 0x1219 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x137A PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x1219 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x138D PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x1245 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x13A0 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x1245 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x13B3 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x1219 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x13C6 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x1245 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x13D9 PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x1245 JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x13EC PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0x1254 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0x1406 PUSH0 DUP4 ADD DUP5 PUSH2 0x1352 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x141F PUSH0 DUP4 ADD DUP6 PUSH2 0x1110 JUMP JUMPDEST PUSH2 0x142C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1110 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1446 PUSH0 DUP4 ADD DUP5 PUSH2 0x1110 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416C6C6F77616E636520746F6F206C6F77000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1490 PUSH1 0x11 DUP4 PUSH2 0x144C JUMP JUMPDEST SWAP2 POP PUSH2 0x149B DUP3 PUSH2 0x145C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x14BD DUP2 PUSH2 0x1484 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x14F8 PUSH1 0x14 DUP4 PUSH2 0x144C JUMP JUMPDEST SWAP2 POP PUSH2 0x1503 DUP3 PUSH2 0x14C4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1525 DUP2 PUSH2 0x14EC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x21 0xEE EXTCODEHASH PUSH30 0xDE829E58CAB3D8E70CD3A80EBD2073D3700F6F7E6C28ED06FCA70446473 PUSH16 0x6C634300081400330000000000000000 ",
							"sourceMap": "1244:4165:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2564:201;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5252:149;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1349:37;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1301:42;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3432:194;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4565:683;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2770:657;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3631:928;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1912:647;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2564:201;2708:9;:18;;;2727:1;2730;2733:10;2745:12;2708:50;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2564:201;;:::o;5252:149::-;5319:7;5344:9;:16;;;5361:1;5364;5367:10;5344:34;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5337:41;;5252:149;;;:::o;1349:37::-;;;:::o;1301:42::-;;;:::o;3432:194::-;1523:42;3515:12;;;3536:9;3548:13;3515:47;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3572:9;:18;;;3591:1;3594;3597:9;3608:1;3572:38;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3432:194;;:::o;4565:683::-;4629:7;4647:48;4710:328;;;;;;;;1595:42;4710:328;;;;;;1523:42;4710:328;;;;;;4828:4;4710:328;;;;;;4860:10;4710:328;;;;;;4897:15;4710:328;;;;4939:11;4710:328;;;;4985:1;4710:328;;;;5022:1;4710:328;;;;;4647:391;;5106:17;5126:13;:30;;;5157:6;5126:38;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5106:58;;5233:9;5226:16;;;;4565:683;;;:::o;2770:657::-;1523:42;2868:17;;;2886:10;2906:4;2913:15;2868:61;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1523:42;2939:12;;;2960:13;2976:15;2939:53;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3003:49;3055:316;;;;;;;;1595:42;3055:316;;;;;;1523:42;3055:316;;;;;;3165:4;3055:316;;;;3228:15;3055:316;;;;3194:10;3055:316;;;;;;3268:12;3055:316;;;;3311:15;3055:316;;;;3359:1;3055:316;;;;;3003:368;;3381:13;:31;;;3413:6;3381:39;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2858:569;2770:657;;:::o;3631:928::-;3704:17;1595:42;3724:14;;;3739:10;3759:4;3724:41;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3704:61;;3775:15;1595:42;3793:14;;;3808:10;3793:26;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3775:44;;3851:10;3838:9;:23;;3830:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;3912:10;3901:7;:21;;3893:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;1595:42;3958:17;;;3976:10;3996:4;4003:10;3958:56;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4024:21;4048:30;4067:10;4048:18;:30::i;:::-;4024:54;;4088:19;4110:28;4127:10;4110:16;:28::i;:::-;4088:50;;4169:11;4153:13;:27;4149:387;;;4267:38;4281:10;4293:11;4267:13;:38::i;:::-;4319:49;4344:10;4356:11;4319:24;:49::i;:::-;4149:387;;;4419:50;4443:10;4455:13;4419:23;:50::i;:::-;4483:41;4498:13;4513:10;4483:14;:41::i;:::-;4149:387;3694:865;;;;3631:928;:::o;1912:647::-;1595:42;2009:17;;;2027:10;2047:4;2054:12;2009:58;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1595:42;2077:12;;;2098:13;2114:12;2077:50;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2138:48;2189:315;;;;;;;;1595:42;2189:315;;;;;;1523:42;2189:315;;;;;;2298:4;2189:315;;;;;;2327:10;2189:315;;;;;;2361:15;2189:315;;;;2400:12;2189:315;;;;2444:15;2189:315;;;;2492:1;2189:315;;;;;2138:366;;2514:13;:30;;;2545:6;2514:38;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1999:560;1912:647;;:::o;88:117:5:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:474::-;758:6;766;815:2;803:9;794:7;790:23;786:32;783:119;;;821:79;;:::i;:::-;783:119;941:1;966:53;1011:7;1002:6;991:9;987:22;966:53;:::i;:::-;956:63;;912:117;1068:2;1094:53;1139:7;1130:6;1119:9;1115:22;1094:53;:::i;:::-;1084:63;;1039:118;690:474;;;;;:::o;1170:329::-;1229:6;1278:2;1266:9;1257:7;1253:23;1249:32;1246:119;;;1284:79;;:::i;:::-;1246:119;1404:1;1429:53;1474:7;1465:6;1454:9;1450:22;1429:53;:::i;:::-;1419:63;;1375:117;1170:329;;;;:::o;1505:118::-;1592:24;1610:5;1592:24;:::i;:::-;1587:3;1580:37;1505:118;;:::o;1629:222::-;1722:4;1760:2;1749:9;1745:18;1737:26;;1773:71;1841:1;1830:9;1826:17;1817:6;1773:71;:::i;:::-;1629:222;;;;:::o;1857:126::-;1894:7;1934:42;1927:5;1923:54;1912:65;;1857:126;;;:::o;1989:60::-;2017:3;2038:5;2031:12;;1989:60;;;:::o;2055:142::-;2105:9;2138:53;2156:34;2165:24;2183:5;2165:24;:::i;:::-;2156:34;:::i;:::-;2138:53;:::i;:::-;2125:66;;2055:142;;;:::o;2203:126::-;2253:9;2286:37;2317:5;2286:37;:::i;:::-;2273:50;;2203:126;;;:::o;2335:144::-;2403:9;2436:37;2467:5;2436:37;:::i;:::-;2423:50;;2335:144;;;:::o;2485:167::-;2590:55;2639:5;2590:55;:::i;:::-;2585:3;2578:68;2485:167;;:::o;2658:258::-;2769:4;2807:2;2796:9;2792:18;2784:26;;2820:89;2906:1;2895:9;2891:17;2882:6;2820:89;:::i;:::-;2658:258;;;;:::o;2922:145::-;2991:9;3024:37;3055:5;3024:37;:::i;:::-;3011:50;;2922:145;;;:::o;3073:169::-;3179:56;3229:5;3179:56;:::i;:::-;3174:3;3167:69;3073:169;;:::o;3248:260::-;3360:4;3398:2;3387:9;3383:18;3375:26;;3411:90;3498:1;3487:9;3483:17;3474:6;3411:90;:::i;:::-;3248:260;;;;:::o;3514:85::-;3559:7;3588:5;3577:16;;3514:85;;;:::o;3605:92::-;3641:7;3685:5;3681:2;3670:21;3659:32;;3605:92;;;:::o;3703:156::-;3760:9;3793:60;3810:42;3819:32;3845:5;3819:32;:::i;:::-;3810:42;:::i;:::-;3793:60;:::i;:::-;3780:73;;3703:156;;;:::o;3865:145::-;3959:44;3997:5;3959:44;:::i;:::-;3954:3;3947:57;3865:145;;:::o;4016:85::-;4061:7;4090:5;4079:16;;4016:85;;;:::o;4107:156::-;4164:9;4197:60;4214:42;4223:32;4249:5;4223:32;:::i;:::-;4214:42;:::i;:::-;4197:60;:::i;:::-;4184:73;;4107:156;;;:::o;4269:145::-;4363:44;4401:5;4363:44;:::i;:::-;4358:3;4351:57;4269:145;;:::o;4420:581::-;4611:4;4649:3;4638:9;4634:19;4626:27;;4663:78;4738:1;4727:9;4723:17;4714:6;4663:78;:::i;:::-;4751:79;4826:2;4815:9;4811:18;4802:6;4751:79;:::i;:::-;4840:72;4908:2;4897:9;4893:18;4884:6;4840:72;:::i;:::-;4922;4990:2;4979:9;4975:18;4966:6;4922:72;:::i;:::-;4420:581;;;;;;;:::o;5007:143::-;5064:5;5095:6;5089:13;5080:22;;5111:33;5138:5;5111:33;:::i;:::-;5007:143;;;;:::o;5156:351::-;5226:6;5275:2;5263:9;5254:7;5250:23;5246:32;5243:119;;;5281:79;;:::i;:::-;5243:119;5401:1;5426:64;5482:7;5473:6;5462:9;5458:22;5426:64;:::i;:::-;5416:74;;5372:128;5156:351;;;;:::o;5513:470::-;5676:4;5714:2;5703:9;5699:18;5691:26;;5727:78;5802:1;5791:9;5787:17;5778:6;5727:78;:::i;:::-;5815:79;5890:2;5879:9;5875:18;5866:6;5815:79;:::i;:::-;5904:72;5972:2;5961:9;5957:18;5948:6;5904:72;:::i;:::-;5513:470;;;;;;:::o;5989:96::-;6026:7;6055:24;6073:5;6055:24;:::i;:::-;6044:35;;5989:96;;;:::o;6091:118::-;6178:24;6196:5;6178:24;:::i;:::-;6173:3;6166:37;6091:118;;:::o;6215:332::-;6336:4;6374:2;6363:9;6359:18;6351:26;;6387:71;6455:1;6444:9;6440:17;6431:6;6387:71;:::i;:::-;6468:72;6536:2;6525:9;6521:18;6512:6;6468:72;:::i;:::-;6215:332;;;;;:::o;6553:90::-;6587:7;6630:5;6623:13;6616:21;6605:32;;6553:90;;;:::o;6649:116::-;6719:21;6734:5;6719:21;:::i;:::-;6712:5;6709:32;6699:60;;6755:1;6752;6745:12;6699:60;6649:116;:::o;6771:137::-;6825:5;6856:6;6850:13;6841:22;;6872:30;6896:5;6872:30;:::i;:::-;6771:137;;;;:::o;6914:345::-;6981:6;7030:2;7018:9;7009:7;7005:23;7001:32;6998:119;;;7036:79;;:::i;:::-;6998:119;7156:1;7181:61;7234:7;7225:6;7214:9;7210:22;7181:61;:::i;:::-;7171:71;;7127:125;6914:345;;;;:::o;7265:158::-;7323:9;7356:61;7374:42;7383:32;7409:5;7383:32;:::i;:::-;7374:42;:::i;:::-;7356:61;:::i;:::-;7343:74;;7265:158;;;:::o;7429:147::-;7524:45;7563:5;7524:45;:::i;:::-;7519:3;7512:58;7429:147;;:::o;7582:597::-;7781:4;7819:3;7808:9;7804:19;7796:27;;7833:78;7908:1;7897:9;7893:17;7884:6;7833:78;:::i;:::-;7921:79;7996:2;7985:9;7981:18;7972:6;7921:79;:::i;:::-;8010:72;8078:2;8067:9;8063:18;8054:6;8010:72;:::i;:::-;8092:80;8168:2;8157:9;8153:18;8144:6;8092:80;:::i;:::-;7582:597;;;;;;;:::o;8185:108::-;8262:24;8280:5;8262:24;:::i;:::-;8257:3;8250:37;8185:108;;:::o;8299:91::-;8335:7;8375:8;8368:5;8364:20;8353:31;;8299:91;;;:::o;8396:105::-;8471:23;8488:5;8471:23;:::i;:::-;8466:3;8459:36;8396:105;;:::o;8507:108::-;8584:24;8602:5;8584:24;:::i;:::-;8579:3;8572:37;8507:108;;:::o;8621:::-;8698:24;8716:5;8698:24;:::i;:::-;8693:3;8686:37;8621:108;;:::o;8829:1623::-;9004:6;8999:3;8995:16;9096:4;9089:5;9085:16;9079:23;9115:63;9172:4;9167:3;9163:14;9149:12;9115:63;:::i;:::-;9021:167;9274:4;9267:5;9263:16;9257:23;9293:63;9350:4;9345:3;9341:14;9327:12;9293:63;:::i;:::-;9198:168;9447:4;9440:5;9436:16;9430:23;9466:61;9521:4;9516:3;9512:14;9498:12;9466:61;:::i;:::-;9376:161;9624:4;9617:5;9613:16;9607:23;9643:63;9700:4;9695:3;9691:14;9677:12;9643:63;:::i;:::-;9547:169;9802:4;9795:5;9791:16;9785:23;9821:63;9878:4;9873:3;9869:14;9855:12;9821:63;:::i;:::-;9726:168;9980:4;9973:5;9969:16;9963:23;9999:63;10056:4;10051:3;10047:14;10033:12;9999:63;:::i;:::-;9904:168;10166:4;10159:5;10155:16;10149:23;10185:63;10242:4;10237:3;10233:14;10219:12;10185:63;:::i;:::-;10082:176;10353:4;10346:5;10342:16;10336:23;10372:63;10429:4;10424:3;10420:14;10406:12;10372:63;:::i;:::-;10268:177;8973:1479;8829:1623;;:::o;10458:379::-;10629:4;10667:3;10656:9;10652:19;10644:27;;10681:149;10827:1;10816:9;10812:17;10803:6;10681:149;:::i;:::-;10458:379;;;;:::o;10843:442::-;10992:4;11030:2;11019:9;11015:18;11007:26;;11043:71;11111:1;11100:9;11096:17;11087:6;11043:71;:::i;:::-;11124:72;11192:2;11181:9;11177:18;11168:6;11124:72;:::i;:::-;11206;11274:2;11263:9;11259:18;11250:6;11206:72;:::i;:::-;10843:442;;;;;;:::o;11387:1627::-;11564:6;11559:3;11555:16;11656:4;11649:5;11645:16;11639:23;11675:63;11732:4;11727:3;11723:14;11709:12;11675:63;:::i;:::-;11581:167;11834:4;11827:5;11823:16;11817:23;11853:63;11910:4;11905:3;11901:14;11887:12;11853:63;:::i;:::-;11758:168;12007:4;12000:5;11996:16;11990:23;12026:63;12083:4;12078:3;12074:14;12060:12;12026:63;:::i;:::-;11936:163;12185:4;12178:5;12174:16;12168:23;12204:63;12261:4;12256:3;12252:14;12238:12;12204:63;:::i;:::-;12109:168;12364:4;12357:5;12353:16;12347:23;12383:63;12440:4;12435:3;12431:14;12417:12;12383:63;:::i;:::-;12287:169;12543:4;12536:5;12532:16;12526:23;12562:63;12619:4;12614:3;12610:14;12596:12;12562:63;:::i;:::-;12466:169;12728:4;12721:5;12717:16;12711:23;12747:63;12804:4;12799:3;12795:14;12781:12;12747:63;:::i;:::-;12645:175;12915:4;12908:5;12904:16;12898:23;12934:63;12991:4;12986:3;12982:14;12968:12;12934:63;:::i;:::-;12830:177;11533:1481;11387:1627;;:::o;13020:383::-;13193:4;13231:3;13220:9;13216:19;13208:27;;13245:151;13393:1;13382:9;13378:17;13369:6;13245:151;:::i;:::-;13020:383;;;;:::o;13409:332::-;13530:4;13568:2;13557:9;13553:18;13545:26;;13581:71;13649:1;13638:9;13634:17;13625:6;13581:71;:::i;:::-;13662:72;13730:2;13719:9;13715:18;13706:6;13662:72;:::i;:::-;13409:332;;;;;:::o;13747:222::-;13840:4;13878:2;13867:9;13863:18;13855:26;;13891:71;13959:1;13948:9;13944:17;13935:6;13891:71;:::i;:::-;13747:222;;;;:::o;13975:169::-;14059:11;14093:6;14088:3;14081:19;14133:4;14128:3;14124:14;14109:29;;13975:169;;;;:::o;14150:167::-;14290:19;14286:1;14278:6;14274:14;14267:43;14150:167;:::o;14323:366::-;14465:3;14486:67;14550:2;14545:3;14486:67;:::i;:::-;14479:74;;14562:93;14651:3;14562:93;:::i;:::-;14680:2;14675:3;14671:12;14664:19;;14323:366;;;:::o;14695:419::-;14861:4;14899:2;14888:9;14884:18;14876:26;;14948:9;14942:4;14938:20;14934:1;14923:9;14919:17;14912:47;14976:131;15102:4;14976:131;:::i;:::-;14968:139;;14695:419;;;:::o;15120:170::-;15260:22;15256:1;15248:6;15244:14;15237:46;15120:170;:::o;15296:366::-;15438:3;15459:67;15523:2;15518:3;15459:67;:::i;:::-;15452:74;;15535:93;15624:3;15535:93;:::i;:::-;15653:2;15648:3;15644:12;15637:19;;15296:366;;;:::o;15668:419::-;15834:4;15872:2;15861:9;15857:18;15849:26;;15921:9;15915:4;15911:20;15907:1;15896:9;15892:17;15885:47;15949:131;16075:4;15949:131;:::i;:::-;15941:139;;15668:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1094800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"buyEthOnCurve(uint256,uint256)": "infinite",
								"curvePool()": "infinite",
								"exchangeArbitrage(uint256)": "infinite",
								"getAmountonCurve(uint256)": "infinite",
								"getAmountonUniswap(uint256)": "infinite",
								"sellEthonCurve(uint256,uint256)": "infinite",
								"swapExactInputSingleHop(uint256,uint256)": "infinite",
								"swapExactOutputSingleHop(uint256,uint256)": "infinite",
								"uniswapRouter()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1244,
									"end": 5409,
									"name": "PUSH",
									"source": 4,
									"value": "C0"
								},
								{
									"begin": 1244,
									"end": 5409,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1244,
									"end": 5409,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1743,
									"end": 1902,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 1743,
									"end": 1902,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1743,
									"end": 1902,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1743,
									"end": 1902,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1743,
									"end": 1902,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1743,
									"end": 1902,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1743,
									"end": 1902,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1743,
									"end": 1902,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1743,
									"end": 1902,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1743,
									"end": 1902,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1743,
									"end": 1902,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1743,
									"end": 1902,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1743,
									"end": 1902,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1743,
									"end": 1902,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 1743,
									"end": 1902,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 1743,
									"end": 1902,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1743,
									"end": 1902,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1743,
									"end": 1902,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 1743,
									"end": 1902,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1743,
									"end": 1902,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 1743,
									"end": 1902,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1743,
									"end": 1902,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1743,
									"end": 1902,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1743,
									"end": 1902,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1743,
									"end": 1902,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1743,
									"end": 1902,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1743,
									"end": 1902,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1743,
									"end": 1902,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1743,
									"end": 1902,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1743,
									"end": 1902,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1743,
									"end": 1902,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1743,
									"end": 1902,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1743,
									"end": 1902,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1743,
									"end": 1902,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1743,
									"end": 1902,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1836,
									"end": 1850,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1808,
									"end": 1851,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1808,
									"end": 1851,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1808,
									"end": 1851,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 1808,
									"end": 1851,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1808,
									"end": 1851,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1808,
									"end": 1851,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1808,
									"end": 1851,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1808,
									"end": 1851,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1808,
									"end": 1851,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1808,
									"end": 1851,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1884,
									"end": 1894,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1861,
									"end": 1895,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1861,
									"end": 1895,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1861,
									"end": 1895,
									"name": "PUSH",
									"source": 4,
									"value": "A0"
								},
								{
									"begin": 1861,
									"end": 1895,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1861,
									"end": 1895,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1861,
									"end": 1895,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1861,
									"end": 1895,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1861,
									"end": 1895,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1861,
									"end": 1895,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1861,
									"end": 1895,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1743,
									"end": 1902,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1743,
									"end": 1902,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1244,
									"end": 5409,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 1244,
									"end": 5409,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 924,
									"end": 930,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 938,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 981,
									"end": 983,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 969,
									"end": 978,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 960,
									"end": 967,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 956,
									"end": 979,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 952,
									"end": 984,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 987,
									"end": 1066,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "tag",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "tag",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1107,
									"end": 1108,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 1188,
									"end": 1195,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1179,
									"end": 1185,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1168,
									"end": 1177,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1164,
									"end": 1186,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 1132,
									"end": 1196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "tag",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1078,
									"end": 1206,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1245,
									"end": 1247,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 1327,
									"end": 1334,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1318,
									"end": 1324,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1307,
									"end": 1316,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1303,
									"end": 1325,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 1271,
									"end": 1335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "tag",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1216,
									"end": 1345,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1352,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1244,
									"end": 5409,
									"name": "tag",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 1244,
									"end": 5409,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1244,
									"end": 5409,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 1244,
									"end": 5409,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1244,
									"end": 5409,
									"name": "PUSH",
									"source": 4,
									"value": "A0"
								},
								{
									"begin": 1244,
									"end": 5409,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1244,
									"end": 5409,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1244,
									"end": 5409,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1244,
									"end": 5409,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1244,
									"end": 5409,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 1244,
									"end": 5409,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1244,
									"end": 5409,
									"name": "ASSIGNIMMUTABLE",
									"source": 4,
									"value": "746"
								},
								{
									"begin": 1244,
									"end": 5409,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1244,
									"end": 5409,
									"name": "ASSIGNIMMUTABLE",
									"source": 4,
									"value": "743"
								},
								{
									"begin": 1244,
									"end": 5409,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1244,
									"end": 5409,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1244,
									"end": 5409,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122021ee3f7d0de829e58cab3d8e70cd3a80ebd2073d3700f6f7e6c28ed06fca704464736f6c63430008140033",
									".code": [
										{
											"begin": 1244,
											"end": 5409,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 1244,
											"end": 5409,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1244,
											"end": 5409,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1244,
											"end": 5409,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1244,
											"end": 5409,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1244,
											"end": 5409,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1244,
											"end": 5409,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1244,
											"end": 5409,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1244,
											"end": 5409,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1244,
											"end": 5409,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1244,
											"end": 5409,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1244,
											"end": 5409,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 1244,
											"end": 5409,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1244,
											"end": 5409,
											"name": "PUSH",
											"source": 4,
											"value": "87B8D225"
										},
										{
											"begin": 1244,
											"end": 5409,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1244,
											"end": 5409,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 1244,
											"end": 5409,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1244,
											"end": 5409,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1244,
											"end": 5409,
											"name": "PUSH",
											"source": 4,
											"value": "87B8D225"
										},
										{
											"begin": 1244,
											"end": 5409,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1244,
											"end": 5409,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 1244,
											"end": 5409,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1244,
											"end": 5409,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1244,
											"end": 5409,
											"name": "PUSH",
											"source": 4,
											"value": "C477B581"
										},
										{
											"begin": 1244,
											"end": 5409,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1244,
											"end": 5409,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 1244,
											"end": 5409,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1244,
											"end": 5409,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1244,
											"end": 5409,
											"name": "PUSH",
											"source": 4,
											"value": "C9EB5E5A"
										},
										{
											"begin": 1244,
											"end": 5409,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1244,
											"end": 5409,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 1244,
											"end": 5409,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1244,
											"end": 5409,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1244,
											"end": 5409,
											"name": "PUSH",
											"source": 4,
											"value": "D22CC067"
										},
										{
											"begin": 1244,
											"end": 5409,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1244,
											"end": 5409,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 1244,
											"end": 5409,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1244,
											"end": 5409,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1244,
											"end": 5409,
											"name": "PUSH",
											"source": 4,
											"value": "E4EAAB96"
										},
										{
											"begin": 1244,
											"end": 5409,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1244,
											"end": 5409,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 1244,
											"end": 5409,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1244,
											"end": 5409,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1244,
											"end": 5409,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1244,
											"end": 5409,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 1244,
											"end": 5409,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1244,
											"end": 5409,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1244,
											"end": 5409,
											"name": "PUSH",
											"source": 4,
											"value": "4907BBB"
										},
										{
											"begin": 1244,
											"end": 5409,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1244,
											"end": 5409,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1244,
											"end": 5409,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1244,
											"end": 5409,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1244,
											"end": 5409,
											"name": "PUSH",
											"source": 4,
											"value": "1540E747"
										},
										{
											"begin": 1244,
											"end": 5409,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1244,
											"end": 5409,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1244,
											"end": 5409,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1244,
											"end": 5409,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1244,
											"end": 5409,
											"name": "PUSH",
											"source": 4,
											"value": "218751B2"
										},
										{
											"begin": 1244,
											"end": 5409,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1244,
											"end": 5409,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1244,
											"end": 5409,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1244,
											"end": 5409,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1244,
											"end": 5409,
											"name": "PUSH",
											"source": 4,
											"value": "735DE9F7"
										},
										{
											"begin": 1244,
											"end": 5409,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1244,
											"end": 5409,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1244,
											"end": 5409,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1244,
											"end": 5409,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1244,
											"end": 5409,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1244,
											"end": 5409,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1244,
											"end": 5409,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1244,
											"end": 5409,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2564,
											"end": 2765,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2564,
											"end": 2765,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2564,
											"end": 2765,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 2564,
											"end": 2765,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2564,
											"end": 2765,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2564,
											"end": 2765,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 2564,
											"end": 2765,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2564,
											"end": 2765,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2564,
											"end": 2765,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2564,
											"end": 2765,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2564,
											"end": 2765,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 2564,
											"end": 2765,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2564,
											"end": 2765,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2564,
											"end": 2765,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 2564,
											"end": 2765,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2564,
											"end": 2765,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2564,
											"end": 2765,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2564,
											"end": 2765,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2564,
											"end": 2765,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2564,
											"end": 2765,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2564,
											"end": 2765,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2564,
											"end": 2765,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 2564,
											"end": 2765,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2564,
											"end": 2765,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2564,
											"end": 2765,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 2564,
											"end": 2765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2564,
											"end": 2765,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 2564,
											"end": 2765,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2564,
											"end": 2765,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 2564,
											"end": 2765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2564,
											"end": 2765,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 2564,
											"end": 2765,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2564,
											"end": 2765,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 5252,
											"end": 5401,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 5252,
											"end": 5401,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5252,
											"end": 5401,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 5252,
											"end": 5401,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5252,
											"end": 5401,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5252,
											"end": 5401,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 5252,
											"end": 5401,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5252,
											"end": 5401,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5252,
											"end": 5401,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5252,
											"end": 5401,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5252,
											"end": 5401,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 5252,
											"end": 5401,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5252,
											"end": 5401,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5252,
											"end": 5401,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 5252,
											"end": 5401,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5252,
											"end": 5401,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5252,
											"end": 5401,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5252,
											"end": 5401,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5252,
											"end": 5401,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5252,
											"end": 5401,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5252,
											"end": 5401,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5252,
											"end": 5401,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 5252,
											"end": 5401,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5252,
											"end": 5401,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5252,
											"end": 5401,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5252,
											"end": 5401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5252,
											"end": 5401,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 5252,
											"end": 5401,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5252,
											"end": 5401,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 5252,
											"end": 5401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5252,
											"end": 5401,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 5252,
											"end": 5401,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5252,
											"end": 5401,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5252,
											"end": 5401,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5252,
											"end": 5401,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 5252,
											"end": 5401,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5252,
											"end": 5401,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5252,
											"end": 5401,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 5252,
											"end": 5401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5252,
											"end": 5401,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 5252,
											"end": 5401,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5252,
											"end": 5401,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5252,
											"end": 5401,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5252,
											"end": 5401,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5252,
											"end": 5401,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5252,
											"end": 5401,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5252,
											"end": 5401,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5252,
											"end": 5401,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1349,
											"end": 1386,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1349,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1349,
											"end": 1386,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 1349,
											"end": 1386,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1349,
											"end": 1386,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1349,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1349,
											"end": 1386,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1349,
											"end": 1386,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1349,
											"end": 1386,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1349,
											"end": 1386,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1349,
											"end": 1386,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1349,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1349,
											"end": 1386,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1349,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 1349,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 1349,
											"end": 1386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1349,
											"end": 1386,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 1349,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1349,
											"end": 1386,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1349,
											"end": 1386,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1349,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 1349,
											"end": 1386,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1349,
											"end": 1386,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1349,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 1349,
											"end": 1386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1349,
											"end": 1386,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 1349,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1349,
											"end": 1386,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1349,
											"end": 1386,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1349,
											"end": 1386,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1349,
											"end": 1386,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1349,
											"end": 1386,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1349,
											"end": 1386,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1349,
											"end": 1386,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1343,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1301,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1343,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1343,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1343,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 1301,
											"end": 1343,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1343,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1343,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1343,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1343,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 1301,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1343,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 1301,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 1301,
											"end": 1343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1343,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 1301,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1343,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1301,
											"end": 1343,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 1301,
											"end": 1343,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1343,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 1301,
											"end": 1343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1343,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 1301,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1343,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1301,
											"end": 1343,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1343,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1343,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1343,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1343,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1343,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3432,
											"end": 3626,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 3432,
											"end": 3626,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3432,
											"end": 3626,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 3432,
											"end": 3626,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3432,
											"end": 3626,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3432,
											"end": 3626,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 3432,
											"end": 3626,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3432,
											"end": 3626,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3432,
											"end": 3626,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3432,
											"end": 3626,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3432,
											"end": 3626,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 3432,
											"end": 3626,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3432,
											"end": 3626,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3432,
											"end": 3626,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 3432,
											"end": 3626,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3432,
											"end": 3626,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3432,
											"end": 3626,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3432,
											"end": 3626,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3432,
											"end": 3626,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3432,
											"end": 3626,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3432,
											"end": 3626,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3432,
											"end": 3626,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 3432,
											"end": 3626,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3432,
											"end": 3626,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3432,
											"end": 3626,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 3432,
											"end": 3626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3432,
											"end": 3626,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 3432,
											"end": 3626,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3432,
											"end": 3626,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 3432,
											"end": 3626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3432,
											"end": 3626,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 3432,
											"end": 3626,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3432,
											"end": 3626,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 4565,
											"end": 5248,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 4565,
											"end": 5248,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4565,
											"end": 5248,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 4565,
											"end": 5248,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4565,
											"end": 5248,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4565,
											"end": 5248,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 4565,
											"end": 5248,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4565,
											"end": 5248,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4565,
											"end": 5248,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4565,
											"end": 5248,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4565,
											"end": 5248,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 4565,
											"end": 5248,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4565,
											"end": 5248,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4565,
											"end": 5248,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 4565,
											"end": 5248,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4565,
											"end": 5248,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4565,
											"end": 5248,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4565,
											"end": 5248,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4565,
											"end": 5248,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4565,
											"end": 5248,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4565,
											"end": 5248,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4565,
											"end": 5248,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4565,
											"end": 5248,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4565,
											"end": 5248,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4565,
											"end": 5248,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4565,
											"end": 5248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4565,
											"end": 5248,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4565,
											"end": 5248,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4565,
											"end": 5248,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 4565,
											"end": 5248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4565,
											"end": 5248,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 4565,
											"end": 5248,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4565,
											"end": 5248,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4565,
											"end": 5248,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4565,
											"end": 5248,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 4565,
											"end": 5248,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4565,
											"end": 5248,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4565,
											"end": 5248,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 4565,
											"end": 5248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4565,
											"end": 5248,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 4565,
											"end": 5248,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4565,
											"end": 5248,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4565,
											"end": 5248,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4565,
											"end": 5248,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4565,
											"end": 5248,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4565,
											"end": 5248,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4565,
											"end": 5248,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4565,
											"end": 5248,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2770,
											"end": 3427,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 2770,
											"end": 3427,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2770,
											"end": 3427,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 2770,
											"end": 3427,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2770,
											"end": 3427,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2770,
											"end": 3427,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 2770,
											"end": 3427,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2770,
											"end": 3427,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2770,
											"end": 3427,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2770,
											"end": 3427,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2770,
											"end": 3427,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 2770,
											"end": 3427,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2770,
											"end": 3427,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2770,
											"end": 3427,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 2770,
											"end": 3427,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2770,
											"end": 3427,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2770,
											"end": 3427,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2770,
											"end": 3427,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2770,
											"end": 3427,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2770,
											"end": 3427,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2770,
											"end": 3427,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2770,
											"end": 3427,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 2770,
											"end": 3427,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2770,
											"end": 3427,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2770,
											"end": 3427,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 2770,
											"end": 3427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2770,
											"end": 3427,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 2770,
											"end": 3427,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2770,
											"end": 3427,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 2770,
											"end": 3427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2770,
											"end": 3427,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 2770,
											"end": 3427,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2770,
											"end": 3427,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 3631,
											"end": 4559,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 3631,
											"end": 4559,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3631,
											"end": 4559,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 3631,
											"end": 4559,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3631,
											"end": 4559,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3631,
											"end": 4559,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3631,
											"end": 4559,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3631,
											"end": 4559,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3631,
											"end": 4559,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3631,
											"end": 4559,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3631,
											"end": 4559,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 3631,
											"end": 4559,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3631,
											"end": 4559,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3631,
											"end": 4559,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3631,
											"end": 4559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3631,
											"end": 4559,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 3631,
											"end": 4559,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3631,
											"end": 4559,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 3631,
											"end": 4559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3631,
											"end": 4559,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 3631,
											"end": 4559,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3631,
											"end": 4559,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 1912,
											"end": 2559,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 1912,
											"end": 2559,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1912,
											"end": 2559,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 1912,
											"end": 2559,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1912,
											"end": 2559,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1912,
											"end": 2559,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 1912,
											"end": 2559,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1912,
											"end": 2559,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 2559,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1912,
											"end": 2559,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1912,
											"end": 2559,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 1912,
											"end": 2559,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1912,
											"end": 2559,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1912,
											"end": 2559,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 1912,
											"end": 2559,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1912,
											"end": 2559,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1912,
											"end": 2559,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1912,
											"end": 2559,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1912,
											"end": 2559,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1912,
											"end": 2559,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1912,
											"end": 2559,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1912,
											"end": 2559,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 1912,
											"end": 2559,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1912,
											"end": 2559,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1912,
											"end": 2559,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 1912,
											"end": 2559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1912,
											"end": 2559,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 1912,
											"end": 2559,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1912,
											"end": 2559,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 1912,
											"end": 2559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1912,
											"end": 2559,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 1912,
											"end": 2559,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1912,
											"end": 2559,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 2564,
											"end": 2765,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 2564,
											"end": 2765,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2708,
											"end": 2717,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "746"
										},
										{
											"begin": 2708,
											"end": 2726,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2708,
											"end": 2726,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2708,
											"end": 2726,
											"name": "PUSH",
											"source": 4,
											"value": "3DF02124"
										},
										{
											"begin": 2727,
											"end": 2728,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2730,
											"end": 2731,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2733,
											"end": 2743,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2745,
											"end": 2757,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2708,
											"end": 2758,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2708,
											"end": 2758,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2708,
											"end": 2758,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2708,
											"end": 2758,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2708,
											"end": 2758,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2708,
											"end": 2758,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 2708,
											"end": 2758,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 2708,
											"end": 2758,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2708,
											"end": 2758,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2708,
											"end": 2758,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2708,
											"end": 2758,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2708,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 2708,
											"end": 2758,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 2708,
											"end": 2758,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2708,
											"end": 2758,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2708,
											"end": 2758,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2708,
											"end": 2758,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2708,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 2708,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2708,
											"end": 2758,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 2708,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2708,
											"end": 2758,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2708,
											"end": 2758,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2708,
											"end": 2758,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2708,
											"end": 2758,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2708,
											"end": 2758,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2708,
											"end": 2758,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2708,
											"end": 2758,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2708,
											"end": 2758,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2758,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2708,
											"end": 2758,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 2708,
											"end": 2758,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 2708,
											"end": 2758,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2708,
											"end": 2758,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2708,
											"end": 2758,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2708,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 2708,
											"end": 2758,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2708,
											"end": 2758,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2708,
											"end": 2758,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2758,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2708,
											"end": 2758,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 2708,
											"end": 2758,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2708,
											"end": 2758,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2758,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2708,
											"end": 2758,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 2708,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2708,
											"end": 2758,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2708,
											"end": 2758,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2708,
											"end": 2758,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2708,
											"end": 2758,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2708,
											"end": 2758,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2708,
											"end": 2758,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2708,
											"end": 2758,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2708,
											"end": 2758,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2708,
											"end": 2758,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2708,
											"end": 2758,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2708,
											"end": 2758,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2708,
											"end": 2758,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2708,
											"end": 2758,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2708,
											"end": 2758,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2708,
											"end": 2758,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2708,
											"end": 2758,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2708,
											"end": 2758,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2708,
											"end": 2758,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2708,
											"end": 2758,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2708,
											"end": 2758,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2708,
											"end": 2758,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2708,
											"end": 2758,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2708,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 2708,
											"end": 2758,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2708,
											"end": 2758,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2708,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2708,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2708,
											"end": 2758,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 2708,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2708,
											"end": 2758,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2564,
											"end": 2765,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2564,
											"end": 2765,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2564,
											"end": 2765,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5252,
											"end": 5401,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 5252,
											"end": 5401,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5319,
											"end": 5326,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5344,
											"end": 5353,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "746"
										},
										{
											"begin": 5344,
											"end": 5360,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5344,
											"end": 5360,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5344,
											"end": 5360,
											"name": "PUSH",
											"source": 4,
											"value": "5E0D443F"
										},
										{
											"begin": 5361,
											"end": 5362,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5364,
											"end": 5365,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5367,
											"end": 5377,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5344,
											"end": 5378,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5344,
											"end": 5378,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5344,
											"end": 5378,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5344,
											"end": 5378,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5344,
											"end": 5378,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5344,
											"end": 5378,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 5344,
											"end": 5378,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 5344,
											"end": 5378,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5344,
											"end": 5378,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5344,
											"end": 5378,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5344,
											"end": 5378,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5344,
											"end": 5378,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 5344,
											"end": 5378,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 5344,
											"end": 5378,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5344,
											"end": 5378,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5344,
											"end": 5378,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5344,
											"end": 5378,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 5344,
											"end": 5378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5344,
											"end": 5378,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 5344,
											"end": 5378,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5344,
											"end": 5378,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5344,
											"end": 5378,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5344,
											"end": 5378,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5344,
											"end": 5378,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5344,
											"end": 5378,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5344,
											"end": 5378,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5344,
											"end": 5378,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5344,
											"end": 5378,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5344,
											"end": 5378,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 5344,
											"end": 5378,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 5344,
											"end": 5378,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5344,
											"end": 5378,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5344,
											"end": 5378,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5344,
											"end": 5378,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 5344,
											"end": 5378,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5344,
											"end": 5378,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5344,
											"end": 5378,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5344,
											"end": 5378,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5344,
											"end": 5378,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 5344,
											"end": 5378,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5344,
											"end": 5378,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5344,
											"end": 5378,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5344,
											"end": 5378,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 5344,
											"end": 5378,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5344,
											"end": 5378,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5344,
											"end": 5378,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5344,
											"end": 5378,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5344,
											"end": 5378,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5344,
											"end": 5378,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5344,
											"end": 5378,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5344,
											"end": 5378,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5344,
											"end": 5378,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 5344,
											"end": 5378,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 5344,
											"end": 5378,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 5344,
											"end": 5378,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5344,
											"end": 5378,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5344,
											"end": 5378,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5344,
											"end": 5378,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5344,
											"end": 5378,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5344,
											"end": 5378,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5344,
											"end": 5378,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5344,
											"end": 5378,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5344,
											"end": 5378,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5344,
											"end": 5378,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5344,
											"end": 5378,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5344,
											"end": 5378,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5344,
											"end": 5378,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 5344,
											"end": 5378,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5344,
											"end": 5378,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5344,
											"end": 5378,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 5344,
											"end": 5378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5344,
											"end": 5378,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 5344,
											"end": 5378,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5337,
											"end": 5378,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5337,
											"end": 5378,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5252,
											"end": 5401,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5252,
											"end": 5401,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5252,
											"end": 5401,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5252,
											"end": 5401,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1349,
											"end": 1386,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 1349,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1349,
											"end": 1386,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "746"
										},
										{
											"begin": 1349,
											"end": 1386,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1349,
											"end": 1386,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1343,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 1301,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1343,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "743"
										},
										{
											"begin": 1301,
											"end": 1343,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3432,
											"end": 3626,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 3432,
											"end": 3626,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1523,
											"end": 1565,
											"name": "PUSH",
											"source": 4,
											"value": "C02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2"
										},
										{
											"begin": 3515,
											"end": 3527,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3515,
											"end": 3527,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3515,
											"end": 3527,
											"name": "PUSH",
											"source": 4,
											"value": "95EA7B3"
										},
										{
											"begin": 3536,
											"end": 3545,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "746"
										},
										{
											"begin": 3548,
											"end": 3561,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3515,
											"end": 3562,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3515,
											"end": 3562,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3515,
											"end": 3562,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3515,
											"end": 3562,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3515,
											"end": 3562,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3515,
											"end": 3562,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 3515,
											"end": 3562,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 3515,
											"end": 3562,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3515,
											"end": 3562,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3515,
											"end": 3562,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3515,
											"end": 3562,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3515,
											"end": 3562,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 3515,
											"end": 3562,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3515,
											"end": 3562,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3515,
											"end": 3562,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3515,
											"end": 3562,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 3515,
											"end": 3562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3515,
											"end": 3562,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 3515,
											"end": 3562,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3515,
											"end": 3562,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3515,
											"end": 3562,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3515,
											"end": 3562,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3515,
											"end": 3562,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3515,
											"end": 3562,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3515,
											"end": 3562,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3515,
											"end": 3562,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3515,
											"end": 3562,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3515,
											"end": 3562,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3515,
											"end": 3562,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 3515,
											"end": 3562,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 3515,
											"end": 3562,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3515,
											"end": 3562,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3515,
											"end": 3562,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3515,
											"end": 3562,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 3515,
											"end": 3562,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3515,
											"end": 3562,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3515,
											"end": 3562,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3515,
											"end": 3562,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3515,
											"end": 3562,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 3515,
											"end": 3562,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3515,
											"end": 3562,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3515,
											"end": 3562,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3515,
											"end": 3562,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 3515,
											"end": 3562,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3515,
											"end": 3562,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3515,
											"end": 3562,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3515,
											"end": 3562,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3515,
											"end": 3562,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3515,
											"end": 3562,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3515,
											"end": 3562,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3515,
											"end": 3562,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3515,
											"end": 3562,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3515,
											"end": 3562,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 3515,
											"end": 3562,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3515,
											"end": 3562,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3515,
											"end": 3562,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3515,
											"end": 3562,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3515,
											"end": 3562,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3515,
											"end": 3562,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3515,
											"end": 3562,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3515,
											"end": 3562,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3515,
											"end": 3562,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3515,
											"end": 3562,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3515,
											"end": 3562,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3515,
											"end": 3562,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3515,
											"end": 3562,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3515,
											"end": 3562,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 3515,
											"end": 3562,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3515,
											"end": 3562,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3515,
											"end": 3562,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 3515,
											"end": 3562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3515,
											"end": 3562,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 3515,
											"end": 3562,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3515,
											"end": 3562,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3581,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "746"
										},
										{
											"begin": 3572,
											"end": 3590,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3572,
											"end": 3590,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3590,
											"name": "PUSH",
											"source": 4,
											"value": "3DF02124"
										},
										{
											"begin": 3591,
											"end": 3592,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3594,
											"end": 3595,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3597,
											"end": 3606,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3608,
											"end": 3609,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3572,
											"end": 3610,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3572,
											"end": 3610,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3610,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3610,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3572,
											"end": 3610,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3610,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 3572,
											"end": 3610,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3610,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3610,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3610,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3572,
											"end": 3610,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3610,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 3572,
											"end": 3610,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3610,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3610,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3610,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3610,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3610,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 3572,
											"end": 3610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3610,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 3572,
											"end": 3610,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3610,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3572,
											"end": 3610,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3572,
											"end": 3610,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3610,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3610,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3610,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3610,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3610,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3572,
											"end": 3610,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3610,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3610,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3610,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3610,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3610,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3610,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 3572,
											"end": 3610,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3610,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3610,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3572,
											"end": 3610,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3610,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3610,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3610,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3572,
											"end": 3610,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3610,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 3572,
											"end": 3610,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3610,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3610,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3610,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3610,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3610,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3572,
											"end": 3610,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3610,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3610,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3572,
											"end": 3610,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3610,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3572,
											"end": 3610,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3610,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3610,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3610,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3610,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3610,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3610,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3572,
											"end": 3610,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3610,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3610,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3610,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3610,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3610,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 3572,
											"end": 3610,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3610,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3610,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3572,
											"end": 3610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3610,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 3572,
											"end": 3610,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3610,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3432,
											"end": 3626,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3432,
											"end": 3626,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3432,
											"end": 3626,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4565,
											"end": 5248,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 4565,
											"end": 5248,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4629,
											"end": 4636,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4647,
											"end": 4695,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 5038,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4710,
											"end": 5038,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 5038,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 5038,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 4710,
											"end": 5038,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 5038,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4710,
											"end": 5038,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 5038,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1595,
											"end": 1637,
											"name": "PUSH",
											"source": 4,
											"value": "A0B86991C6218B36C1D19D4A2E9EB0CE3606EB48"
										},
										{
											"begin": 4710,
											"end": 5038,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4710,
											"end": 5038,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 5038,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 5038,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 5038,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4710,
											"end": 5038,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1523,
											"end": 1565,
											"name": "PUSH",
											"source": 4,
											"value": "C02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2"
										},
										{
											"begin": 4710,
											"end": 5038,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4710,
											"end": 5038,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 5038,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 5038,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 5038,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4710,
											"end": 5038,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4828,
											"end": 4832,
											"name": "PUSH",
											"source": 4,
											"value": "BB8"
										},
										{
											"begin": 4710,
											"end": 5038,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFF"
										},
										{
											"begin": 4710,
											"end": 5038,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 5038,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 5038,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 5038,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4710,
											"end": 5038,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4860,
											"end": 4870,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 5038,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4710,
											"end": 5038,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 5038,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 5038,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 5038,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4710,
											"end": 5038,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4897,
											"end": 4912,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 5038,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 5038,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 5038,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4710,
											"end": 5038,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4939,
											"end": 4950,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 5038,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 5038,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 5038,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4710,
											"end": 5038,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 4986,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4710,
											"end": 5038,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 5038,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 5038,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4710,
											"end": 5038,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5023,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4710,
											"end": 5038,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4710,
											"end": 5038,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 5038,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 5038,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 5038,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4647,
											"end": 5038,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4647,
											"end": 5038,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5106,
											"end": 5123,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5126,
											"end": 5139,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "743"
										},
										{
											"begin": 5126,
											"end": 5156,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5126,
											"end": 5156,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5126,
											"end": 5156,
											"name": "PUSH",
											"source": 4,
											"value": "414BF389"
										},
										{
											"begin": 5157,
											"end": 5163,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5126,
											"end": 5164,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5126,
											"end": 5164,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5126,
											"end": 5164,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5126,
											"end": 5164,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5126,
											"end": 5164,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5126,
											"end": 5164,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 5126,
											"end": 5164,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 5126,
											"end": 5164,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5126,
											"end": 5164,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5126,
											"end": 5164,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5126,
											"end": 5164,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5126,
											"end": 5164,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 5126,
											"end": 5164,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5126,
											"end": 5164,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5126,
											"end": 5164,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 5126,
											"end": 5164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5126,
											"end": 5164,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 5126,
											"end": 5164,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5126,
											"end": 5164,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5126,
											"end": 5164,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5126,
											"end": 5164,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5126,
											"end": 5164,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5126,
											"end": 5164,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5126,
											"end": 5164,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5126,
											"end": 5164,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5126,
											"end": 5164,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5126,
											"end": 5164,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 5126,
											"end": 5164,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 5126,
											"end": 5164,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 5126,
											"end": 5164,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5126,
											"end": 5164,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5126,
											"end": 5164,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5126,
											"end": 5164,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 5126,
											"end": 5164,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5126,
											"end": 5164,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5126,
											"end": 5164,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5126,
											"end": 5164,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5126,
											"end": 5164,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 5126,
											"end": 5164,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5126,
											"end": 5164,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5126,
											"end": 5164,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5126,
											"end": 5164,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 5126,
											"end": 5164,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5126,
											"end": 5164,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5126,
											"end": 5164,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5126,
											"end": 5164,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5126,
											"end": 5164,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5126,
											"end": 5164,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5126,
											"end": 5164,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5126,
											"end": 5164,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5126,
											"end": 5164,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 5126,
											"end": 5164,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 5126,
											"end": 5164,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 5126,
											"end": 5164,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5126,
											"end": 5164,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5126,
											"end": 5164,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5126,
											"end": 5164,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5126,
											"end": 5164,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5126,
											"end": 5164,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5126,
											"end": 5164,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5126,
											"end": 5164,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5126,
											"end": 5164,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5126,
											"end": 5164,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5126,
											"end": 5164,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5126,
											"end": 5164,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5126,
											"end": 5164,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 5126,
											"end": 5164,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5126,
											"end": 5164,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5126,
											"end": 5164,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 5126,
											"end": 5164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5126,
											"end": 5164,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 5126,
											"end": 5164,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5106,
											"end": 5164,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5106,
											"end": 5164,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5233,
											"end": 5242,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5226,
											"end": 5242,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5226,
											"end": 5242,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5226,
											"end": 5242,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5226,
											"end": 5242,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4565,
											"end": 5248,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4565,
											"end": 5248,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4565,
											"end": 5248,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4565,
											"end": 5248,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2770,
											"end": 3427,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 2770,
											"end": 3427,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1523,
											"end": 1565,
											"name": "PUSH",
											"source": 4,
											"value": "C02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2"
										},
										{
											"begin": 2868,
											"end": 2885,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2868,
											"end": 2885,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2868,
											"end": 2885,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 2886,
											"end": 2896,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2906,
											"end": 2910,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 2913,
											"end": 2928,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2868,
											"end": 2929,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2868,
											"end": 2929,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2868,
											"end": 2929,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2868,
											"end": 2929,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2868,
											"end": 2929,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2868,
											"end": 2929,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 2868,
											"end": 2929,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 2868,
											"end": 2929,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2868,
											"end": 2929,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2868,
											"end": 2929,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2868,
											"end": 2929,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2868,
											"end": 2929,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 2868,
											"end": 2929,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2868,
											"end": 2929,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2868,
											"end": 2929,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2868,
											"end": 2929,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2868,
											"end": 2929,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 2868,
											"end": 2929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2868,
											"end": 2929,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 2868,
											"end": 2929,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2868,
											"end": 2929,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2868,
											"end": 2929,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2868,
											"end": 2929,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2868,
											"end": 2929,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2868,
											"end": 2929,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2868,
											"end": 2929,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2868,
											"end": 2929,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2868,
											"end": 2929,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2868,
											"end": 2929,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2868,
											"end": 2929,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 2868,
											"end": 2929,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 2868,
											"end": 2929,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2868,
											"end": 2929,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2868,
											"end": 2929,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2868,
											"end": 2929,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 2868,
											"end": 2929,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2868,
											"end": 2929,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2868,
											"end": 2929,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2868,
											"end": 2929,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2868,
											"end": 2929,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 2868,
											"end": 2929,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2868,
											"end": 2929,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2868,
											"end": 2929,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2868,
											"end": 2929,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 2868,
											"end": 2929,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2868,
											"end": 2929,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2868,
											"end": 2929,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2868,
											"end": 2929,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2868,
											"end": 2929,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2868,
											"end": 2929,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2868,
											"end": 2929,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2868,
											"end": 2929,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2868,
											"end": 2929,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2868,
											"end": 2929,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2868,
											"end": 2929,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2868,
											"end": 2929,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2868,
											"end": 2929,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2868,
											"end": 2929,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2868,
											"end": 2929,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2868,
											"end": 2929,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2868,
											"end": 2929,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2868,
											"end": 2929,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2868,
											"end": 2929,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2868,
											"end": 2929,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2868,
											"end": 2929,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2868,
											"end": 2929,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2868,
											"end": 2929,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2868,
											"end": 2929,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 2868,
											"end": 2929,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2868,
											"end": 2929,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2868,
											"end": 2929,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 2868,
											"end": 2929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2868,
											"end": 2929,
											"name": "tag",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 2868,
											"end": 2929,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2868,
											"end": 2929,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1523,
											"end": 1565,
											"name": "PUSH",
											"source": 4,
											"value": "C02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2"
										},
										{
											"begin": 2939,
											"end": 2951,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2939,
											"end": 2951,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2939,
											"end": 2951,
											"name": "PUSH",
											"source": 4,
											"value": "95EA7B3"
										},
										{
											"begin": 2960,
											"end": 2973,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "743"
										},
										{
											"begin": 2976,
											"end": 2991,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2939,
											"end": 2992,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2939,
											"end": 2992,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2939,
											"end": 2992,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2939,
											"end": 2992,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2939,
											"end": 2992,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2939,
											"end": 2992,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 2939,
											"end": 2992,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 2939,
											"end": 2992,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2939,
											"end": 2992,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2939,
											"end": 2992,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2939,
											"end": 2992,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2939,
											"end": 2992,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 2939,
											"end": 2992,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2939,
											"end": 2992,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2939,
											"end": 2992,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2939,
											"end": 2992,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 2939,
											"end": 2992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2939,
											"end": 2992,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 2939,
											"end": 2992,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2939,
											"end": 2992,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2939,
											"end": 2992,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2939,
											"end": 2992,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2939,
											"end": 2992,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2939,
											"end": 2992,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2939,
											"end": 2992,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2939,
											"end": 2992,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2939,
											"end": 2992,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2939,
											"end": 2992,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2939,
											"end": 2992,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 2939,
											"end": 2992,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 2939,
											"end": 2992,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2939,
											"end": 2992,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2939,
											"end": 2992,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2939,
											"end": 2992,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 2939,
											"end": 2992,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2939,
											"end": 2992,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2939,
											"end": 2992,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2939,
											"end": 2992,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2939,
											"end": 2992,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 2939,
											"end": 2992,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2939,
											"end": 2992,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2939,
											"end": 2992,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2939,
											"end": 2992,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 2939,
											"end": 2992,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2939,
											"end": 2992,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2939,
											"end": 2992,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2939,
											"end": 2992,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2939,
											"end": 2992,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2939,
											"end": 2992,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2939,
											"end": 2992,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2939,
											"end": 2992,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2939,
											"end": 2992,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2939,
											"end": 2992,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2939,
											"end": 2992,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2939,
											"end": 2992,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2939,
											"end": 2992,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2939,
											"end": 2992,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2939,
											"end": 2992,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2939,
											"end": 2992,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2939,
											"end": 2992,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2939,
											"end": 2992,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2939,
											"end": 2992,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2939,
											"end": 2992,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2939,
											"end": 2992,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2939,
											"end": 2992,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2939,
											"end": 2992,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2939,
											"end": 2992,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 2939,
											"end": 2992,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2939,
											"end": 2992,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2939,
											"end": 2992,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 2939,
											"end": 2992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2939,
											"end": 2992,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 2939,
											"end": 2992,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2939,
											"end": 2992,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3003,
											"end": 3052,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3055,
											"end": 3371,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3055,
											"end": 3371,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3371,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3371,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3055,
											"end": 3371,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3371,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3055,
											"end": 3371,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3371,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1595,
											"end": 1637,
											"name": "PUSH",
											"source": 4,
											"value": "A0B86991C6218B36C1D19D4A2E9EB0CE3606EB48"
										},
										{
											"begin": 3055,
											"end": 3371,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3055,
											"end": 3371,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3371,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3371,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3371,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3055,
											"end": 3371,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1523,
											"end": 1565,
											"name": "PUSH",
											"source": 4,
											"value": "C02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2"
										},
										{
											"begin": 3055,
											"end": 3371,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3055,
											"end": 3371,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3371,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3371,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3371,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3055,
											"end": 3371,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3165,
											"end": 3169,
											"name": "PUSH",
											"source": 4,
											"value": "BB8"
										},
										{
											"begin": 3055,
											"end": 3371,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3371,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3371,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3055,
											"end": 3371,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3228,
											"end": 3243,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3371,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3371,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3371,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3055,
											"end": 3371,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3194,
											"end": 3204,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3371,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3055,
											"end": 3371,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3371,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3371,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3371,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3055,
											"end": 3371,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3268,
											"end": 3280,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3371,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3371,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3371,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3055,
											"end": 3371,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3311,
											"end": 3326,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3371,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3371,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3371,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3055,
											"end": 3371,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3360,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3055,
											"end": 3371,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3055,
											"end": 3371,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3371,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3371,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3371,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3003,
											"end": 3371,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3003,
											"end": 3371,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3381,
											"end": 3394,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "743"
										},
										{
											"begin": 3381,
											"end": 3412,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3381,
											"end": 3412,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3381,
											"end": 3412,
											"name": "PUSH",
											"source": 4,
											"value": "26A966C4"
										},
										{
											"begin": 3413,
											"end": 3419,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3381,
											"end": 3420,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3381,
											"end": 3420,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3381,
											"end": 3420,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3381,
											"end": 3420,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3381,
											"end": 3420,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3381,
											"end": 3420,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 3381,
											"end": 3420,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 3381,
											"end": 3420,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3381,
											"end": 3420,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3381,
											"end": 3420,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3381,
											"end": 3420,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3381,
											"end": 3420,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 3381,
											"end": 3420,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3381,
											"end": 3420,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3381,
											"end": 3420,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 3381,
											"end": 3420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3381,
											"end": 3420,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 3381,
											"end": 3420,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3381,
											"end": 3420,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3381,
											"end": 3420,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3381,
											"end": 3420,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3381,
											"end": 3420,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3381,
											"end": 3420,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3381,
											"end": 3420,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3381,
											"end": 3420,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3381,
											"end": 3420,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3381,
											"end": 3420,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3381,
											"end": 3420,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 3381,
											"end": 3420,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 3381,
											"end": 3420,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3381,
											"end": 3420,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3381,
											"end": 3420,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3381,
											"end": 3420,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 3381,
											"end": 3420,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3381,
											"end": 3420,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3381,
											"end": 3420,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3381,
											"end": 3420,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3381,
											"end": 3420,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 3381,
											"end": 3420,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3381,
											"end": 3420,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3381,
											"end": 3420,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3381,
											"end": 3420,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 3381,
											"end": 3420,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3381,
											"end": 3420,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3381,
											"end": 3420,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3381,
											"end": 3420,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3381,
											"end": 3420,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3381,
											"end": 3420,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3381,
											"end": 3420,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3381,
											"end": 3420,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3381,
											"end": 3420,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3381,
											"end": 3420,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 3381,
											"end": 3420,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3381,
											"end": 3420,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3381,
											"end": 3420,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3381,
											"end": 3420,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3381,
											"end": 3420,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3381,
											"end": 3420,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3381,
											"end": 3420,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3381,
											"end": 3420,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3381,
											"end": 3420,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3381,
											"end": 3420,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3381,
											"end": 3420,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3381,
											"end": 3420,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3381,
											"end": 3420,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3381,
											"end": 3420,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 3381,
											"end": 3420,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3381,
											"end": 3420,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3381,
											"end": 3420,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3381,
											"end": 3420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3381,
											"end": 3420,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 3381,
											"end": 3420,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3381,
											"end": 3420,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2858,
											"end": 3427,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2770,
											"end": 3427,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2770,
											"end": 3427,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2770,
											"end": 3427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3631,
											"end": 4559,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 3631,
											"end": 4559,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3704,
											"end": 3721,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1595,
											"end": 1637,
											"name": "PUSH",
											"source": 4,
											"value": "A0B86991C6218B36C1D19D4A2E9EB0CE3606EB48"
										},
										{
											"begin": 3724,
											"end": 3738,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3724,
											"end": 3738,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3724,
											"end": 3738,
											"name": "PUSH",
											"source": 4,
											"value": "DD62ED3E"
										},
										{
											"begin": 3739,
											"end": 3749,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3759,
											"end": 3763,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 3724,
											"end": 3765,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3724,
											"end": 3765,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3724,
											"end": 3765,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3724,
											"end": 3765,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3724,
											"end": 3765,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3724,
											"end": 3765,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 3724,
											"end": 3765,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 3724,
											"end": 3765,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3724,
											"end": 3765,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3724,
											"end": 3765,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3724,
											"end": 3765,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3724,
											"end": 3765,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 3724,
											"end": 3765,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3724,
											"end": 3765,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3724,
											"end": 3765,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3724,
											"end": 3765,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 3724,
											"end": 3765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3724,
											"end": 3765,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 3724,
											"end": 3765,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3724,
											"end": 3765,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3724,
											"end": 3765,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3724,
											"end": 3765,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3724,
											"end": 3765,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3724,
											"end": 3765,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3724,
											"end": 3765,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3724,
											"end": 3765,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3724,
											"end": 3765,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3724,
											"end": 3765,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 3724,
											"end": 3765,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 3724,
											"end": 3765,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3724,
											"end": 3765,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3724,
											"end": 3765,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3724,
											"end": 3765,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 3724,
											"end": 3765,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3724,
											"end": 3765,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3724,
											"end": 3765,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3724,
											"end": 3765,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3724,
											"end": 3765,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 3724,
											"end": 3765,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3724,
											"end": 3765,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3724,
											"end": 3765,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3724,
											"end": 3765,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 3724,
											"end": 3765,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3724,
											"end": 3765,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3724,
											"end": 3765,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3724,
											"end": 3765,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3724,
											"end": 3765,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3724,
											"end": 3765,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3724,
											"end": 3765,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3724,
											"end": 3765,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3724,
											"end": 3765,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3724,
											"end": 3765,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 3724,
											"end": 3765,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3724,
											"end": 3765,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3724,
											"end": 3765,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3724,
											"end": 3765,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3724,
											"end": 3765,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3724,
											"end": 3765,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3724,
											"end": 3765,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3724,
											"end": 3765,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3724,
											"end": 3765,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3724,
											"end": 3765,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3724,
											"end": 3765,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3724,
											"end": 3765,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3724,
											"end": 3765,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3724,
											"end": 3765,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 3724,
											"end": 3765,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3724,
											"end": 3765,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3724,
											"end": 3765,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3724,
											"end": 3765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3724,
											"end": 3765,
											"name": "tag",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 3724,
											"end": 3765,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3704,
											"end": 3765,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3704,
											"end": 3765,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3775,
											"end": 3790,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1595,
											"end": 1637,
											"name": "PUSH",
											"source": 4,
											"value": "A0B86991C6218B36C1D19D4A2E9EB0CE3606EB48"
										},
										{
											"begin": 3793,
											"end": 3807,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3793,
											"end": 3807,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3793,
											"end": 3807,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 3808,
											"end": 3818,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3793,
											"end": 3819,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3793,
											"end": 3819,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3793,
											"end": 3819,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3793,
											"end": 3819,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3793,
											"end": 3819,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3793,
											"end": 3819,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 3793,
											"end": 3819,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 3793,
											"end": 3819,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3793,
											"end": 3819,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3793,
											"end": 3819,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3793,
											"end": 3819,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3793,
											"end": 3819,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 3793,
											"end": 3819,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3793,
											"end": 3819,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3793,
											"end": 3819,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 3793,
											"end": 3819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3793,
											"end": 3819,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 3793,
											"end": 3819,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3793,
											"end": 3819,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3793,
											"end": 3819,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3793,
											"end": 3819,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3793,
											"end": 3819,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3793,
											"end": 3819,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3793,
											"end": 3819,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3793,
											"end": 3819,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3793,
											"end": 3819,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3793,
											"end": 3819,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 3793,
											"end": 3819,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 3793,
											"end": 3819,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3793,
											"end": 3819,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3793,
											"end": 3819,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3793,
											"end": 3819,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 3793,
											"end": 3819,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3793,
											"end": 3819,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3793,
											"end": 3819,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3793,
											"end": 3819,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3793,
											"end": 3819,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 3793,
											"end": 3819,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3793,
											"end": 3819,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3793,
											"end": 3819,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3793,
											"end": 3819,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 3793,
											"end": 3819,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3793,
											"end": 3819,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3793,
											"end": 3819,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3793,
											"end": 3819,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3793,
											"end": 3819,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3793,
											"end": 3819,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3793,
											"end": 3819,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3793,
											"end": 3819,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3793,
											"end": 3819,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3793,
											"end": 3819,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 3793,
											"end": 3819,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3793,
											"end": 3819,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3793,
											"end": 3819,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3793,
											"end": 3819,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3793,
											"end": 3819,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3793,
											"end": 3819,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3793,
											"end": 3819,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3793,
											"end": 3819,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3793,
											"end": 3819,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3793,
											"end": 3819,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3793,
											"end": 3819,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3793,
											"end": 3819,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3793,
											"end": 3819,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3793,
											"end": 3819,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 3793,
											"end": 3819,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3793,
											"end": 3819,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3793,
											"end": 3819,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3793,
											"end": 3819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3793,
											"end": 3819,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 3793,
											"end": 3819,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3775,
											"end": 3819,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3775,
											"end": 3819,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3851,
											"end": 3861,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3838,
											"end": 3847,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3838,
											"end": 3861,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3838,
											"end": 3861,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3830,
											"end": 3883,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 3830,
											"end": 3883,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3830,
											"end": 3883,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3830,
											"end": 3883,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3830,
											"end": 3883,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3830,
											"end": 3883,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3830,
											"end": 3883,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3830,
											"end": 3883,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3830,
											"end": 3883,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3830,
											"end": 3883,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 3830,
											"end": 3883,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3830,
											"end": 3883,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 3830,
											"end": 3883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3830,
											"end": 3883,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 3830,
											"end": 3883,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3830,
											"end": 3883,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3830,
											"end": 3883,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3830,
											"end": 3883,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3830,
											"end": 3883,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3830,
											"end": 3883,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3830,
											"end": 3883,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3830,
											"end": 3883,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3830,
											"end": 3883,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 3830,
											"end": 3883,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3912,
											"end": 3922,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3901,
											"end": 3908,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3901,
											"end": 3922,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3901,
											"end": 3922,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3893,
											"end": 3947,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 3893,
											"end": 3947,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3893,
											"end": 3947,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3893,
											"end": 3947,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3893,
											"end": 3947,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3893,
											"end": 3947,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3893,
											"end": 3947,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3893,
											"end": 3947,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3893,
											"end": 3947,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3893,
											"end": 3947,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 3893,
											"end": 3947,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3893,
											"end": 3947,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 3893,
											"end": 3947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3893,
											"end": 3947,
											"name": "tag",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 3893,
											"end": 3947,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3893,
											"end": 3947,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3893,
											"end": 3947,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3893,
											"end": 3947,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3893,
											"end": 3947,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3893,
											"end": 3947,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3893,
											"end": 3947,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3893,
											"end": 3947,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3893,
											"end": 3947,
											"name": "tag",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 3893,
											"end": 3947,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1595,
											"end": 1637,
											"name": "PUSH",
											"source": 4,
											"value": "A0B86991C6218B36C1D19D4A2E9EB0CE3606EB48"
										},
										{
											"begin": 3958,
											"end": 3975,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3958,
											"end": 3975,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3958,
											"end": 3975,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 3976,
											"end": 3986,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3996,
											"end": 4000,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 4003,
											"end": 4013,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3958,
											"end": 4014,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3958,
											"end": 4014,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3958,
											"end": 4014,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3958,
											"end": 4014,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3958,
											"end": 4014,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3958,
											"end": 4014,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 3958,
											"end": 4014,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 3958,
											"end": 4014,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3958,
											"end": 4014,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3958,
											"end": 4014,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3958,
											"end": 4014,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3958,
											"end": 4014,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 3958,
											"end": 4014,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3958,
											"end": 4014,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3958,
											"end": 4014,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3958,
											"end": 4014,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3958,
											"end": 4014,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 3958,
											"end": 4014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3958,
											"end": 4014,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 3958,
											"end": 4014,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3958,
											"end": 4014,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3958,
											"end": 4014,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3958,
											"end": 4014,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3958,
											"end": 4014,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3958,
											"end": 4014,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3958,
											"end": 4014,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3958,
											"end": 4014,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3958,
											"end": 4014,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3958,
											"end": 4014,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3958,
											"end": 4014,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 3958,
											"end": 4014,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 3958,
											"end": 4014,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3958,
											"end": 4014,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3958,
											"end": 4014,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3958,
											"end": 4014,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 3958,
											"end": 4014,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3958,
											"end": 4014,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3958,
											"end": 4014,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3958,
											"end": 4014,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3958,
											"end": 4014,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 3958,
											"end": 4014,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3958,
											"end": 4014,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3958,
											"end": 4014,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3958,
											"end": 4014,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 3958,
											"end": 4014,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3958,
											"end": 4014,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3958,
											"end": 4014,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3958,
											"end": 4014,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3958,
											"end": 4014,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3958,
											"end": 4014,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3958,
											"end": 4014,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3958,
											"end": 4014,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3958,
											"end": 4014,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3958,
											"end": 4014,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 3958,
											"end": 4014,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3958,
											"end": 4014,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3958,
											"end": 4014,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3958,
											"end": 4014,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3958,
											"end": 4014,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3958,
											"end": 4014,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3958,
											"end": 4014,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3958,
											"end": 4014,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3958,
											"end": 4014,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3958,
											"end": 4014,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3958,
											"end": 4014,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3958,
											"end": 4014,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3958,
											"end": 4014,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3958,
											"end": 4014,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 3958,
											"end": 4014,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3958,
											"end": 4014,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3958,
											"end": 4014,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 3958,
											"end": 4014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3958,
											"end": 4014,
											"name": "tag",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 3958,
											"end": 4014,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3958,
											"end": 4014,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4024,
											"end": 4045,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4048,
											"end": 4078,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 4067,
											"end": 4077,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4048,
											"end": 4066,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 4048,
											"end": 4078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4048,
											"end": 4078,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 4048,
											"end": 4078,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4024,
											"end": 4078,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4024,
											"end": 4078,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4088,
											"end": 4107,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4110,
											"end": 4138,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 4127,
											"end": 4137,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4110,
											"end": 4126,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 4110,
											"end": 4138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4110,
											"end": 4138,
											"name": "tag",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 4110,
											"end": 4138,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4088,
											"end": 4138,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4088,
											"end": 4138,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4169,
											"end": 4180,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4153,
											"end": 4166,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4153,
											"end": 4180,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 4149,
											"end": 4536,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4149,
											"end": 4536,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 4149,
											"end": 4536,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4267,
											"end": 4305,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 4281,
											"end": 4291,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4304,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4267,
											"end": 4280,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 4267,
											"end": 4305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4267,
											"end": 4305,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 4267,
											"end": 4305,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4319,
											"end": 4368,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 4344,
											"end": 4354,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4356,
											"end": 4367,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4319,
											"end": 4343,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 4319,
											"end": 4368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4319,
											"end": 4368,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 4319,
											"end": 4368,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4149,
											"end": 4536,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 4149,
											"end": 4536,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4149,
											"end": 4536,
											"name": "tag",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 4149,
											"end": 4536,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4419,
											"end": 4469,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 4443,
											"end": 4453,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4455,
											"end": 4468,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4419,
											"end": 4442,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 4419,
											"end": 4469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4419,
											"end": 4469,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 4419,
											"end": 4469,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4483,
											"end": 4524,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 4498,
											"end": 4511,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4513,
											"end": 4523,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4483,
											"end": 4497,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 4483,
											"end": 4524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4483,
											"end": 4524,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 4483,
											"end": 4524,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4149,
											"end": 4536,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 4149,
											"end": 4536,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3694,
											"end": 4559,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3694,
											"end": 4559,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3694,
											"end": 4559,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3694,
											"end": 4559,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3631,
											"end": 4559,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3631,
											"end": 4559,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1912,
											"end": 2559,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 1912,
											"end": 2559,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1595,
											"end": 1637,
											"name": "PUSH",
											"source": 4,
											"value": "A0B86991C6218B36C1D19D4A2E9EB0CE3606EB48"
										},
										{
											"begin": 2009,
											"end": 2026,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2009,
											"end": 2026,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2009,
											"end": 2026,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 2027,
											"end": 2037,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2047,
											"end": 2051,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 2054,
											"end": 2066,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2009,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2009,
											"end": 2067,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2009,
											"end": 2067,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2009,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2009,
											"end": 2067,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2009,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 2009,
											"end": 2067,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 2009,
											"end": 2067,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2009,
											"end": 2067,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2009,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2009,
											"end": 2067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2009,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 2009,
											"end": 2067,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2009,
											"end": 2067,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2009,
											"end": 2067,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2009,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2009,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 2009,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2009,
											"end": 2067,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 2009,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2009,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2009,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2009,
											"end": 2067,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2009,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2009,
											"end": 2067,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2009,
											"end": 2067,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2009,
											"end": 2067,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2009,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2009,
											"end": 2067,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2009,
											"end": 2067,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 2009,
											"end": 2067,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 2009,
											"end": 2067,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2009,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2009,
											"end": 2067,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2009,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 2009,
											"end": 2067,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2009,
											"end": 2067,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2009,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2009,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2009,
											"end": 2067,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 2009,
											"end": 2067,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2009,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2009,
											"end": 2067,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2009,
											"end": 2067,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 2009,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2009,
											"end": 2067,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2009,
											"end": 2067,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2009,
											"end": 2067,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2009,
											"end": 2067,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2009,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2009,
											"end": 2067,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2009,
											"end": 2067,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2009,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2009,
											"end": 2067,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2009,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2009,
											"end": 2067,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2009,
											"end": 2067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2009,
											"end": 2067,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2009,
											"end": 2067,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2009,
											"end": 2067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2009,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2009,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2009,
											"end": 2067,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2009,
											"end": 2067,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2009,
											"end": 2067,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2009,
											"end": 2067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2009,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2009,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 2009,
											"end": 2067,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2009,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2009,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 2009,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2009,
											"end": 2067,
											"name": "tag",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 2009,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2009,
											"end": 2067,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1595,
											"end": 1637,
											"name": "PUSH",
											"source": 4,
											"value": "A0B86991C6218B36C1D19D4A2E9EB0CE3606EB48"
										},
										{
											"begin": 2077,
											"end": 2089,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2077,
											"end": 2089,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2077,
											"end": 2089,
											"name": "PUSH",
											"source": 4,
											"value": "95EA7B3"
										},
										{
											"begin": 2098,
											"end": 2111,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "743"
										},
										{
											"begin": 2114,
											"end": 2126,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2077,
											"end": 2127,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2077,
											"end": 2127,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2077,
											"end": 2127,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2077,
											"end": 2127,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2077,
											"end": 2127,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2077,
											"end": 2127,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 2077,
											"end": 2127,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 2077,
											"end": 2127,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2077,
											"end": 2127,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2077,
											"end": 2127,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2077,
											"end": 2127,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2077,
											"end": 2127,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 2077,
											"end": 2127,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2077,
											"end": 2127,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2077,
											"end": 2127,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2077,
											"end": 2127,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 2077,
											"end": 2127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2077,
											"end": 2127,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 2077,
											"end": 2127,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2077,
											"end": 2127,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2077,
											"end": 2127,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2077,
											"end": 2127,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2077,
											"end": 2127,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2077,
											"end": 2127,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2077,
											"end": 2127,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2077,
											"end": 2127,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2077,
											"end": 2127,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2077,
											"end": 2127,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2077,
											"end": 2127,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 2077,
											"end": 2127,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 2077,
											"end": 2127,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2077,
											"end": 2127,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2077,
											"end": 2127,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2077,
											"end": 2127,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 2077,
											"end": 2127,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2077,
											"end": 2127,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2077,
											"end": 2127,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2077,
											"end": 2127,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2077,
											"end": 2127,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 2077,
											"end": 2127,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2077,
											"end": 2127,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2077,
											"end": 2127,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2077,
											"end": 2127,
											"name": "tag",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 2077,
											"end": 2127,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2077,
											"end": 2127,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2077,
											"end": 2127,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2077,
											"end": 2127,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2077,
											"end": 2127,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2077,
											"end": 2127,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2077,
											"end": 2127,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2077,
											"end": 2127,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2077,
											"end": 2127,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2077,
											"end": 2127,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2077,
											"end": 2127,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2077,
											"end": 2127,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2077,
											"end": 2127,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2077,
											"end": 2127,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2077,
											"end": 2127,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2077,
											"end": 2127,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2077,
											"end": 2127,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2077,
											"end": 2127,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2077,
											"end": 2127,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2077,
											"end": 2127,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2077,
											"end": 2127,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2077,
											"end": 2127,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2077,
											"end": 2127,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2077,
											"end": 2127,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 2077,
											"end": 2127,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2077,
											"end": 2127,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2077,
											"end": 2127,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 2077,
											"end": 2127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2077,
											"end": 2127,
											"name": "tag",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 2077,
											"end": 2127,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2077,
											"end": 2127,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2138,
											"end": 2186,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2189,
											"end": 2504,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2189,
											"end": 2504,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2189,
											"end": 2504,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2189,
											"end": 2504,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2189,
											"end": 2504,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2189,
											"end": 2504,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2189,
											"end": 2504,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2189,
											"end": 2504,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1595,
											"end": 1637,
											"name": "PUSH",
											"source": 4,
											"value": "A0B86991C6218B36C1D19D4A2E9EB0CE3606EB48"
										},
										{
											"begin": 2189,
											"end": 2504,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2189,
											"end": 2504,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2189,
											"end": 2504,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2189,
											"end": 2504,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2189,
											"end": 2504,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2189,
											"end": 2504,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1523,
											"end": 1565,
											"name": "PUSH",
											"source": 4,
											"value": "C02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2"
										},
										{
											"begin": 2189,
											"end": 2504,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2189,
											"end": 2504,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2189,
											"end": 2504,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2189,
											"end": 2504,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2189,
											"end": 2504,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2189,
											"end": 2504,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2298,
											"end": 2302,
											"name": "PUSH",
											"source": 4,
											"value": "BB8"
										},
										{
											"begin": 2189,
											"end": 2504,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFF"
										},
										{
											"begin": 2189,
											"end": 2504,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2189,
											"end": 2504,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2189,
											"end": 2504,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2189,
											"end": 2504,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2189,
											"end": 2504,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2327,
											"end": 2337,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2189,
											"end": 2504,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2189,
											"end": 2504,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2189,
											"end": 2504,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2189,
											"end": 2504,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2189,
											"end": 2504,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2189,
											"end": 2504,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2361,
											"end": 2376,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 2189,
											"end": 2504,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2189,
											"end": 2504,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2189,
											"end": 2504,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2189,
											"end": 2504,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2400,
											"end": 2412,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2189,
											"end": 2504,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2189,
											"end": 2504,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2189,
											"end": 2504,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2189,
											"end": 2504,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2444,
											"end": 2459,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2189,
											"end": 2504,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2189,
											"end": 2504,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2189,
											"end": 2504,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2189,
											"end": 2504,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2492,
											"end": 2493,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2189,
											"end": 2504,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2189,
											"end": 2504,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2189,
											"end": 2504,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2189,
											"end": 2504,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2189,
											"end": 2504,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2138,
											"end": 2504,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2138,
											"end": 2504,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2514,
											"end": 2527,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "743"
										},
										{
											"begin": 2514,
											"end": 2544,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2514,
											"end": 2544,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2514,
											"end": 2544,
											"name": "PUSH",
											"source": 4,
											"value": "414BF389"
										},
										{
											"begin": 2545,
											"end": 2551,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 2514,
											"end": 2552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "tag",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2514,
											"end": 2552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2514,
											"end": 2552,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1999,
											"end": 2559,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1912,
											"end": 2559,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1912,
											"end": 2559,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1912,
											"end": 2559,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 758,
											"end": 764,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 766,
											"end": 772,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 815,
											"end": 817,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 803,
											"end": 812,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 794,
											"end": 801,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 790,
											"end": 813,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 786,
											"end": 818,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 783,
											"end": 902,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 783,
											"end": 902,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 783,
											"end": 902,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 821,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 821,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 821,
											"end": 900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 821,
											"end": 900,
											"name": "tag",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 821,
											"end": 900,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 783,
											"end": 902,
											"name": "tag",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 783,
											"end": 902,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 941,
											"end": 942,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 1011,
											"end": 1018,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1002,
											"end": 1008,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 991,
											"end": 1000,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1009,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 966,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 966,
											"end": 1019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 966,
											"end": 1019,
											"name": "tag",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 966,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 956,
											"end": 1019,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 956,
											"end": 1019,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 912,
											"end": 1029,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1068,
											"end": 1070,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1094,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 1139,
											"end": 1146,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1130,
											"end": 1136,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1119,
											"end": 1128,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1115,
											"end": 1137,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1094,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 1094,
											"end": 1147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1094,
											"end": 1147,
											"name": "tag",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 1094,
											"end": 1147,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1084,
											"end": 1147,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1084,
											"end": 1147,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1039,
											"end": 1157,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 690,
											"end": 1164,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1170,
											"end": 1499,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1170,
											"end": 1499,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1229,
											"end": 1235,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1278,
											"end": 1280,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1266,
											"end": 1275,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1257,
											"end": 1264,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1253,
											"end": 1276,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1281,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1246,
											"end": 1365,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1246,
											"end": 1365,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 1246,
											"end": 1365,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1284,
											"end": 1363,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 1284,
											"end": 1363,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 1284,
											"end": 1363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1284,
											"end": 1363,
											"name": "tag",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 1284,
											"end": 1363,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1246,
											"end": 1365,
											"name": "tag",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 1246,
											"end": 1365,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1404,
											"end": 1405,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 1474,
											"end": 1481,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1465,
											"end": 1471,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1454,
											"end": 1463,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1450,
											"end": 1472,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1429,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 1429,
											"end": 1482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1429,
											"end": 1482,
											"name": "tag",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 1429,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1419,
											"end": 1482,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1419,
											"end": 1482,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1375,
											"end": 1492,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1170,
											"end": 1499,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1170,
											"end": 1499,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1170,
											"end": 1499,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1170,
											"end": 1499,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1170,
											"end": 1499,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1505,
											"end": 1623,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 1505,
											"end": 1623,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1592,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 1610,
											"end": 1615,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1592,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 1592,
											"end": 1616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1592,
											"end": 1616,
											"name": "tag",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 1592,
											"end": 1616,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1587,
											"end": 1590,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1580,
											"end": 1617,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1505,
											"end": 1623,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1505,
											"end": 1623,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1505,
											"end": 1623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1629,
											"end": 1851,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 1629,
											"end": 1851,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1722,
											"end": 1726,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1760,
											"end": 1762,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1749,
											"end": 1758,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1763,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1737,
											"end": 1763,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1737,
											"end": 1763,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1773,
											"end": 1844,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 1841,
											"end": 1842,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1839,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1826,
											"end": 1843,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1817,
											"end": 1823,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1773,
											"end": 1844,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 1773,
											"end": 1844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1773,
											"end": 1844,
											"name": "tag",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 1773,
											"end": 1844,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1629,
											"end": 1851,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1629,
											"end": 1851,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1629,
											"end": 1851,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1629,
											"end": 1851,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1629,
											"end": 1851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1857,
											"end": 1983,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 1857,
											"end": 1983,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1894,
											"end": 1901,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1934,
											"end": 1976,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1927,
											"end": 1932,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1977,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1912,
											"end": 1977,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1912,
											"end": 1977,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1857,
											"end": 1983,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1857,
											"end": 1983,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1857,
											"end": 1983,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1857,
											"end": 1983,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1989,
											"end": 2049,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 1989,
											"end": 2049,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2017,
											"end": 2020,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2038,
											"end": 2043,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2031,
											"end": 2043,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2031,
											"end": 2043,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1989,
											"end": 2049,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1989,
											"end": 2049,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1989,
											"end": 2049,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1989,
											"end": 2049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2055,
											"end": 2197,
											"name": "tag",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 2055,
											"end": 2197,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2114,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2138,
											"end": 2191,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 2156,
											"end": 2190,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 2165,
											"end": 2189,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 2183,
											"end": 2188,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2165,
											"end": 2189,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 2165,
											"end": 2189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2165,
											"end": 2189,
											"name": "tag",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 2165,
											"end": 2189,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2156,
											"end": 2190,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 2156,
											"end": 2190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2156,
											"end": 2190,
											"name": "tag",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 2156,
											"end": 2190,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2138,
											"end": 2191,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 2138,
											"end": 2191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2138,
											"end": 2191,
											"name": "tag",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 2138,
											"end": 2191,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2125,
											"end": 2191,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2125,
											"end": 2191,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2055,
											"end": 2197,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2055,
											"end": 2197,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2055,
											"end": 2197,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2055,
											"end": 2197,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2203,
											"end": 2329,
											"name": "tag",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 2203,
											"end": 2329,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2253,
											"end": 2262,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2286,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 2317,
											"end": 2322,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2286,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 2286,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2286,
											"end": 2323,
											"name": "tag",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 2286,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2323,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2323,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2203,
											"end": 2329,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2203,
											"end": 2329,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2203,
											"end": 2329,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2203,
											"end": 2329,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2335,
											"end": 2479,
											"name": "tag",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 2335,
											"end": 2479,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2403,
											"end": 2412,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2436,
											"end": 2473,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 2467,
											"end": 2472,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2473,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 2436,
											"end": 2473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2473,
											"name": "tag",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 2436,
											"end": 2473,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2423,
											"end": 2473,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2423,
											"end": 2473,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2335,
											"end": 2479,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2335,
											"end": 2479,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2335,
											"end": 2479,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2335,
											"end": 2479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2485,
											"end": 2652,
											"name": "tag",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 2485,
											"end": 2652,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 2639,
											"end": 2644,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 2590,
											"end": 2645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2645,
											"name": "tag",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 2590,
											"end": 2645,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2585,
											"end": 2588,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2578,
											"end": 2646,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2485,
											"end": 2652,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2485,
											"end": 2652,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2485,
											"end": 2652,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2658,
											"end": 2916,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 2658,
											"end": 2916,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2769,
											"end": 2773,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2807,
											"end": 2809,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2796,
											"end": 2805,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2792,
											"end": 2810,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2784,
											"end": 2810,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2784,
											"end": 2810,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2820,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 2906,
											"end": 2907,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2895,
											"end": 2904,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2891,
											"end": 2908,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2882,
											"end": 2888,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2820,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 2820,
											"end": 2909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2820,
											"end": 2909,
											"name": "tag",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 2820,
											"end": 2909,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2658,
											"end": 2916,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2658,
											"end": 2916,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2658,
											"end": 2916,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2658,
											"end": 2916,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2658,
											"end": 2916,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2922,
											"end": 3067,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 2922,
											"end": 3067,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2991,
											"end": 3000,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3024,
											"end": 3061,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 3055,
											"end": 3060,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3024,
											"end": 3061,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 3024,
											"end": 3061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3024,
											"end": 3061,
											"name": "tag",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 3024,
											"end": 3061,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3011,
											"end": 3061,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3011,
											"end": 3061,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2922,
											"end": 3067,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2922,
											"end": 3067,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2922,
											"end": 3067,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2922,
											"end": 3067,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3073,
											"end": 3242,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 3073,
											"end": 3242,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3179,
											"end": 3235,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 3229,
											"end": 3234,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3179,
											"end": 3235,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 3179,
											"end": 3235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3179,
											"end": 3235,
											"name": "tag",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 3179,
											"end": 3235,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3174,
											"end": 3177,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3167,
											"end": 3236,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3073,
											"end": 3242,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3073,
											"end": 3242,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3073,
											"end": 3242,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3248,
											"end": 3508,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 3248,
											"end": 3508,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3360,
											"end": 3364,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3398,
											"end": 3400,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3387,
											"end": 3396,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3383,
											"end": 3401,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3375,
											"end": 3401,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3375,
											"end": 3401,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3411,
											"end": 3501,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 3498,
											"end": 3499,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3487,
											"end": 3496,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3483,
											"end": 3500,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3474,
											"end": 3480,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3411,
											"end": 3501,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 3411,
											"end": 3501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3411,
											"end": 3501,
											"name": "tag",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 3411,
											"end": 3501,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3248,
											"end": 3508,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3248,
											"end": 3508,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3248,
											"end": 3508,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3248,
											"end": 3508,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3248,
											"end": 3508,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3514,
											"end": 3599,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 3514,
											"end": 3599,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3559,
											"end": 3566,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3588,
											"end": 3593,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3577,
											"end": 3593,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3577,
											"end": 3593,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3514,
											"end": 3599,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3514,
											"end": 3599,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3514,
											"end": 3599,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3514,
											"end": 3599,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3605,
											"end": 3697,
											"name": "tag",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 3605,
											"end": 3697,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3641,
											"end": 3648,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3685,
											"end": 3690,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3681,
											"end": 3683,
											"name": "PUSH",
											"source": 5,
											"value": "F"
										},
										{
											"begin": 3670,
											"end": 3691,
											"name": "SIGNEXTEND",
											"source": 5
										},
										{
											"begin": 3659,
											"end": 3691,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3659,
											"end": 3691,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3605,
											"end": 3697,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3605,
											"end": 3697,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3605,
											"end": 3697,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3605,
											"end": 3697,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3703,
											"end": 3859,
											"name": "tag",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 3703,
											"end": 3859,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3760,
											"end": 3769,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3793,
											"end": 3853,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 3810,
											"end": 3852,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 3819,
											"end": 3851,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 3845,
											"end": 3850,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3819,
											"end": 3851,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 3819,
											"end": 3851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3819,
											"end": 3851,
											"name": "tag",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 3819,
											"end": 3851,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3810,
											"end": 3852,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 3810,
											"end": 3852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3810,
											"end": 3852,
											"name": "tag",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 3810,
											"end": 3852,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3793,
											"end": 3853,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 3793,
											"end": 3853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3793,
											"end": 3853,
											"name": "tag",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 3793,
											"end": 3853,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3780,
											"end": 3853,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3780,
											"end": 3853,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3703,
											"end": 3859,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3703,
											"end": 3859,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3703,
											"end": 3859,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3703,
											"end": 3859,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3865,
											"end": 4010,
											"name": "tag",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 3865,
											"end": 4010,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3959,
											"end": 4003,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 3997,
											"end": 4002,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3959,
											"end": 4003,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 3959,
											"end": 4003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3959,
											"end": 4003,
											"name": "tag",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 3959,
											"end": 4003,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3954,
											"end": 3957,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4004,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3865,
											"end": 4010,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3865,
											"end": 4010,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3865,
											"end": 4010,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4016,
											"end": 4101,
											"name": "tag",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 4016,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4061,
											"end": 4068,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4090,
											"end": 4095,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4079,
											"end": 4095,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4079,
											"end": 4095,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4016,
											"end": 4101,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4016,
											"end": 4101,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4016,
											"end": 4101,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4016,
											"end": 4101,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4107,
											"end": 4263,
											"name": "tag",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 4107,
											"end": 4263,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4164,
											"end": 4173,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4197,
											"end": 4257,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 4214,
											"end": 4256,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 4223,
											"end": 4255,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 4249,
											"end": 4254,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4223,
											"end": 4255,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 4223,
											"end": 4255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4223,
											"end": 4255,
											"name": "tag",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 4223,
											"end": 4255,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4214,
											"end": 4256,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 4214,
											"end": 4256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4214,
											"end": 4256,
											"name": "tag",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 4214,
											"end": 4256,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4197,
											"end": 4257,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 4197,
											"end": 4257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4197,
											"end": 4257,
											"name": "tag",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 4197,
											"end": 4257,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4184,
											"end": 4257,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4184,
											"end": 4257,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4107,
											"end": 4263,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4107,
											"end": 4263,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4107,
											"end": 4263,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4107,
											"end": 4263,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4269,
											"end": 4414,
											"name": "tag",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 4269,
											"end": 4414,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4363,
											"end": 4407,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 4401,
											"end": 4406,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4363,
											"end": 4407,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 4363,
											"end": 4407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4363,
											"end": 4407,
											"name": "tag",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 4363,
											"end": 4407,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4358,
											"end": 4361,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4351,
											"end": 4408,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4269,
											"end": 4414,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4269,
											"end": 4414,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4269,
											"end": 4414,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4420,
											"end": 5001,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 4420,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4611,
											"end": 4615,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4649,
											"end": 4652,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 4638,
											"end": 4647,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4634,
											"end": 4653,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4626,
											"end": 4653,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4626,
											"end": 4653,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4663,
											"end": 4741,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 4738,
											"end": 4739,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4727,
											"end": 4736,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4723,
											"end": 4740,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4714,
											"end": 4720,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 4663,
											"end": 4741,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 4663,
											"end": 4741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4663,
											"end": 4741,
											"name": "tag",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 4663,
											"end": 4741,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4751,
											"end": 4830,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 4826,
											"end": 4828,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4815,
											"end": 4824,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4811,
											"end": 4829,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4802,
											"end": 4808,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4751,
											"end": 4830,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 4751,
											"end": 4830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4751,
											"end": 4830,
											"name": "tag",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 4751,
											"end": 4830,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4840,
											"end": 4912,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 4908,
											"end": 4910,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4897,
											"end": 4906,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4893,
											"end": 4911,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4884,
											"end": 4890,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4840,
											"end": 4912,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 4840,
											"end": 4912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4840,
											"end": 4912,
											"name": "tag",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 4840,
											"end": 4912,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4922,
											"end": 4994,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 4990,
											"end": 4992,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 4979,
											"end": 4988,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4975,
											"end": 4993,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4966,
											"end": 4972,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4922,
											"end": 4994,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 4922,
											"end": 4994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4922,
											"end": 4994,
											"name": "tag",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 4922,
											"end": 4994,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4420,
											"end": 5001,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 4420,
											"end": 5001,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 4420,
											"end": 5001,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4420,
											"end": 5001,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4420,
											"end": 5001,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4420,
											"end": 5001,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4420,
											"end": 5001,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4420,
											"end": 5001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5007,
											"end": 5150,
											"name": "tag",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 5007,
											"end": 5150,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5064,
											"end": 5069,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5095,
											"end": 5101,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5089,
											"end": 5102,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5080,
											"end": 5102,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5080,
											"end": 5102,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5111,
											"end": 5144,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 5138,
											"end": 5143,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5111,
											"end": 5144,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 5111,
											"end": 5144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5111,
											"end": 5144,
											"name": "tag",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 5111,
											"end": 5144,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5007,
											"end": 5150,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5007,
											"end": 5150,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5007,
											"end": 5150,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5007,
											"end": 5150,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5007,
											"end": 5150,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5156,
											"end": 5507,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 5156,
											"end": 5507,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5226,
											"end": 5232,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5275,
											"end": 5277,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5263,
											"end": 5272,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5254,
											"end": 5261,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5250,
											"end": 5273,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5246,
											"end": 5278,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 5243,
											"end": 5362,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5243,
											"end": 5362,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 5243,
											"end": 5362,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5281,
											"end": 5360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 5281,
											"end": 5360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 5281,
											"end": 5360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5281,
											"end": 5360,
											"name": "tag",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 5281,
											"end": 5360,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5243,
											"end": 5362,
											"name": "tag",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 5243,
											"end": 5362,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5401,
											"end": 5402,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5426,
											"end": 5490,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 5482,
											"end": 5489,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5473,
											"end": 5479,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5462,
											"end": 5471,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5458,
											"end": 5480,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5426,
											"end": 5490,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 5426,
											"end": 5490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5426,
											"end": 5490,
											"name": "tag",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 5426,
											"end": 5490,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5416,
											"end": 5490,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5416,
											"end": 5490,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5372,
											"end": 5500,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5156,
											"end": 5507,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5156,
											"end": 5507,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5156,
											"end": 5507,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5156,
											"end": 5507,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5156,
											"end": 5507,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5513,
											"end": 5983,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 5513,
											"end": 5983,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5676,
											"end": 5680,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5714,
											"end": 5716,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 5703,
											"end": 5712,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5699,
											"end": 5717,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5691,
											"end": 5717,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5691,
											"end": 5717,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5727,
											"end": 5805,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 5802,
											"end": 5803,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5791,
											"end": 5800,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5787,
											"end": 5804,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5778,
											"end": 5784,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5727,
											"end": 5805,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 5727,
											"end": 5805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5727,
											"end": 5805,
											"name": "tag",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 5727,
											"end": 5805,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5815,
											"end": 5894,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 5890,
											"end": 5892,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5879,
											"end": 5888,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5875,
											"end": 5893,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5866,
											"end": 5872,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5815,
											"end": 5894,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 5815,
											"end": 5894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5815,
											"end": 5894,
											"name": "tag",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 5815,
											"end": 5894,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5904,
											"end": 5976,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 5972,
											"end": 5974,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5961,
											"end": 5970,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5957,
											"end": 5975,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5948,
											"end": 5954,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5904,
											"end": 5976,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 5904,
											"end": 5976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5904,
											"end": 5976,
											"name": "tag",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 5904,
											"end": 5976,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5513,
											"end": 5983,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 5513,
											"end": 5983,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 5513,
											"end": 5983,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5513,
											"end": 5983,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5513,
											"end": 5983,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5513,
											"end": 5983,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5513,
											"end": 5983,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5989,
											"end": 6085,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 5989,
											"end": 6085,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6026,
											"end": 6033,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6055,
											"end": 6079,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 6073,
											"end": 6078,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6055,
											"end": 6079,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 6055,
											"end": 6079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6055,
											"end": 6079,
											"name": "tag",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 6055,
											"end": 6079,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6044,
											"end": 6079,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6044,
											"end": 6079,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5989,
											"end": 6085,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5989,
											"end": 6085,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5989,
											"end": 6085,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5989,
											"end": 6085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6091,
											"end": 6209,
											"name": "tag",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 6091,
											"end": 6209,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6178,
											"end": 6202,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 6196,
											"end": 6201,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6178,
											"end": 6202,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 6178,
											"end": 6202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6178,
											"end": 6202,
											"name": "tag",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 6178,
											"end": 6202,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6173,
											"end": 6176,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6166,
											"end": 6203,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6091,
											"end": 6209,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6091,
											"end": 6209,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6091,
											"end": 6209,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6215,
											"end": 6547,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 6215,
											"end": 6547,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6336,
											"end": 6340,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6374,
											"end": 6376,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6363,
											"end": 6372,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6359,
											"end": 6377,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6351,
											"end": 6377,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6351,
											"end": 6377,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6387,
											"end": 6458,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 6455,
											"end": 6456,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6444,
											"end": 6453,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6440,
											"end": 6457,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6431,
											"end": 6437,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6387,
											"end": 6458,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 6387,
											"end": 6458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6387,
											"end": 6458,
											"name": "tag",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 6387,
											"end": 6458,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6468,
											"end": 6540,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 6536,
											"end": 6538,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6525,
											"end": 6534,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6521,
											"end": 6539,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6512,
											"end": 6518,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6468,
											"end": 6540,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 6468,
											"end": 6540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6468,
											"end": 6540,
											"name": "tag",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 6468,
											"end": 6540,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6215,
											"end": 6547,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 6215,
											"end": 6547,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6215,
											"end": 6547,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6215,
											"end": 6547,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6215,
											"end": 6547,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6215,
											"end": 6547,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6553,
											"end": 6643,
											"name": "tag",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 6553,
											"end": 6643,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6587,
											"end": 6594,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6630,
											"end": 6635,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6623,
											"end": 6636,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6616,
											"end": 6637,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6605,
											"end": 6637,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6605,
											"end": 6637,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6553,
											"end": 6643,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6553,
											"end": 6643,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6553,
											"end": 6643,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6553,
											"end": 6643,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6649,
											"end": 6765,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 6649,
											"end": 6765,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6719,
											"end": 6740,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "266"
										},
										{
											"begin": 6734,
											"end": 6739,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6719,
											"end": 6740,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 6719,
											"end": 6740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6719,
											"end": 6740,
											"name": "tag",
											"source": 5,
											"value": "266"
										},
										{
											"begin": 6719,
											"end": 6740,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6712,
											"end": 6717,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6709,
											"end": 6741,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 6699,
											"end": 6759,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 6699,
											"end": 6759,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6755,
											"end": 6756,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6752,
											"end": 6753,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6745,
											"end": 6757,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6699,
											"end": 6759,
											"name": "tag",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 6699,
											"end": 6759,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6649,
											"end": 6765,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6649,
											"end": 6765,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6771,
											"end": 6908,
											"name": "tag",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 6771,
											"end": 6908,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6825,
											"end": 6830,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6856,
											"end": 6862,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6841,
											"end": 6863,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6841,
											"end": 6863,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6872,
											"end": 6902,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "269"
										},
										{
											"begin": 6896,
											"end": 6901,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6872,
											"end": 6902,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 6872,
											"end": 6902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6872,
											"end": 6902,
											"name": "tag",
											"source": 5,
											"value": "269"
										},
										{
											"begin": 6872,
											"end": 6902,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6771,
											"end": 6908,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6771,
											"end": 6908,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6771,
											"end": 6908,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6771,
											"end": 6908,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6771,
											"end": 6908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6914,
											"end": 7259,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 6914,
											"end": 7259,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6981,
											"end": 6987,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7030,
											"end": 7032,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7018,
											"end": 7027,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7009,
											"end": 7016,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7005,
											"end": 7028,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7001,
											"end": 7033,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 6998,
											"end": 7117,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6998,
											"end": 7117,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "271"
										},
										{
											"begin": 6998,
											"end": 7117,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7036,
											"end": 7115,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 7036,
											"end": 7115,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 7036,
											"end": 7115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7036,
											"end": 7115,
											"name": "tag",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 7036,
											"end": 7115,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6998,
											"end": 7117,
											"name": "tag",
											"source": 5,
											"value": "271"
										},
										{
											"begin": 6998,
											"end": 7117,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7156,
											"end": 7157,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7181,
											"end": 7242,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 7234,
											"end": 7241,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7225,
											"end": 7231,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7214,
											"end": 7223,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7210,
											"end": 7232,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7181,
											"end": 7242,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 7181,
											"end": 7242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7181,
											"end": 7242,
											"name": "tag",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 7181,
											"end": 7242,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7171,
											"end": 7242,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7171,
											"end": 7242,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7127,
											"end": 7252,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6914,
											"end": 7259,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6914,
											"end": 7259,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6914,
											"end": 7259,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6914,
											"end": 7259,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6914,
											"end": 7259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7265,
											"end": 7423,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 7265,
											"end": 7423,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7323,
											"end": 7332,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7356,
											"end": 7417,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 7374,
											"end": 7416,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 7383,
											"end": 7415,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 7409,
											"end": 7414,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7383,
											"end": 7415,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 7383,
											"end": 7415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7383,
											"end": 7415,
											"name": "tag",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 7383,
											"end": 7415,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7374,
											"end": 7416,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 7374,
											"end": 7416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7374,
											"end": 7416,
											"name": "tag",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 7374,
											"end": 7416,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7356,
											"end": 7417,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 7356,
											"end": 7417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7356,
											"end": 7417,
											"name": "tag",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 7356,
											"end": 7417,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7343,
											"end": 7417,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7343,
											"end": 7417,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7265,
											"end": 7423,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7265,
											"end": 7423,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7265,
											"end": 7423,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7265,
											"end": 7423,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7429,
											"end": 7576,
											"name": "tag",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 7429,
											"end": 7576,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7524,
											"end": 7569,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 7563,
											"end": 7568,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7524,
											"end": 7569,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 7524,
											"end": 7569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7524,
											"end": 7569,
											"name": "tag",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 7524,
											"end": 7569,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7519,
											"end": 7522,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7512,
											"end": 7570,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7429,
											"end": 7576,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7429,
											"end": 7576,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7429,
											"end": 7576,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7582,
											"end": 8179,
											"name": "tag",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 7582,
											"end": 8179,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7781,
											"end": 7785,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7819,
											"end": 7822,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 7808,
											"end": 7817,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7804,
											"end": 7823,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7796,
											"end": 7823,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7796,
											"end": 7823,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7833,
											"end": 7911,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 7908,
											"end": 7909,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7897,
											"end": 7906,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7893,
											"end": 7910,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7884,
											"end": 7890,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 7833,
											"end": 7911,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 7833,
											"end": 7911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7833,
											"end": 7911,
											"name": "tag",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 7833,
											"end": 7911,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7921,
											"end": 8000,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "282"
										},
										{
											"begin": 7996,
											"end": 7998,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7985,
											"end": 7994,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7981,
											"end": 7999,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7972,
											"end": 7978,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 7921,
											"end": 8000,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 7921,
											"end": 8000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7921,
											"end": 8000,
											"name": "tag",
											"source": 5,
											"value": "282"
										},
										{
											"begin": 7921,
											"end": 8000,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8010,
											"end": 8082,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "283"
										},
										{
											"begin": 8078,
											"end": 8080,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8067,
											"end": 8076,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8063,
											"end": 8081,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8054,
											"end": 8060,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 8010,
											"end": 8082,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 8010,
											"end": 8082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8010,
											"end": 8082,
											"name": "tag",
											"source": 5,
											"value": "283"
										},
										{
											"begin": 8010,
											"end": 8082,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8092,
											"end": 8172,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 8168,
											"end": 8170,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 8157,
											"end": 8166,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8153,
											"end": 8171,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8144,
											"end": 8150,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8092,
											"end": 8172,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 8092,
											"end": 8172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8092,
											"end": 8172,
											"name": "tag",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 8092,
											"end": 8172,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7582,
											"end": 8179,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 7582,
											"end": 8179,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 7582,
											"end": 8179,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7582,
											"end": 8179,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7582,
											"end": 8179,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7582,
											"end": 8179,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7582,
											"end": 8179,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7582,
											"end": 8179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8185,
											"end": 8293,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 8185,
											"end": 8293,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8262,
											"end": 8286,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 8280,
											"end": 8285,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8262,
											"end": 8286,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 8262,
											"end": 8286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8262,
											"end": 8286,
											"name": "tag",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 8262,
											"end": 8286,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8257,
											"end": 8260,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8250,
											"end": 8287,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8185,
											"end": 8293,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8185,
											"end": 8293,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8185,
											"end": 8293,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8299,
											"end": 8390,
											"name": "tag",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 8299,
											"end": 8390,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8335,
											"end": 8342,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8375,
											"end": 8383,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFF"
										},
										{
											"begin": 8368,
											"end": 8373,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8364,
											"end": 8384,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8353,
											"end": 8384,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8353,
											"end": 8384,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8299,
											"end": 8390,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8299,
											"end": 8390,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8299,
											"end": 8390,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8299,
											"end": 8390,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8396,
											"end": 8501,
											"name": "tag",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 8396,
											"end": 8501,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8471,
											"end": 8494,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "289"
										},
										{
											"begin": 8488,
											"end": 8493,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8471,
											"end": 8494,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 8471,
											"end": 8494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8471,
											"end": 8494,
											"name": "tag",
											"source": 5,
											"value": "289"
										},
										{
											"begin": 8471,
											"end": 8494,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8466,
											"end": 8469,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8459,
											"end": 8495,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8396,
											"end": 8501,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8396,
											"end": 8501,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8396,
											"end": 8501,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8615,
											"name": "tag",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 8507,
											"end": 8615,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8584,
											"end": 8608,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "291"
										},
										{
											"begin": 8602,
											"end": 8607,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8584,
											"end": 8608,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 8584,
											"end": 8608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8584,
											"end": 8608,
											"name": "tag",
											"source": 5,
											"value": "291"
										},
										{
											"begin": 8584,
											"end": 8608,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8579,
											"end": 8582,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8572,
											"end": 8609,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8615,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8615,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8615,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8621,
											"end": 8729,
											"name": "tag",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 8621,
											"end": 8729,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8698,
											"end": 8722,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "293"
										},
										{
											"begin": 8716,
											"end": 8721,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8698,
											"end": 8722,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 8698,
											"end": 8722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8698,
											"end": 8722,
											"name": "tag",
											"source": 5,
											"value": "293"
										},
										{
											"begin": 8698,
											"end": 8722,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8693,
											"end": 8696,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8686,
											"end": 8723,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8621,
											"end": 8729,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8621,
											"end": 8729,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8621,
											"end": 8729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8829,
											"end": 10452,
											"name": "tag",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 8829,
											"end": 10452,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9004,
											"end": 9010,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 8999,
											"end": 9002,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8995,
											"end": 9011,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9096,
											"end": 9100,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9089,
											"end": 9094,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9085,
											"end": 9101,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9079,
											"end": 9102,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9115,
											"end": 9178,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 9172,
											"end": 9176,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9167,
											"end": 9170,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9163,
											"end": 9177,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9149,
											"end": 9161,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9115,
											"end": 9178,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 9115,
											"end": 9178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9115,
											"end": 9178,
											"name": "tag",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 9115,
											"end": 9178,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9021,
											"end": 9188,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9274,
											"end": 9278,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9267,
											"end": 9272,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9263,
											"end": 9279,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9257,
											"end": 9280,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9293,
											"end": 9356,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "296"
										},
										{
											"begin": 9350,
											"end": 9354,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9345,
											"end": 9348,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9341,
											"end": 9355,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9327,
											"end": 9339,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9293,
											"end": 9356,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 9293,
											"end": 9356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9293,
											"end": 9356,
											"name": "tag",
											"source": 5,
											"value": "296"
										},
										{
											"begin": 9293,
											"end": 9356,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9198,
											"end": 9366,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9447,
											"end": 9451,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9440,
											"end": 9445,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9436,
											"end": 9452,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9430,
											"end": 9453,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9466,
											"end": 9527,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "297"
										},
										{
											"begin": 9521,
											"end": 9525,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9516,
											"end": 9519,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9512,
											"end": 9526,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9498,
											"end": 9510,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9466,
											"end": 9527,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 9466,
											"end": 9527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9466,
											"end": 9527,
											"name": "tag",
											"source": 5,
											"value": "297"
										},
										{
											"begin": 9466,
											"end": 9527,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9376,
											"end": 9537,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9624,
											"end": 9628,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 9617,
											"end": 9622,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9613,
											"end": 9629,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9607,
											"end": 9630,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9643,
											"end": 9706,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "298"
										},
										{
											"begin": 9700,
											"end": 9704,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 9695,
											"end": 9698,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9691,
											"end": 9705,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9677,
											"end": 9689,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9643,
											"end": 9706,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 9643,
											"end": 9706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9643,
											"end": 9706,
											"name": "tag",
											"source": 5,
											"value": "298"
										},
										{
											"begin": 9643,
											"end": 9706,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9547,
											"end": 9716,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9802,
											"end": 9806,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 9795,
											"end": 9800,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9791,
											"end": 9807,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9785,
											"end": 9808,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9821,
											"end": 9884,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "299"
										},
										{
											"begin": 9878,
											"end": 9882,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 9873,
											"end": 9876,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9869,
											"end": 9883,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9855,
											"end": 9867,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9821,
											"end": 9884,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 9821,
											"end": 9884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9821,
											"end": 9884,
											"name": "tag",
											"source": 5,
											"value": "299"
										},
										{
											"begin": 9821,
											"end": 9884,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9726,
											"end": 9894,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9980,
											"end": 9984,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 9973,
											"end": 9978,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9969,
											"end": 9985,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9963,
											"end": 9986,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9999,
											"end": 10062,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "300"
										},
										{
											"begin": 10056,
											"end": 10060,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 10051,
											"end": 10054,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 10047,
											"end": 10061,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10033,
											"end": 10045,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9999,
											"end": 10062,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 9999,
											"end": 10062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9999,
											"end": 10062,
											"name": "tag",
											"source": 5,
											"value": "300"
										},
										{
											"begin": 9999,
											"end": 10062,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9904,
											"end": 10072,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10166,
											"end": 10170,
											"name": "PUSH",
											"source": 5,
											"value": "C0"
										},
										{
											"begin": 10159,
											"end": 10164,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10155,
											"end": 10171,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10149,
											"end": 10172,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10185,
											"end": 10248,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "301"
										},
										{
											"begin": 10242,
											"end": 10246,
											"name": "PUSH",
											"source": 5,
											"value": "C0"
										},
										{
											"begin": 10237,
											"end": 10240,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 10233,
											"end": 10247,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10219,
											"end": 10231,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10185,
											"end": 10248,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 10185,
											"end": 10248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10185,
											"end": 10248,
											"name": "tag",
											"source": 5,
											"value": "301"
										},
										{
											"begin": 10185,
											"end": 10248,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10082,
											"end": 10258,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10353,
											"end": 10357,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 10346,
											"end": 10351,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10342,
											"end": 10358,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10336,
											"end": 10359,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10372,
											"end": 10435,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "302"
										},
										{
											"begin": 10429,
											"end": 10433,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 10424,
											"end": 10427,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 10420,
											"end": 10434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10406,
											"end": 10418,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10372,
											"end": 10435,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 10372,
											"end": 10435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10372,
											"end": 10435,
											"name": "tag",
											"source": 5,
											"value": "302"
										},
										{
											"begin": 10372,
											"end": 10435,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10268,
											"end": 10445,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8973,
											"end": 10452,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8829,
											"end": 10452,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8829,
											"end": 10452,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8829,
											"end": 10452,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10458,
											"end": 10837,
											"name": "tag",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 10458,
											"end": 10837,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10629,
											"end": 10633,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10667,
											"end": 10670,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 10656,
											"end": 10665,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10652,
											"end": 10671,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10644,
											"end": 10671,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10644,
											"end": 10671,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10681,
											"end": 10830,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "304"
										},
										{
											"begin": 10827,
											"end": 10828,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10816,
											"end": 10825,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10812,
											"end": 10829,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10803,
											"end": 10809,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10681,
											"end": 10830,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 10681,
											"end": 10830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10681,
											"end": 10830,
											"name": "tag",
											"source": 5,
											"value": "304"
										},
										{
											"begin": 10681,
											"end": 10830,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10458,
											"end": 10837,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 10458,
											"end": 10837,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10458,
											"end": 10837,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10458,
											"end": 10837,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10458,
											"end": 10837,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10843,
											"end": 11285,
											"name": "tag",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 10843,
											"end": 11285,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10992,
											"end": 10996,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11030,
											"end": 11032,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 11019,
											"end": 11028,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11015,
											"end": 11033,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11007,
											"end": 11033,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11007,
											"end": 11033,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11043,
											"end": 11114,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "306"
										},
										{
											"begin": 11111,
											"end": 11112,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11100,
											"end": 11109,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11096,
											"end": 11113,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11087,
											"end": 11093,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 11043,
											"end": 11114,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 11043,
											"end": 11114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11043,
											"end": 11114,
											"name": "tag",
											"source": 5,
											"value": "306"
										},
										{
											"begin": 11043,
											"end": 11114,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11124,
											"end": 11196,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "307"
										},
										{
											"begin": 11192,
											"end": 11194,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11181,
											"end": 11190,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11177,
											"end": 11195,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11168,
											"end": 11174,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 11124,
											"end": 11196,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 11124,
											"end": 11196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11124,
											"end": 11196,
											"name": "tag",
											"source": 5,
											"value": "307"
										},
										{
											"begin": 11124,
											"end": 11196,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11206,
											"end": 11278,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "308"
										},
										{
											"begin": 11274,
											"end": 11276,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 11263,
											"end": 11272,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11259,
											"end": 11277,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11250,
											"end": 11256,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 11206,
											"end": 11278,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 11206,
											"end": 11278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11206,
											"end": 11278,
											"name": "tag",
											"source": 5,
											"value": "308"
										},
										{
											"begin": 11206,
											"end": 11278,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10843,
											"end": 11285,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 10843,
											"end": 11285,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 10843,
											"end": 11285,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10843,
											"end": 11285,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10843,
											"end": 11285,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10843,
											"end": 11285,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10843,
											"end": 11285,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11387,
											"end": 13014,
											"name": "tag",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 11387,
											"end": 13014,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11564,
											"end": 11570,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 11559,
											"end": 11562,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11555,
											"end": 11571,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11656,
											"end": 11660,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11649,
											"end": 11654,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11645,
											"end": 11661,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11639,
											"end": 11662,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 11675,
											"end": 11738,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "310"
										},
										{
											"begin": 11732,
											"end": 11736,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11727,
											"end": 11730,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 11723,
											"end": 11737,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11709,
											"end": 11721,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11675,
											"end": 11738,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 11675,
											"end": 11738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11675,
											"end": 11738,
											"name": "tag",
											"source": 5,
											"value": "310"
										},
										{
											"begin": 11675,
											"end": 11738,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11581,
											"end": 11748,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11834,
											"end": 11838,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11827,
											"end": 11832,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11823,
											"end": 11839,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11817,
											"end": 11840,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 11853,
											"end": 11916,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "311"
										},
										{
											"begin": 11910,
											"end": 11914,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11905,
											"end": 11908,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 11901,
											"end": 11915,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11887,
											"end": 11899,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11853,
											"end": 11916,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 11853,
											"end": 11916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11853,
											"end": 11916,
											"name": "tag",
											"source": 5,
											"value": "311"
										},
										{
											"begin": 11853,
											"end": 11916,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11758,
											"end": 11926,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12007,
											"end": 12011,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 12000,
											"end": 12005,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11996,
											"end": 12012,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11990,
											"end": 12013,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 12026,
											"end": 12089,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "312"
										},
										{
											"begin": 12083,
											"end": 12087,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 12078,
											"end": 12081,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 12074,
											"end": 12088,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12060,
											"end": 12072,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12026,
											"end": 12089,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 12026,
											"end": 12089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12026,
											"end": 12089,
											"name": "tag",
											"source": 5,
											"value": "312"
										},
										{
											"begin": 12026,
											"end": 12089,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11936,
											"end": 12099,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12185,
											"end": 12189,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 12178,
											"end": 12183,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12174,
											"end": 12190,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12168,
											"end": 12191,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 12204,
											"end": 12267,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "313"
										},
										{
											"begin": 12261,
											"end": 12265,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 12256,
											"end": 12259,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 12252,
											"end": 12266,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12238,
											"end": 12250,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12204,
											"end": 12267,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 12204,
											"end": 12267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12204,
											"end": 12267,
											"name": "tag",
											"source": 5,
											"value": "313"
										},
										{
											"begin": 12204,
											"end": 12267,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12109,
											"end": 12277,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12364,
											"end": 12368,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 12357,
											"end": 12362,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12353,
											"end": 12369,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12347,
											"end": 12370,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 12383,
											"end": 12446,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 12440,
											"end": 12444,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 12435,
											"end": 12438,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 12431,
											"end": 12445,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12417,
											"end": 12429,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12383,
											"end": 12446,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 12383,
											"end": 12446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12383,
											"end": 12446,
											"name": "tag",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 12383,
											"end": 12446,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12287,
											"end": 12456,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12543,
											"end": 12547,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 12536,
											"end": 12541,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12532,
											"end": 12548,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12526,
											"end": 12549,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 12562,
											"end": 12625,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "315"
										},
										{
											"begin": 12619,
											"end": 12623,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 12614,
											"end": 12617,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 12610,
											"end": 12624,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12596,
											"end": 12608,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12562,
											"end": 12625,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 12562,
											"end": 12625,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12562,
											"end": 12625,
											"name": "tag",
											"source": 5,
											"value": "315"
										},
										{
											"begin": 12562,
											"end": 12625,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12466,
											"end": 12635,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12728,
											"end": 12732,
											"name": "PUSH",
											"source": 5,
											"value": "C0"
										},
										{
											"begin": 12721,
											"end": 12726,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12717,
											"end": 12733,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12711,
											"end": 12734,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 12747,
											"end": 12810,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "316"
										},
										{
											"begin": 12804,
											"end": 12808,
											"name": "PUSH",
											"source": 5,
											"value": "C0"
										},
										{
											"begin": 12799,
											"end": 12802,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 12795,
											"end": 12809,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12781,
											"end": 12793,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12747,
											"end": 12810,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 12747,
											"end": 12810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12747,
											"end": 12810,
											"name": "tag",
											"source": 5,
											"value": "316"
										},
										{
											"begin": 12747,
											"end": 12810,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12645,
											"end": 12820,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12915,
											"end": 12919,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 12908,
											"end": 12913,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12904,
											"end": 12920,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12898,
											"end": 12921,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 12934,
											"end": 12997,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "317"
										},
										{
											"begin": 12991,
											"end": 12995,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 12986,
											"end": 12989,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 12982,
											"end": 12996,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12968,
											"end": 12980,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12934,
											"end": 12997,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 12934,
											"end": 12997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12934,
											"end": 12997,
											"name": "tag",
											"source": 5,
											"value": "317"
										},
										{
											"begin": 12934,
											"end": 12997,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12830,
											"end": 13007,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11533,
											"end": 13014,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11387,
											"end": 13014,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11387,
											"end": 13014,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11387,
											"end": 13014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13020,
											"end": 13403,
											"name": "tag",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 13020,
											"end": 13403,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13193,
											"end": 13197,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13231,
											"end": 13234,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 13220,
											"end": 13229,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13216,
											"end": 13235,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13208,
											"end": 13235,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13208,
											"end": 13235,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13245,
											"end": 13396,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "319"
										},
										{
											"begin": 13393,
											"end": 13394,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13382,
											"end": 13391,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 13378,
											"end": 13395,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13369,
											"end": 13375,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 13245,
											"end": 13396,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 13245,
											"end": 13396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13245,
											"end": 13396,
											"name": "tag",
											"source": 5,
											"value": "319"
										},
										{
											"begin": 13245,
											"end": 13396,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13020,
											"end": 13403,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 13020,
											"end": 13403,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13020,
											"end": 13403,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13020,
											"end": 13403,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13020,
											"end": 13403,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13409,
											"end": 13741,
											"name": "tag",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 13409,
											"end": 13741,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13530,
											"end": 13534,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13568,
											"end": 13570,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 13557,
											"end": 13566,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13553,
											"end": 13571,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13545,
											"end": 13571,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13545,
											"end": 13571,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13581,
											"end": 13652,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "321"
										},
										{
											"begin": 13649,
											"end": 13650,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13638,
											"end": 13647,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 13634,
											"end": 13651,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13625,
											"end": 13631,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 13581,
											"end": 13652,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 13581,
											"end": 13652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13581,
											"end": 13652,
											"name": "tag",
											"source": 5,
											"value": "321"
										},
										{
											"begin": 13581,
											"end": 13652,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13662,
											"end": 13734,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "322"
										},
										{
											"begin": 13730,
											"end": 13732,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 13719,
											"end": 13728,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 13715,
											"end": 13733,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13706,
											"end": 13712,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 13662,
											"end": 13734,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 13662,
											"end": 13734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13662,
											"end": 13734,
											"name": "tag",
											"source": 5,
											"value": "322"
										},
										{
											"begin": 13662,
											"end": 13734,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13409,
											"end": 13741,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 13409,
											"end": 13741,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 13409,
											"end": 13741,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13409,
											"end": 13741,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13409,
											"end": 13741,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13409,
											"end": 13741,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13747,
											"end": 13969,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 13747,
											"end": 13969,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13840,
											"end": 13844,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13878,
											"end": 13880,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 13867,
											"end": 13876,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13863,
											"end": 13881,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13855,
											"end": 13881,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13855,
											"end": 13881,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13891,
											"end": 13962,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "324"
										},
										{
											"begin": 13959,
											"end": 13960,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13948,
											"end": 13957,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 13944,
											"end": 13961,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13935,
											"end": 13941,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 13891,
											"end": 13962,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 13891,
											"end": 13962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13891,
											"end": 13962,
											"name": "tag",
											"source": 5,
											"value": "324"
										},
										{
											"begin": 13891,
											"end": 13962,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13747,
											"end": 13969,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 13747,
											"end": 13969,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13747,
											"end": 13969,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13747,
											"end": 13969,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13747,
											"end": 13969,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13975,
											"end": 14144,
											"name": "tag",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 13975,
											"end": 14144,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14059,
											"end": 14070,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14093,
											"end": 14099,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14088,
											"end": 14091,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14081,
											"end": 14100,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 14133,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 14128,
											"end": 14131,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14124,
											"end": 14138,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14109,
											"end": 14138,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14109,
											"end": 14138,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13975,
											"end": 14144,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 13975,
											"end": 14144,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13975,
											"end": 14144,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13975,
											"end": 14144,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13975,
											"end": 14144,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14150,
											"end": 14317,
											"name": "tag",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 14150,
											"end": 14317,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14290,
											"end": 14309,
											"name": "PUSH",
											"source": 5,
											"value": "416C6C6F77616E636520746F6F206C6F77000000000000000000000000000000"
										},
										{
											"begin": 14286,
											"end": 14287,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14278,
											"end": 14284,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14274,
											"end": 14288,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14267,
											"end": 14310,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 14150,
											"end": 14317,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14150,
											"end": 14317,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14323,
											"end": 14689,
											"name": "tag",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 14323,
											"end": 14689,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14465,
											"end": 14468,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14486,
											"end": 14553,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "328"
										},
										{
											"begin": 14550,
											"end": 14552,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 14545,
											"end": 14548,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 14486,
											"end": 14553,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 14486,
											"end": 14553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14486,
											"end": 14553,
											"name": "tag",
											"source": 5,
											"value": "328"
										},
										{
											"begin": 14486,
											"end": 14553,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14479,
											"end": 14553,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14479,
											"end": 14553,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14562,
											"end": 14655,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "329"
										},
										{
											"begin": 14651,
											"end": 14654,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14562,
											"end": 14655,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 14562,
											"end": 14655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14562,
											"end": 14655,
											"name": "tag",
											"source": 5,
											"value": "329"
										},
										{
											"begin": 14562,
											"end": 14655,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14680,
											"end": 14682,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 14675,
											"end": 14678,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14671,
											"end": 14683,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14664,
											"end": 14683,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14664,
											"end": 14683,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14323,
											"end": 14689,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14323,
											"end": 14689,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14323,
											"end": 14689,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14323,
											"end": 14689,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14695,
											"end": 15114,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 14695,
											"end": 15114,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14861,
											"end": 14865,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14899,
											"end": 14901,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 14888,
											"end": 14897,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14884,
											"end": 14902,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14876,
											"end": 14902,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14876,
											"end": 14902,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14948,
											"end": 14957,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14942,
											"end": 14946,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14938,
											"end": 14958,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 14934,
											"end": 14935,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14923,
											"end": 14932,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 14919,
											"end": 14936,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14912,
											"end": 14959,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 14976,
											"end": 15107,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "331"
										},
										{
											"begin": 15102,
											"end": 15106,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14976,
											"end": 15107,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 14976,
											"end": 15107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14976,
											"end": 15107,
											"name": "tag",
											"source": 5,
											"value": "331"
										},
										{
											"begin": 14976,
											"end": 15107,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14968,
											"end": 15107,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14968,
											"end": 15107,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14695,
											"end": 15114,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14695,
											"end": 15114,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14695,
											"end": 15114,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14695,
											"end": 15114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15120,
											"end": 15290,
											"name": "tag",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 15120,
											"end": 15290,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15260,
											"end": 15282,
											"name": "PUSH",
											"source": 5,
											"value": "496E73756666696369656E742062616C616E6365000000000000000000000000"
										},
										{
											"begin": 15256,
											"end": 15257,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15248,
											"end": 15254,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15244,
											"end": 15258,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15237,
											"end": 15283,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15120,
											"end": 15290,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15120,
											"end": 15290,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15296,
											"end": 15662,
											"name": "tag",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 15296,
											"end": 15662,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15438,
											"end": 15441,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15459,
											"end": 15526,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "334"
										},
										{
											"begin": 15523,
											"end": 15525,
											"name": "PUSH",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 15518,
											"end": 15521,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15459,
											"end": 15526,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 15459,
											"end": 15526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15459,
											"end": 15526,
											"name": "tag",
											"source": 5,
											"value": "334"
										},
										{
											"begin": 15459,
											"end": 15526,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15452,
											"end": 15526,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15452,
											"end": 15526,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15535,
											"end": 15628,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "335"
										},
										{
											"begin": 15624,
											"end": 15627,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15535,
											"end": 15628,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 15535,
											"end": 15628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15535,
											"end": 15628,
											"name": "tag",
											"source": 5,
											"value": "335"
										},
										{
											"begin": 15535,
											"end": 15628,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15653,
											"end": 15655,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 15648,
											"end": 15651,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15644,
											"end": 15656,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15637,
											"end": 15656,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15637,
											"end": 15656,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15296,
											"end": 15662,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15296,
											"end": 15662,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15296,
											"end": 15662,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15296,
											"end": 15662,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15668,
											"end": 16087,
											"name": "tag",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 15668,
											"end": 16087,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15834,
											"end": 15838,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15872,
											"end": 15874,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 15861,
											"end": 15870,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15857,
											"end": 15875,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15849,
											"end": 15875,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15849,
											"end": 15875,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15921,
											"end": 15930,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15915,
											"end": 15919,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15911,
											"end": 15931,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 15907,
											"end": 15908,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15896,
											"end": 15905,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15892,
											"end": 15909,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15885,
											"end": 15932,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15949,
											"end": 16080,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "337"
										},
										{
											"begin": 16075,
											"end": 16079,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15949,
											"end": 16080,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 15949,
											"end": 16080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15949,
											"end": 16080,
											"name": "tag",
											"source": 5,
											"value": "337"
										},
										{
											"begin": 15949,
											"end": 16080,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15941,
											"end": 16080,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15941,
											"end": 16080,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15668,
											"end": 16087,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15668,
											"end": 16087,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15668,
											"end": 16087,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15668,
											"end": 16087,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"Arbitrage_Swap.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"buyEthOnCurve(uint256,uint256)": "04907bbb",
							"curvePool()": "218751b2",
							"exchangeArbitrage(uint256)": "d22cc067",
							"getAmountonCurve(uint256)": "1540e747",
							"getAmountonUniswap(uint256)": "c477b581",
							"sellEthonCurve(uint256,uint256)": "87b8d225",
							"swapExactInputSingleHop(uint256,uint256)": "e4eaab96",
							"swapExactOutputSingleHop(uint256,uint256)": "c9eb5e5a",
							"uniswapRouter()": "735de9f7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_uniswapRouter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_curvePool\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"usdcAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minEthAmount\",\"type\":\"uint256\"}],\"name\":\"buyEthOnCurve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"curvePool\",\"outputs\":[{\"internalType\":\"contract ICurvePool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"usdcAmount\",\"type\":\"uint256\"}],\"name\":\"exchangeArbitrage\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"usdcamount\",\"type\":\"uint256\"}],\"name\":\"getAmountonCurve\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"USDC_amount\",\"type\":\"uint256\"}],\"name\":\"getAmountonUniswap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ethAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minUsdcAmount\",\"type\":\"uint256\"}],\"name\":\"sellEthonCurve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"usdcamountin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minETHamountout\",\"type\":\"uint256\"}],\"name\":\"swapExactInputSingleHop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ethamountout\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxUSDCamountin\",\"type\":\"uint256\"}],\"name\":\"swapExactOutputSingleHop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapRouter\",\"outputs\":[{\"internalType\":\"contract ISwapRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Arbitrage_Swap.sol\":\"Arbitrage\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"Arbitrage_Swap.sol\":{\"keccak256\":\"0xf0787f99fd80dbae8a3ee6f76d06ea0ebc0c36c0858ea0f795ee87c2c313ee8c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15eabb056c9acbb6f4f2c3d1c30fa39a30565f5443deffc9829dffe6338f0a52\",\"dweb:/ipfs/Qmbz9H15pvPAnV3LxgfJAMpQUwUZGydSXyQgu5L9eGVpkh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ICurvePool": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "int128",
									"name": "i",
									"type": "int128"
								},
								{
									"internalType": "int128",
									"name": "j",
									"type": "int128"
								},
								{
									"internalType": "uint256",
									"name": "dx",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "min_dy",
									"type": "uint256"
								}
							],
							"name": "exchange",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int128",
									"name": "i",
									"type": "int128"
								},
								{
									"internalType": "int128",
									"name": "j",
									"type": "int128"
								},
								{
									"internalType": "uint256",
									"name": "dx",
									"type": "uint256"
								}
							],
							"name": "get_dy",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"exchange(int128,int128,uint256,uint256)": "3df02124",
							"get_dy(int128,int128,uint256)": "5e0d443f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int128\",\"name\":\"i\",\"type\":\"int128\"},{\"internalType\":\"int128\",\"name\":\"j\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"dx\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"min_dy\",\"type\":\"uint256\"}],\"name\":\"exchange\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int128\",\"name\":\"i\",\"type\":\"int128\"},{\"internalType\":\"int128\",\"name\":\"j\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"dx\",\"type\":\"uint256\"}],\"name\":\"get_dy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Arbitrage_Swap.sol\":\"ICurvePool\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"Arbitrage_Swap.sol\":{\"keccak256\":\"0xf0787f99fd80dbae8a3ee6f76d06ea0ebc0c36c0858ea0f795ee87c2c313ee8c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15eabb056c9acbb6f4f2c3d1c30fa39a30565f5443deffc9829dffe6338f0a52\",\"dweb:/ipfs/Qmbz9H15pvPAnV3LxgfJAMpQUwUZGydSXyQgu5L9eGVpkh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ISwapRouter": {
					"abi": [
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "tokenIn",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tokenOut",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountIn",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOutMinimum",
											"type": "uint256"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct ISwapRouter.ExactInputSingleParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactInputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "tokenIn",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tokenOut",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "fee",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "amountOut",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountInMaximum",
											"type": "uint256"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct ISwapRouter.ExactOutputSingleParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactOutputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": "414bf389",
							"exactOutputSingle((address,address,uint256,uint256,address,uint256,uint256,uint160))": "26a966c4"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactInputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactOutputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Arbitrage_Swap.sol\":\"ISwapRouter\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"Arbitrage_Swap.sol\":{\"keccak256\":\"0xf0787f99fd80dbae8a3ee6f76d06ea0ebc0c36c0858ea0f795ee87c2c313ee8c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15eabb056c9acbb6f4f2c3d1c30fa39a30565f5443deffc9829dffe6338f0a52\",\"dweb:/ipfs/Qmbz9H15pvPAnV3LxgfJAMpQUwUZGydSXyQgu5L9eGVpkh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "213:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "395:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "404:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "426:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "446:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:0"
									},
									"src": "389:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "626:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "635:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "658:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "683:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:0"
									},
									"src": "620:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "930:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "970:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:0"
									},
									"scope": 77,
									"src": "911:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1221:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1233:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1266:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:0"
									},
									"scope": 77,
									"src": "1203:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1566:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1581:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1621:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:0"
									},
									"scope": 77,
									"src": "1547:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2325:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2375:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:0"
									},
									"scope": 77,
									"src": "2308:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2711:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2725:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2737:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2770:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:0"
									},
									"scope": 77,
									"src": "2689:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "203:2575:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						}
					],
					"src": "106:2673:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							113
						]
					},
					"id": 114,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "123:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 80,
								"nodeType": "StructuredDocumentation",
								"src": "149:1963:1",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."
							},
							"fullyImplemented": false,
							"id": 113,
							"linearizedBaseContracts": [
								113
							],
							"name": "IERC20Permit",
							"nameLocation": "2123:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2142:850:1",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."
									},
									"functionSelector": "d505accf",
									"id": 98,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "3006:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3030:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3022:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3022:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3053:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3045:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3045:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3078:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3070:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 86,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3070:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3101:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3093:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 88,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3093:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3125:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3119:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 90,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3119:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3144:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3136:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 92,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3136:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3163:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3155:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 94,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3155:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3012:158:1"
									},
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3179:0:1"
									},
									"scope": 113,
									"src": "2997:183:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "3186:294:1",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 106,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "3494:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3509:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "3501:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3501:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3500:15:1"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "3539:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3539:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3538:9:1"
									},
									"scope": 113,
									"src": "3485:63:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "3554:128:1",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 112,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "3749:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3765:2:1"
									},
									"returnParameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "3791:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 109,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3791:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3790:9:1"
									},
									"scope": 113,
									"src": "3740:60:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 114,
							"src": "2113:1689:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "123:3680:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							656
						],
						"IERC20": [
							77
						],
						"IERC20Permit": [
							113
						],
						"SafeERC20": [
							403
						]
					},
					"id": 404,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 115,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 117,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 404,
							"sourceUnit": 78,
							"src": "141:37:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 116,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 77,
										"src": "149:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
							"file": "../extensions/IERC20Permit.sol",
							"id": 119,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 404,
							"sourceUnit": 114,
							"src": "179:60:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 118,
										"name": "IERC20Permit",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 113,
										"src": "187:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 121,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 404,
							"sourceUnit": 657,
							"src": "240:51:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 120,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 656,
										"src": "248:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 122,
								"nodeType": "StructuredDocumentation",
								"src": "293:457:2",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 403,
							"linearizedBaseContracts": [
								403
							],
							"name": "SafeERC20",
							"nameLocation": "759:9:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 125,
									"libraryName": {
										"id": 123,
										"name": "Address",
										"nameLocations": [
											"781:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 656,
										"src": "781:7:2"
									},
									"nodeType": "UsingForDirective",
									"src": "775:26:2",
									"typeName": {
										"id": 124,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "793:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"documentation": {
										"id": 126,
										"nodeType": "StructuredDocumentation",
										"src": "807:64:2",
										"text": " @dev An operation with an ERC20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 130,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "882:24:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "915:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "907:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "906:15:2"
									},
									"src": "876:46:2"
								},
								{
									"documentation": {
										"id": 131,
										"nodeType": "StructuredDocumentation",
										"src": "928:71:2",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 139,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "1010:32:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1051:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "1043:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "1068:16:2",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "1060:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1060:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1094:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "1086:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1086:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1042:70:2"
									},
									"src": "1004:109:2"
								},
								{
									"body": {
										"id": 162,
										"nodeType": "Block",
										"src": "1375:88:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 151,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 143,
															"src": "1405:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 154,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 143,
																		"src": "1427:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1433:8:2",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 44,
																	"src": "1427:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 156,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 145,
																			"src": "1444:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 157,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 147,
																			"src": "1448:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 158,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1443:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 152,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1412:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 153,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1416:10:2",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1412:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 159,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1412:43:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 150,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 353,
														"src": "1385:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1385:71:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 161,
												"nodeType": "ExpressionStatement",
												"src": "1385:71:2"
											}
										]
									},
									"documentation": {
										"id": 140,
										"nodeType": "StructuredDocumentation",
										"src": "1119:179:2",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 163,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1312:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1332:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "1325:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 142,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 141,
														"name": "IERC20",
														"nameLocations": [
															"1325:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "1325:6:2"
													},
													"referencedDeclaration": 77,
													"src": "1325:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1347:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "1339:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1339:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1359:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "1351:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1351:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1324:41:2"
									},
									"returnParameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1375:0:2"
									},
									"scope": 403,
									"src": "1303:160:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "1792:98:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 177,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "1822:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 180,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 167,
																		"src": "1844:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 181,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1850:12:2",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 76,
																	"src": "1844:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 182,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 169,
																			"src": "1865:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 183,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 171,
																			"src": "1871:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 184,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 173,
																			"src": "1875:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 185,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1864:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 178,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1829:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1833:10:2",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1829:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1829:53:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 176,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 353,
														"src": "1802:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1802:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "1802:81:2"
											}
										]
									},
									"documentation": {
										"id": 164,
										"nodeType": "StructuredDocumentation",
										"src": "1469:228:2",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1711:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1735:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1728:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 166,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 165,
														"name": "IERC20",
														"nameLocations": [
															"1728:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "1728:6:2"
													},
													"referencedDeclaration": 77,
													"src": "1728:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1750:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1742:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1742:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1764:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1756:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1756:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1776:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1768:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1768:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1727:55:2"
									},
									"returnParameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:0:2"
									},
									"scope": 403,
									"src": "1702:188:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 220,
										"nodeType": "Block",
										"src": "2167:139:2",
										"statements": [
											{
												"assignments": [
													202
												],
												"declarations": [
													{
														"constant": false,
														"id": 202,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2185:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 220,
														"src": "2177:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 201,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2177:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 211,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 207,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2224:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$403",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$403",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 206,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2216:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 205,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2216:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2216:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 209,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 196,
															"src": "2231:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 203,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "2200:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 204,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2206:9:2",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 54,
														"src": "2200:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2200:39:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2177:62:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 213,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "2262:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 214,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 196,
															"src": "2269:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 215,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 202,
																"src": "2278:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 216,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 198,
																"src": "2293:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2278:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 212,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 311,
														"src": "2249:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2249:50:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 219,
												"nodeType": "ExpressionStatement",
												"src": "2249:50:2"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "1896:180:2",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 221,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2090:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2119:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "2112:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 193,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 192,
														"name": "IERC20",
														"nameLocations": [
															"2112:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "2112:6:2"
													},
													"referencedDeclaration": 77,
													"src": "2112:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2134:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "2126:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2126:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2151:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "2143:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2143:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2111:46:2"
									},
									"returnParameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2167:0:2"
									},
									"scope": 403,
									"src": "2081:225:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 263,
										"nodeType": "Block",
										"src": "2607:370:2",
										"statements": [
											{
												"id": 262,
												"nodeType": "UncheckedBlock",
												"src": "2617:354:2",
												"statements": [
													{
														"assignments": [
															233
														],
														"declarations": [
															{
																"constant": false,
																"id": 233,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "2649:16:2",
																"nodeType": "VariableDeclaration",
																"scope": 262,
																"src": "2641:24:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 232,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2641:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 242,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 238,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2692:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$403",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$403",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 237,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2684:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 236,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2684:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 239,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2684:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 240,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 227,
																	"src": "2699:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 234,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 225,
																	"src": "2668:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 235,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2674:9:2",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 54,
																"src": "2668:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2668:39:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2641:66:2"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 243,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 233,
																"src": "2725:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 244,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 229,
																"src": "2744:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2725:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 253,
														"nodeType": "IfStatement",
														"src": "2721:160:2",
														"trueBody": {
															"id": 252,
															"nodeType": "Block",
															"src": "2763:118:2",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 247,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 227,
																				"src": "2821:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 248,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 233,
																				"src": "2830:16:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 249,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 229,
																				"src": "2848:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 246,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 139,
																			"src": "2788:32:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																				"typeString": "function (address,uint256,uint256) pure"
																			}
																		},
																		"id": 250,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2788:78:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 251,
																	"nodeType": "RevertStatement",
																	"src": "2781:85:2"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 255,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 225,
																	"src": "2907:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 256,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 227,
																	"src": "2914:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 259,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 257,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 233,
																		"src": "2923:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 258,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 229,
																		"src": "2942:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2923:36:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 254,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 311,
																"src": "2894:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 260,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2894:66:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 261,
														"nodeType": "ExpressionStatement",
														"src": "2894:66:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 222,
										"nodeType": "StructuredDocumentation",
										"src": "2312:192:2",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful."
									},
									"id": 264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2518:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2547:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "2540:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 224,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 223,
														"name": "IERC20",
														"nameLocations": [
															"2540:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "2540:6:2"
													},
													"referencedDeclaration": 77,
													"src": "2540:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2562:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "2554:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2554:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "2579:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "2571:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 228,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2571:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2539:58:2"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2607:0:2"
									},
									"scope": 403,
									"src": "2509:468:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 310,
										"nodeType": "Block",
										"src": "3373:303:2",
										"statements": [
											{
												"assignments": [
													276
												],
												"declarations": [
													{
														"constant": false,
														"id": 276,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "3396:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 310,
														"src": "3383:25:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 275,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3383:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 285,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 279,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 268,
																"src": "3426:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$77",
																	"typeString": "contract IERC20"
																}
															},
															"id": 280,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3432:7:2",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 64,
															"src": "3426:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 281,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 270,
																	"src": "3442:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 282,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "3451:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 283,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3441:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 277,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "3411:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 278,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3415:10:2",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "3411:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3411:47:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3383:75:2"
											},
											{
												"condition": {
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3473:45:2",
													"subExpression": {
														"arguments": [
															{
																"id": 287,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 268,
																"src": "3498:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$77",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 288,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 276,
																"src": "3505:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$77",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 286,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "3474:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 289,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3474:44:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 309,
												"nodeType": "IfStatement",
												"src": "3469:201:2",
												"trueBody": {
													"id": 308,
													"nodeType": "Block",
													"src": "3520:150:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 292,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 268,
																		"src": "3554:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 295,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 268,
																					"src": "3576:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$77",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 296,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3582:7:2",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 64,
																				"src": "3576:13:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 297,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 270,
																						"src": "3592:7:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 298,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3601:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 299,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3591:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 293,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3561:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 294,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "3565:10:2",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "3561:14:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 300,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3561:43:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 291,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 353,
																	"src": "3534:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 301,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:71:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 302,
															"nodeType": "ExpressionStatement",
															"src": "3534:71:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 304,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 268,
																		"src": "3639:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 305,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 276,
																		"src": "3646:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 303,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 353,
																	"src": "3619:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 306,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3619:40:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 307,
															"nodeType": "ExpressionStatement",
															"src": "3619:40:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 265,
										"nodeType": "StructuredDocumentation",
										"src": "2983:308:2",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."
									},
									"id": 311,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "3305:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3325:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "3318:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 267,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 266,
														"name": "IERC20",
														"nameLocations": [
															"3318:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "3318:6:2"
													},
													"referencedDeclaration": 77,
													"src": "3318:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3340:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "3332:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3332:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3357:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "3349:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3349:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:46:2"
									},
									"returnParameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3373:0:2"
									},
									"scope": 403,
									"src": "3296:380:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 352,
										"nodeType": "Block",
										"src": "4129:559:2",
										"statements": [
											{
												"assignments": [
													321
												],
												"declarations": [
													{
														"constant": false,
														"id": 321,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4491:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 352,
														"src": "4478:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 320,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4478:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 329,
												"initialValue": {
													"arguments": [
														{
															"id": 327,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 317,
															"src": "4532:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 324,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "4512:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 323,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4504:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 322,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4504:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 325,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4504:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 326,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4519:12:2",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 477,
														"src": "4504:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
															"typeString": "function (address,bytes memory) returns (bytes memory)"
														}
													},
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4504:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4478:59:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 333,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 330,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 321,
																"src": "4551:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 331,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4562:6:2",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4551:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 332,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4572:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4551:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 341,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4577:31:2",
														"subExpression": {
															"arguments": [
																{
																	"id": 336,
																	"name": "returndata",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 321,
																	"src": "4589:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"components": [
																		{
																			"id": 338,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4602:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bool_$",
																				"typeString": "type(bool)"
																			},
																			"typeName": {
																				"id": 337,
																				"name": "bool",
																				"nodeType": "ElementaryTypeName",
																				"src": "4602:4:2",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"id": 339,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4601:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																],
																"expression": {
																	"id": 334,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4578:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 335,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4582:6:2",
																"memberName": "decode",
																"nodeType": "MemberAccess",
																"src": "4578:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 340,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4578:30:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4551:57:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 351,
												"nodeType": "IfStatement",
												"src": "4547:135:2",
												"trueBody": {
													"id": 350,
													"nodeType": "Block",
													"src": "4610:72:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 346,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 315,
																				"src": "4664:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$77",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$77",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 345,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4656:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 344,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4656:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 347,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4656:14:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 343,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 130,
																	"src": "4631:24:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 348,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4631:40:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 349,
															"nodeType": "RevertStatement",
															"src": "4624:47:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 312,
										"nodeType": "StructuredDocumentation",
										"src": "3682:372:2",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 353,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "4068:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4095:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "4088:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 314,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 313,
														"name": "IERC20",
														"nameLocations": [
															"4088:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "4088:6:2"
													},
													"referencedDeclaration": 77,
													"src": "4088:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4115:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "4102:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 316,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4102:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4087:33:2"
									},
									"returnParameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4129:0:2"
									},
									"scope": 403,
									"src": "4059:629:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 401,
										"nodeType": "Block",
										"src": "5278:489:2",
										"statements": [
											{
												"assignments": [
													365,
													367
												],
												"declarations": [
													{
														"constant": false,
														"id": 365,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5579:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 401,
														"src": "5574:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 364,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5574:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 367,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5601:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 401,
														"src": "5588:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 366,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5588:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 375,
												"initialValue": {
													"arguments": [
														{
															"id": 373,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 359,
															"src": "5635:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 370,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 357,
																	"src": "5623:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 369,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5615:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 368,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5615:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5615:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 372,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5630:4:2",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "5615:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5615:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5573:67:2"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 390,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 376,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "5657:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 380,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 377,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 367,
																				"src": "5669:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 378,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5680:6:2",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "5669:17:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 379,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5690:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "5669:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 383,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 367,
																				"src": "5706:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 385,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "5719:4:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 384,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "5719:4:2",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 386,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5718:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 381,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5695:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 382,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5699:6:2",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "5695:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 387,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5695:30:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "5669:56:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 389,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5668:58:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "5657:69:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 398,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 393,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 357,
																			"src": "5738:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 392,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5730:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 391,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5730:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 394,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5730:14:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 395,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5745:4:2",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "5730:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 396,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5750:6:2",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "5730:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 397,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5759:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5730:30:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5657:103:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 363,
												"id": 400,
												"nodeType": "Return",
												"src": "5650:110:2"
											}
										]
									},
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "4694:490:2",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."
									},
									"id": 402,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "5198:23:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5229:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "5222:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 356,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 355,
														"name": "IERC20",
														"nameLocations": [
															"5222:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "5222:6:2"
													},
													"referencedDeclaration": 77,
													"src": "5222:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5249:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "5236:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 358,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5236:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5221:33:2"
									},
									"returnParameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "5272:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 361,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5272:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5271:6:2"
									},
									"scope": 403,
									"src": "5189:578:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 404,
							"src": "751:5018:2",
							"usedErrors": [
								130,
								139
							],
							"usedEvents": []
						}
					],
					"src": "115:5655:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							656
						]
					},
					"id": 657,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 405,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 406,
								"nodeType": "StructuredDocumentation",
								"src": "127:67:3",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 656,
							"linearizedBaseContracts": [
								656
							],
							"name": "Address",
							"nameLocation": "203:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 407,
										"nodeType": "StructuredDocumentation",
										"src": "217:94:3",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cd786059",
									"id": 411,
									"name": "AddressInsufficientBalance",
									"nameLocation": "322:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "357:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "349:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:17:3"
									},
									"src": "316:50:3"
								},
								{
									"documentation": {
										"id": 412,
										"nodeType": "StructuredDocumentation",
										"src": "372:75:3",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 416,
									"name": "AddressEmptyCode",
									"nameLocation": "458:16:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "483:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "475:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "474:16:3"
									},
									"src": "452:39:3"
								},
								{
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "497:89:3",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "1425ea42",
									"id": 419,
									"name": "FailedInnerCall",
									"nameLocation": "597:15:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "612:2:3"
									},
									"src": "591:24:3"
								},
								{
									"body": {
										"id": 459,
										"nodeType": "Block",
										"src": "1602:260:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 429,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1624:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$656",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$656",
																		"typeString": "library Address"
																	}
																],
																"id": 428,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1616:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 427,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1616:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1616:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 431,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1630:7:3",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1616:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 432,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 424,
														"src": "1640:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1616:30:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 442,
												"nodeType": "IfStatement",
												"src": "1612:109:3",
												"trueBody": {
													"id": 441,
													"nodeType": "Block",
													"src": "1648:73:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 437,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1704:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$656",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$656",
																					"typeString": "library Address"
																				}
																			],
																			"id": 436,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1696:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 435,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1696:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1696:13:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 434,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 411,
																	"src": "1669:26:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 439,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1669:41:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 440,
															"nodeType": "RevertStatement",
															"src": "1662:48:3"
														}
													]
												}
											},
											{
												"assignments": [
													444,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 444,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1737:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 459,
														"src": "1732:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 443,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1732:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 451,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 449,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1780:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 445,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 422,
																"src": "1750:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 446,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1760:4:3",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1750:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 448,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 447,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 424,
																"src": "1772:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1750:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1750:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1731:52:3"
											},
											{
												"condition": {
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1797:8:3",
													"subExpression": {
														"id": 452,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 444,
														"src": "1798:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 458,
												"nodeType": "IfStatement",
												"src": "1793:63:3",
												"trueBody": {
													"id": 457,
													"nodeType": "Block",
													"src": "1807:49:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 454,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 419,
																	"src": "1828:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 455,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1828:17:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 456,
															"nodeType": "RevertStatement",
															"src": "1821:24:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 420,
										"nodeType": "StructuredDocumentation",
										"src": "621:905:3",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 460,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1540:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1566:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "1550:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 421,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1550:15:3",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1585:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "1577:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 423,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1577:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1549:43:3"
									},
									"returnParameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1602:0:3"
									},
									"scope": 656,
									"src": "1531:331:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 476,
										"nodeType": "Block",
										"src": "2794:62:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 471,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "2833:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 472,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 465,
															"src": "2841:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2847:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 470,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 523,
														"src": "2811:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2811:38:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 469,
												"id": 475,
												"nodeType": "Return",
												"src": "2804:45:3"
											}
										]
									},
									"documentation": {
										"id": 461,
										"nodeType": "StructuredDocumentation",
										"src": "1868:832:3",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 477,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2714:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2735:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "2727:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 462,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2756:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "2743:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 464,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2743:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2726:35:3"
									},
									"returnParameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "2780:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 467,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2780:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2779:14:3"
									},
									"scope": 656,
									"src": "2705:151:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 522,
										"nodeType": "Block",
										"src": "3293:279:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 491,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3315:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$656",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$656",
																		"typeString": "library Address"
																	}
																],
																"id": 490,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3307:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 489,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3307:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 492,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3307:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 493,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3321:7:3",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3307:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 494,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 484,
														"src": "3331:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3307:29:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 504,
												"nodeType": "IfStatement",
												"src": "3303:108:3",
												"trueBody": {
													"id": 503,
													"nodeType": "Block",
													"src": "3338:73:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 499,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3394:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$656",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$656",
																					"typeString": "library Address"
																				}
																			],
																			"id": 498,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3386:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 497,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3386:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 500,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3386:13:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 496,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 411,
																	"src": "3359:26:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 501,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3359:41:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 502,
															"nodeType": "RevertStatement",
															"src": "3352:48:3"
														}
													]
												}
											},
											{
												"assignments": [
													506,
													508
												],
												"declarations": [
													{
														"constant": false,
														"id": 506,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3426:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 522,
														"src": "3421:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 505,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3421:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 508,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3448:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 522,
														"src": "3435:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 507,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3435:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 515,
												"initialValue": {
													"arguments": [
														{
															"id": 513,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "3488:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 509,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 480,
																"src": "3462:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 510,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3469:4:3",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3462:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 512,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 511,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 484,
																"src": "3481:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3462:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3462:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3420:73:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 517,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "3537:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 518,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "3545:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 519,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "3554:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 516,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "3510:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3510:55:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 488,
												"id": 521,
												"nodeType": "Return",
												"src": "3503:62:3"
											}
										]
									},
									"documentation": {
										"id": 478,
										"nodeType": "StructuredDocumentation",
										"src": "2862:313:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 523,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "3189:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3219:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "3211:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 479,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3211:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3240:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "3227:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 481,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3227:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3254:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "3246:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 483,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3246:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3210:50:3"
									},
									"returnParameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "3279:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 486,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3279:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3278:14:3"
									},
									"scope": 656,
									"src": "3180:392:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 548,
										"nodeType": "Block",
										"src": "3811:154:3",
										"statements": [
											{
												"assignments": [
													534,
													536
												],
												"declarations": [
													{
														"constant": false,
														"id": 534,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3827:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 548,
														"src": "3822:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 533,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3822:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 536,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3849:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 548,
														"src": "3836:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 535,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3836:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 541,
												"initialValue": {
													"arguments": [
														{
															"id": 539,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "3881:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 537,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "3863:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 538,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3870:10:3",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3863:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3863:23:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3821:65:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 543,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "3930:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 544,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "3938:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 545,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "3947:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 542,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "3903:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3903:55:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 532,
												"id": 547,
												"nodeType": "Return",
												"src": "3896:62:3"
											}
										]
									},
									"documentation": {
										"id": 524,
										"nodeType": "StructuredDocumentation",
										"src": "3578:128:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 549,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3720:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3747:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "3739:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3768:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "3755:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 527,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3755:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3738:35:3"
									},
									"returnParameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "3797:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 530,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3797:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:14:3"
									},
									"scope": 656,
									"src": "3711:254:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 574,
										"nodeType": "Block",
										"src": "4203:156:3",
										"statements": [
											{
												"assignments": [
													560,
													562
												],
												"declarations": [
													{
														"constant": false,
														"id": 560,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4219:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 574,
														"src": "4214:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 559,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4214:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 562,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4241:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 574,
														"src": "4228:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 561,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4228:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 567,
												"initialValue": {
													"arguments": [
														{
															"id": 565,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 554,
															"src": "4275:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 563,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "4255:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 564,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4262:12:3",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4255:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4255:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4213:67:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 569,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "4324:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 570,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 560,
															"src": "4332:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 571,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 562,
															"src": "4341:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 568,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "4297:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4297:55:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 558,
												"id": 573,
												"nodeType": "Return",
												"src": "4290:62:3"
											}
										]
									},
									"documentation": {
										"id": 550,
										"nodeType": "StructuredDocumentation",
										"src": "3971:130:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "4115:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4144:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "4136:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4136:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4165:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "4152:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 553,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4152:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4135:35:3"
									},
									"returnParameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "4189:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 556,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4189:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4188:14:3"
									},
									"scope": 656,
									"src": "4106:253:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 614,
										"nodeType": "Block",
										"src": "4783:424:3",
										"statements": [
											{
												"condition": {
													"id": 588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4797:8:3",
													"subExpression": {
														"id": 587,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 580,
														"src": "4798:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 612,
													"nodeType": "Block",
													"src": "4857:344:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 603,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 597,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 594,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 582,
																			"src": "5045:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 595,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5056:6:3",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5045:17:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5066:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5045:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 602,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 598,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 578,
																				"src": "5071:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 599,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5078:4:3",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "5071:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 600,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5083:6:3",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5071:18:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 601,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5093:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5071:23:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5045:49:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 609,
															"nodeType": "IfStatement",
															"src": "5041:119:3",
															"trueBody": {
																"id": 608,
																"nodeType": "Block",
																"src": "5096:64:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 605,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 578,
																					"src": "5138:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 604,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 416,
																				"src": "5121:16:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 606,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5121:24:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 607,
																		"nodeType": "RevertStatement",
																		"src": "5114:31:3"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 610,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 582,
																"src": "5180:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 586,
															"id": 611,
															"nodeType": "Return",
															"src": "5173:17:3"
														}
													]
												},
												"id": 613,
												"nodeType": "IfStatement",
												"src": "4793:408:3",
												"trueBody": {
													"id": 593,
													"nodeType": "Block",
													"src": "4807:44:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 590,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 582,
																		"src": "4829:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 589,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 655,
																	"src": "4821:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 591,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4821:19:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 592,
															"nodeType": "ExpressionStatement",
															"src": "4821:19:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 576,
										"nodeType": "StructuredDocumentation",
										"src": "4365:255:3",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."
									},
									"id": 615,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4634:26:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4678:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "4670:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4670:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4699:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "4694:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 579,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4694:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4729:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "4716:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 581,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4716:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4660:85:3"
									},
									"returnParameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "4769:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 584,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4769:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4768:14:3"
									},
									"scope": 656,
									"src": "4625:582:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 636,
										"nodeType": "Block",
										"src": "5509:122:3",
										"statements": [
											{
												"condition": {
													"id": 626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5523:8:3",
													"subExpression": {
														"id": 625,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 618,
														"src": "5524:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 634,
													"nodeType": "Block",
													"src": "5583:42:3",
													"statements": [
														{
															"expression": {
																"id": 632,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 620,
																"src": "5604:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 624,
															"id": 633,
															"nodeType": "Return",
															"src": "5597:17:3"
														}
													]
												},
												"id": 635,
												"nodeType": "IfStatement",
												"src": "5519:106:3",
												"trueBody": {
													"id": 631,
													"nodeType": "Block",
													"src": "5533:44:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 628,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 620,
																		"src": "5555:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 627,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 655,
																	"src": "5547:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 629,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5547:19:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 630,
															"nodeType": "ExpressionStatement",
															"src": "5547:19:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 616,
										"nodeType": "StructuredDocumentation",
										"src": "5213:189:3",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."
									},
									"id": 637,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5416:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5438:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "5433:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 617,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5433:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5460:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "5447:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 619,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5447:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5432:39:3"
									},
									"returnParameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "5495:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 622,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5495:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5494:14:3"
									},
									"scope": 656,
									"src": "5407:224:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 654,
										"nodeType": "Block",
										"src": "5798:461:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 643,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 640,
															"src": "5874:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 644,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5885:6:3",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5874:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 645,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5894:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5874:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 652,
													"nodeType": "Block",
													"src": "6204:49:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 649,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 419,
																	"src": "6225:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6225:17:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 651,
															"nodeType": "RevertStatement",
															"src": "6218:24:3"
														}
													]
												},
												"id": 653,
												"nodeType": "IfStatement",
												"src": "5870:383:3",
												"trueBody": {
													"id": 648,
													"nodeType": "Block",
													"src": "5897:301:3",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "6055:133:3",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6073:40:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "6102:10:3"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "6096:5:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6096:17:3"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "6077:15:3",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6141:2:3",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "6145:10:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "6137:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6137:19:3"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "6158:15:3"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6130:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6130:44:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6130:44:3"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "shanghai",
															"externalReferences": [
																{
																	"declaration": 640,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6102:10:3",
																	"valueSize": 1
																},
																{
																	"declaration": 640,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6145:10:3",
																	"valueSize": 1
																}
															],
															"id": 647,
															"nodeType": "InlineAssembly",
															"src": "6046:142:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 638,
										"nodeType": "StructuredDocumentation",
										"src": "5637:101:3",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."
									},
									"id": 655,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5752:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5773:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "5760:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 639,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5760:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5759:25:3"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5798:0:3"
									},
									"scope": 656,
									"src": "5743:516:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 657,
							"src": "195:6066:3",
							"usedErrors": [
								411,
								416,
								419
							],
							"usedEvents": []
						}
					],
					"src": "101:6161:3"
				},
				"id": 3
			},
			"Arbitrage_Swap.sol": {
				"ast": {
					"absolutePath": "Arbitrage_Swap.sol",
					"exportedSymbols": {
						"Address": [
							656
						],
						"Arbitrage": [
							1083
						],
						"ICurvePool": [
							736
						],
						"IERC20": [
							77
						],
						"IERC20Permit": [
							113
						],
						"ISwapRouter": [
							711
						],
						"SafeERC20": [
							403
						]
					},
					"id": 1084,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 658,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 659,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1084,
							"sourceUnit": 78,
							"src": "59:56:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 660,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1084,
							"sourceUnit": 404,
							"src": "116:65:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ISwapRouter",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 711,
							"linearizedBaseContracts": [
								711
							],
							"name": "ISwapRouter",
							"nameLocation": "222:11:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ISwapRouter.ExactInputSingleParams",
									"id": 677,
									"members": [
										{
											"constant": false,
											"id": 662,
											"mutability": "mutable",
											"name": "tokenIn",
											"nameLocation": "287:7:4",
											"nodeType": "VariableDeclaration",
											"scope": 677,
											"src": "279:15:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 661,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "279:7:4",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 664,
											"mutability": "mutable",
											"name": "tokenOut",
											"nameLocation": "311:8:4",
											"nodeType": "VariableDeclaration",
											"scope": 677,
											"src": "303:16:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 663,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "303:7:4",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 666,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "335:3:4",
											"nodeType": "VariableDeclaration",
											"scope": 677,
											"src": "328:10:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 665,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "328:6:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 668,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "355:9:4",
											"nodeType": "VariableDeclaration",
											"scope": 677,
											"src": "347:17:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 667,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "347:7:4",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 670,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "381:8:4",
											"nodeType": "VariableDeclaration",
											"scope": 677,
											"src": "373:16:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 669,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "373:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 672,
											"mutability": "mutable",
											"name": "amountIn",
											"nameLocation": "406:8:4",
											"nodeType": "VariableDeclaration",
											"scope": 677,
											"src": "398:16:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 671,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "398:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 674,
											"mutability": "mutable",
											"name": "amountOutMinimum",
											"nameLocation": "431:16:4",
											"nodeType": "VariableDeclaration",
											"scope": 677,
											"src": "423:24:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 673,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "423:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 676,
											"mutability": "mutable",
											"name": "sqrtPriceLimitX96",
											"nameLocation": "464:17:4",
											"nodeType": "VariableDeclaration",
											"scope": 677,
											"src": "456:25:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 675,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "456:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactInputSingleParams",
									"nameLocation": "247:22:4",
									"nodeType": "StructDefinition",
									"scope": 711,
									"src": "240:248:4",
									"visibility": "public"
								},
								{
									"functionSelector": "414bf389",
									"id": 685,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactInputSingle",
									"nameLocation": "502:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "551:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "519:38:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactInputSingleParams_$677_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactInputSingleParams"
												},
												"typeName": {
													"id": 679,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 678,
														"name": "ExactInputSingleParams",
														"nameLocations": [
															"519:22:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 677,
														"src": "519:22:4"
													},
													"referencedDeclaration": 677,
													"src": "519:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputSingleParams_$677_storage_ptr",
														"typeString": "struct ISwapRouter.ExactInputSingleParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "518:40:4"
									},
									"returnParameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "614:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "606:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 682,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "606:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "605:19:4"
									},
									"scope": 711,
									"src": "493:132:4",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactOutputSingleParams",
									"id": 702,
									"members": [
										{
											"constant": false,
											"id": 687,
											"mutability": "mutable",
											"name": "tokenIn",
											"nameLocation": "679:7:4",
											"nodeType": "VariableDeclaration",
											"scope": 702,
											"src": "671:15:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 686,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "671:7:4",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 689,
											"mutability": "mutable",
											"name": "tokenOut",
											"nameLocation": "704:8:4",
											"nodeType": "VariableDeclaration",
											"scope": 702,
											"src": "696:16:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 688,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "696:7:4",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 691,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "730:3:4",
											"nodeType": "VariableDeclaration",
											"scope": 702,
											"src": "722:11:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 690,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "722:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 693,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "751:8:4",
											"nodeType": "VariableDeclaration",
											"scope": 702,
											"src": "743:16:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 692,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "743:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 695,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "777:9:4",
											"nodeType": "VariableDeclaration",
											"scope": 702,
											"src": "769:17:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 694,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "769:7:4",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 697,
											"mutability": "mutable",
											"name": "amountOut",
											"nameLocation": "804:9:4",
											"nodeType": "VariableDeclaration",
											"scope": 702,
											"src": "796:17:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 696,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "796:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 699,
											"mutability": "mutable",
											"name": "amountInMaximum",
											"nameLocation": "831:15:4",
											"nodeType": "VariableDeclaration",
											"scope": 702,
											"src": "823:23:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 698,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "823:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 701,
											"mutability": "mutable",
											"name": "sqrtPriceLimitX96",
											"nameLocation": "864:17:4",
											"nodeType": "VariableDeclaration",
											"scope": 702,
											"src": "856:25:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 700,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "856:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactOutputSingleParams",
									"nameLocation": "637:23:4",
									"nodeType": "StructDefinition",
									"scope": 711,
									"src": "630:258:4",
									"visibility": "public"
								},
								{
									"functionSelector": "26a966c4",
									"id": 710,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactOutputSingle",
									"nameLocation": "903:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "954:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "921:39:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactOutputSingleParams_$702_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactOutputSingleParams"
												},
												"typeName": {
													"id": 704,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 703,
														"name": "ExactOutputSingleParams",
														"nameLocations": [
															"921:23:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 702,
														"src": "921:23:4"
													},
													"referencedDeclaration": 702,
													"src": "921:23:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactOutputSingleParams_$702_storage_ptr",
														"typeString": "struct ISwapRouter.ExactOutputSingleParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "920:41:4"
									},
									"returnParameters": {
										"id": 709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1020:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "1012:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 707,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1012:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1011:18:4"
									},
									"scope": 711,
									"src": "894:136:4",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1084,
							"src": "212:820:4",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ICurvePool",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 736,
							"linearizedBaseContracts": [
								736
							],
							"name": "ICurvePool",
							"nameLocation": "1044:10:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "5e0d443f",
									"id": 722,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "get_dy",
									"nameLocation": "1070:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "i",
												"nameLocation": "1084:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "1077:8:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 712,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "1077:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "j",
												"nameLocation": "1094:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "1087:8:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 714,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "1087:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "dx",
												"nameLocation": "1105:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "1097:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 716,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1097:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1076:32:4"
									},
									"returnParameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "1132:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 719,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1132:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1131:9:4"
									},
									"scope": 736,
									"src": "1061:80:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3df02124",
									"id": 735,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exchange",
									"nameLocation": "1155:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "i",
												"nameLocation": "1171:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "1164:8:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 723,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "1164:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "j",
												"nameLocation": "1181:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "1174:8:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 725,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "1174:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "dx",
												"nameLocation": "1192:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "1184:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 727,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1184:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "min_dy",
												"nameLocation": "1204:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "1196:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 729,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1196:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1163:48:4"
									},
									"returnParameters": {
										"id": 734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "1230:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 732,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1230:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1229:9:4"
									},
									"scope": 736,
									"src": "1146:93:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1084,
							"src": "1034:207:4",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Arbitrage",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1083,
							"linearizedBaseContracts": [
								1083
							],
							"name": "Arbitrage",
							"nameLocation": "1253:9:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 740,
									"libraryName": {
										"id": 737,
										"name": "SafeERC20",
										"nameLocations": [
											"1274:9:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 403,
										"src": "1274:9:4"
									},
									"nodeType": "UsingForDirective",
									"src": "1268:27:4",
									"typeName": {
										"id": 739,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 738,
											"name": "IERC20",
											"nameLocations": [
												"1288:6:4"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "1288:6:4"
										},
										"referencedDeclaration": 77,
										"src": "1288:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "735de9f7",
									"id": 743,
									"mutability": "immutable",
									"name": "uniswapRouter",
									"nameLocation": "1330:13:4",
									"nodeType": "VariableDeclaration",
									"scope": 1083,
									"src": "1301:42:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ISwapRouter_$711",
										"typeString": "contract ISwapRouter"
									},
									"typeName": {
										"id": 742,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 741,
											"name": "ISwapRouter",
											"nameLocations": [
												"1301:11:4"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 711,
											"src": "1301:11:4"
										},
										"referencedDeclaration": 711,
										"src": "1301:11:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ISwapRouter_$711",
											"typeString": "contract ISwapRouter"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "218751b2",
									"id": 746,
									"mutability": "immutable",
									"name": "curvePool",
									"nameLocation": "1377:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 1083,
									"src": "1349:37:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ICurvePool_$736",
										"typeString": "contract ICurvePool"
									},
									"typeName": {
										"id": 745,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 744,
											"name": "ICurvePool",
											"nameLocations": [
												"1349:10:4"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 736,
											"src": "1349:10:4"
										},
										"referencedDeclaration": 736,
										"src": "1349:10:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ICurvePool_$736",
											"typeString": "contract ICurvePool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 749,
									"mutability": "constant",
									"name": "SWAP_ROUTER_02",
									"nameLocation": "1410:14:4",
									"nodeType": "VariableDeclaration",
									"scope": 1083,
									"src": "1393:76:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 747,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1393:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307845353932343237413041456365393244653345646565314631384530313537433035383631353634",
										"id": 748,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1427:42:4",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xE592427A0AEce92De3Edee1F18E0157C05861564"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 752,
									"mutability": "constant",
									"name": "WETH",
									"nameLocation": "1516:4:4",
									"nodeType": "VariableDeclaration",
									"scope": 1083,
									"src": "1499:66:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 750,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1499:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307843303261614133396232323346453844304130653543344632376541443930383343373536436332",
										"id": 751,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1523:42:4",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 755,
									"mutability": "constant",
									"name": "USDC",
									"nameLocation": "1588:4:4",
									"nodeType": "VariableDeclaration",
									"scope": 1083,
									"src": "1571:66:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 753,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1571:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307841306238363939316336323138623336633164313944346132653945623063453336303665423438",
										"id": 754,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1595:42:4",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 761,
									"mutability": "constant",
									"name": "weth",
									"nameLocation": "1668:4:4",
									"nodeType": "VariableDeclaration",
									"scope": 1083,
									"src": "1644:43:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$77",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 757,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 756,
											"name": "IERC20",
											"nameLocations": [
												"1644:6:4"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "1644:6:4"
										},
										"referencedDeclaration": 77,
										"src": "1644:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"value": {
										"arguments": [
											{
												"id": 759,
												"name": "WETH",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 752,
												"src": "1682:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 758,
											"name": "IERC20",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 77,
											"src": "1675:6:4",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
												"typeString": "type(contract IERC20)"
											}
										},
										"id": 760,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1675:12:4",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 767,
									"mutability": "constant",
									"name": "usdc",
									"nameLocation": "1717:4:4",
									"nodeType": "VariableDeclaration",
									"scope": 1083,
									"src": "1693:43:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$77",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 763,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 762,
											"name": "IERC20",
											"nameLocations": [
												"1693:6:4"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "1693:6:4"
										},
										"referencedDeclaration": 77,
										"src": "1693:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"value": {
										"arguments": [
											{
												"id": 765,
												"name": "USDC",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 755,
												"src": "1731:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 764,
											"name": "IERC20",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 77,
											"src": "1724:6:4",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
												"typeString": "type(contract IERC20)"
											}
										},
										"id": 766,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1724:12:4",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 786,
										"nodeType": "Block",
										"src": "1798:104:4",
										"statements": [
											{
												"expression": {
													"id": 778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 774,
														"name": "uniswapRouter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 743,
														"src": "1808:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISwapRouter_$711",
															"typeString": "contract ISwapRouter"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 776,
																"name": "_uniswapRouter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 769,
																"src": "1836:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 775,
															"name": "ISwapRouter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 711,
															"src": "1824:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ISwapRouter_$711_$",
																"typeString": "type(contract ISwapRouter)"
															}
														},
														"id": 777,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1824:27:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISwapRouter_$711",
															"typeString": "contract ISwapRouter"
														}
													},
													"src": "1808:43:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISwapRouter_$711",
														"typeString": "contract ISwapRouter"
													}
												},
												"id": 779,
												"nodeType": "ExpressionStatement",
												"src": "1808:43:4"
											},
											{
												"expression": {
													"id": 784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 780,
														"name": "curvePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 746,
														"src": "1861:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ICurvePool_$736",
															"typeString": "contract ICurvePool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 782,
																"name": "_curvePool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 771,
																"src": "1884:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 781,
															"name": "ICurvePool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 736,
															"src": "1873:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ICurvePool_$736_$",
																"typeString": "type(contract ICurvePool)"
															}
														},
														"id": 783,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1873:22:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ICurvePool_$736",
															"typeString": "contract ICurvePool"
														}
													},
													"src": "1861:34:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ICurvePool_$736",
														"typeString": "contract ICurvePool"
													}
												},
												"id": 785,
												"nodeType": "ExpressionStatement",
												"src": "1861:34:4"
											}
										]
									},
									"id": 787,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "_uniswapRouter",
												"nameLocation": "1763:14:4",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "1755:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 768,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1755:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "_curvePool",
												"nameLocation": "1787:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "1779:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 770,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1779:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1754:44:4"
									},
									"returnParameters": {
										"id": 773,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1798:0:4"
									},
									"scope": 1083,
									"src": "1743:159:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 841,
										"nodeType": "Block",
										"src": "1999:560:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 797,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2027:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 798,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2031:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2027:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 801,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2047:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Arbitrage_$1083",
																		"typeString": "contract Arbitrage"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Arbitrage_$1083",
																		"typeString": "contract Arbitrage"
																	}
																],
																"id": 800,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2039:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 799,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2039:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 802,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2039:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 803,
															"name": "usdcamountin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 789,
															"src": "2054:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 794,
															"name": "usdc",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 767,
															"src": "2009:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 796,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2014:12:4",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 76,
														"src": "2009:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2009:58:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 805,
												"nodeType": "ExpressionStatement",
												"src": "2009:58:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 811,
																	"name": "uniswapRouter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 743,
																	"src": "2098:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ISwapRouter_$711",
																		"typeString": "contract ISwapRouter"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ISwapRouter_$711",
																		"typeString": "contract ISwapRouter"
																	}
																],
																"id": 810,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2090:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 809,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2090:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 812,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2090:22:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 813,
															"name": "usdcamountin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 789,
															"src": "2114:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 806,
															"name": "usdc",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 767,
															"src": "2077:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 808,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2082:7:4",
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 64,
														"src": "2077:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2077:50:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 815,
												"nodeType": "ExpressionStatement",
												"src": "2077:50:4"
											},
											{
												"assignments": [
													820
												],
												"declarations": [
													{
														"constant": false,
														"id": 820,
														"mutability": "mutable",
														"name": "params",
														"nameLocation": "2180:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 841,
														"src": "2138:48:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ExactInputSingleParams_$677_memory_ptr",
															"typeString": "struct ISwapRouter.ExactInputSingleParams"
														},
														"typeName": {
															"id": 819,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 818,
																"name": "ISwapRouter.ExactInputSingleParams",
																"nameLocations": [
																	"2138:11:4",
																	"2150:22:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 677,
																"src": "2138:34:4"
															},
															"referencedDeclaration": 677,
															"src": "2138:34:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ExactInputSingleParams_$677_storage_ptr",
																"typeString": "struct ISwapRouter.ExactInputSingleParams"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 834,
												"initialValue": {
													"arguments": [
														{
															"id": 823,
															"name": "USDC",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "2247:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 824,
															"name": "WETH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 752,
															"src": "2275:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "33303030",
															"id": 825,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2298:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3000_by_1",
																"typeString": "int_const 3000"
															},
															"value": "3000"
														},
														{
															"expression": {
																"id": 826,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2327:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 827,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2331:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2327:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 828,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2361:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 829,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2367:9:4",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "2361:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 830,
															"name": "usdcamountin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 789,
															"src": "2400:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 831,
															"name": "minETHamountout",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "2444:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 832,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2492:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_3000_by_1",
																"typeString": "int_const 3000"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"expression": {
															"id": 821,
															"name": "ISwapRouter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 711,
															"src": "2189:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ISwapRouter_$711_$",
																"typeString": "type(contract ISwapRouter)"
															}
														},
														"id": 822,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2201:22:4",
														"memberName": "ExactInputSingleParams",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 677,
														"src": "2189:34:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_ExactInputSingleParams_$677_storage_ptr_$",
															"typeString": "type(struct ISwapRouter.ExactInputSingleParams storage pointer)"
														}
													},
													"id": 833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [
														"2238:7:4",
														"2265:8:4",
														"2293:3:4",
														"2316:9:4",
														"2351:8:4",
														"2390:8:4",
														"2426:16:4",
														"2473:17:4"
													],
													"names": [
														"tokenIn",
														"tokenOut",
														"fee",
														"recipient",
														"deadline",
														"amountIn",
														"amountOutMinimum",
														"sqrtPriceLimitX96"
													],
													"nodeType": "FunctionCall",
													"src": "2189:315:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputSingleParams_$677_memory_ptr",
														"typeString": "struct ISwapRouter.ExactInputSingleParams memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2138:366:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 838,
															"name": "params",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 820,
															"src": "2545:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ExactInputSingleParams_$677_memory_ptr",
																"typeString": "struct ISwapRouter.ExactInputSingleParams memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_ExactInputSingleParams_$677_memory_ptr",
																"typeString": "struct ISwapRouter.ExactInputSingleParams memory"
															}
														],
														"expression": {
															"id": 835,
															"name": "uniswapRouter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 743,
															"src": "2514:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISwapRouter_$711",
																"typeString": "contract ISwapRouter"
															}
														},
														"id": 837,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2528:16:4",
														"memberName": "exactInputSingle",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 685,
														"src": "2514:30:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$_t_struct$_ExactInputSingleParams_$677_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct ISwapRouter.ExactInputSingleParams memory) payable external returns (uint256)"
														}
													},
													"id": 839,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2514:38:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 840,
												"nodeType": "ExpressionStatement",
												"src": "2514:38:4"
											}
										]
									},
									"functionSelector": "e4eaab96",
									"id": 842,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactInputSingleHop",
									"nameLocation": "1921:23:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "usdcamountin",
												"nameLocation": "1953:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "1945:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 788,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1945:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 791,
												"mutability": "mutable",
												"name": "minETHamountout",
												"nameLocation": "1975:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "1967:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 790,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1967:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1944:47:4"
									},
									"returnParameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1999:0:4"
									},
									"scope": 1083,
									"src": "1912:647:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 858,
										"nodeType": "Block",
										"src": "2636:129:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 852,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2727:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "31",
															"id": 853,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2730:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														{
															"id": 854,
															"name": "usdcAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 844,
															"src": "2733:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 855,
															"name": "minEthAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 846,
															"src": "2745:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 849,
															"name": "curvePool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 746,
															"src": "2708:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ICurvePool_$736",
																"typeString": "contract ICurvePool"
															}
														},
														"id": 851,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2718:8:4",
														"memberName": "exchange",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 735,
														"src": "2708:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_int128_$_t_int128_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (int128,int128,uint256,uint256) external returns (uint256)"
														}
													},
													"id": 856,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2708:50:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 857,
												"nodeType": "ExpressionStatement",
												"src": "2708:50:4"
											}
										]
									},
									"functionSelector": "04907bbb",
									"id": 859,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buyEthOnCurve",
									"nameLocation": "2573:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 844,
												"mutability": "mutable",
												"name": "usdcAmount",
												"nameLocation": "2595:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 859,
												"src": "2587:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 843,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2587:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 846,
												"mutability": "mutable",
												"name": "minEthAmount",
												"nameLocation": "2615:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 859,
												"src": "2607:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 845,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2607:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2586:42:4"
									},
									"returnParameters": {
										"id": 848,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2636:0:4"
									},
									"scope": 1083,
									"src": "2564:201:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 913,
										"nodeType": "Block",
										"src": "2858:569:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 869,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2886:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 870,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2890:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2886:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 873,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2906:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Arbitrage_$1083",
																		"typeString": "contract Arbitrage"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Arbitrage_$1083",
																		"typeString": "contract Arbitrage"
																	}
																],
																"id": 872,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2898:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 871,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2898:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 874,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2898:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 875,
															"name": "maxUSDCamountin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 863,
															"src": "2913:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 866,
															"name": "weth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 761,
															"src": "2868:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 868,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2873:12:4",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 76,
														"src": "2868:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 876,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2868:61:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 877,
												"nodeType": "ExpressionStatement",
												"src": "2868:61:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 883,
																	"name": "uniswapRouter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 743,
																	"src": "2960:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ISwapRouter_$711",
																		"typeString": "contract ISwapRouter"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ISwapRouter_$711",
																		"typeString": "contract ISwapRouter"
																	}
																],
																"id": 882,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2952:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 881,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2952:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 884,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2952:22:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 885,
															"name": "maxUSDCamountin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 863,
															"src": "2976:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 878,
															"name": "weth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 761,
															"src": "2939:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 880,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2944:7:4",
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 64,
														"src": "2939:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 886,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2939:53:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 887,
												"nodeType": "ExpressionStatement",
												"src": "2939:53:4"
											},
											{
												"assignments": [
													892
												],
												"declarations": [
													{
														"constant": false,
														"id": 892,
														"mutability": "mutable",
														"name": "params",
														"nameLocation": "3046:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 913,
														"src": "3003:49:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ExactOutputSingleParams_$702_memory_ptr",
															"typeString": "struct ISwapRouter.ExactOutputSingleParams"
														},
														"typeName": {
															"id": 891,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 890,
																"name": "ISwapRouter.ExactOutputSingleParams",
																"nameLocations": [
																	"3003:11:4",
																	"3015:23:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 702,
																"src": "3003:35:4"
															},
															"referencedDeclaration": 702,
															"src": "3003:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ExactOutputSingleParams_$702_storage_ptr",
																"typeString": "struct ISwapRouter.ExactOutputSingleParams"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 906,
												"initialValue": {
													"arguments": [
														{
															"id": 895,
															"name": "USDC",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "3114:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 896,
															"name": "WETH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 752,
															"src": "3142:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "33303030",
															"id": 897,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3165:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3000_by_1",
																"typeString": "int_const 3000"
															},
															"value": "3000"
														},
														{
															"expression": {
																"id": 898,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3194:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 899,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3198:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3194:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 900,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "3228:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 901,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3234:9:4",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "3228:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 902,
															"name": "ethamountout",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 861,
															"src": "3268:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 903,
															"name": "maxUSDCamountin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 863,
															"src": "3311:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 904,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3359:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_3000_by_1",
																"typeString": "int_const 3000"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"expression": {
															"id": 893,
															"name": "ISwapRouter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 711,
															"src": "3055:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ISwapRouter_$711_$",
																"typeString": "type(contract ISwapRouter)"
															}
														},
														"id": 894,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3067:23:4",
														"memberName": "ExactOutputSingleParams",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 702,
														"src": "3055:35:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_ExactOutputSingleParams_$702_storage_ptr_$",
															"typeString": "type(struct ISwapRouter.ExactOutputSingleParams storage pointer)"
														}
													},
													"id": 905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [
														"3105:7:4",
														"3132:8:4",
														"3160:3:4",
														"3183:9:4",
														"3218:8:4",
														"3257:9:4",
														"3294:15:4",
														"3340:17:4"
													],
													"names": [
														"tokenIn",
														"tokenOut",
														"fee",
														"recipient",
														"deadline",
														"amountOut",
														"amountInMaximum",
														"sqrtPriceLimitX96"
													],
													"nodeType": "FunctionCall",
													"src": "3055:316:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactOutputSingleParams_$702_memory_ptr",
														"typeString": "struct ISwapRouter.ExactOutputSingleParams memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3003:368:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 910,
															"name": "params",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 892,
															"src": "3413:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ExactOutputSingleParams_$702_memory_ptr",
																"typeString": "struct ISwapRouter.ExactOutputSingleParams memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_ExactOutputSingleParams_$702_memory_ptr",
																"typeString": "struct ISwapRouter.ExactOutputSingleParams memory"
															}
														],
														"expression": {
															"id": 907,
															"name": "uniswapRouter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 743,
															"src": "3381:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISwapRouter_$711",
																"typeString": "contract ISwapRouter"
															}
														},
														"id": 909,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3395:17:4",
														"memberName": "exactOutputSingle",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 710,
														"src": "3381:31:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$_t_struct$_ExactOutputSingleParams_$702_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct ISwapRouter.ExactOutputSingleParams memory) payable external returns (uint256)"
														}
													},
													"id": 911,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3381:39:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 912,
												"nodeType": "ExpressionStatement",
												"src": "3381:39:4"
											}
										]
									},
									"functionSelector": "c9eb5e5a",
									"id": 914,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactOutputSingleHop",
									"nameLocation": "2779:24:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "ethamountout",
												"nameLocation": "2812:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 914,
												"src": "2804:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 860,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2804:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 863,
												"mutability": "mutable",
												"name": "maxUSDCamountin",
												"nameLocation": "2834:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 914,
												"src": "2826:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 862,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2826:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2803:47:4"
									},
									"returnParameters": {
										"id": 865,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2858:0:4"
									},
									"scope": 1083,
									"src": "2770:657:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 940,
										"nodeType": "Block",
										"src": "3505:121:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 926,
																	"name": "curvePool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 746,
																	"src": "3536:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ICurvePool_$736",
																		"typeString": "contract ICurvePool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ICurvePool_$736",
																		"typeString": "contract ICurvePool"
																	}
																],
																"id": 925,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3528:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 924,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3528:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 927,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3528:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 928,
															"name": "minUsdcAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 918,
															"src": "3548:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 921,
															"name": "weth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 761,
															"src": "3515:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 923,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3520:7:4",
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 64,
														"src": "3515:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3515:47:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 930,
												"nodeType": "ExpressionStatement",
												"src": "3515:47:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 934,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3591:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														{
															"hexValue": "30",
															"id": 935,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3594:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 936,
															"name": "ethAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 916,
															"src": "3597:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 937,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3608:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"expression": {
															"id": 931,
															"name": "curvePool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 746,
															"src": "3572:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ICurvePool_$736",
																"typeString": "contract ICurvePool"
															}
														},
														"id": 933,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3582:8:4",
														"memberName": "exchange",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 735,
														"src": "3572:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_int128_$_t_int128_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (int128,int128,uint256,uint256) external returns (uint256)"
														}
													},
													"id": 938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:38:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 939,
												"nodeType": "ExpressionStatement",
												"src": "3572:38:4"
											}
										]
									},
									"functionSelector": "87b8d225",
									"id": 941,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sellEthonCurve",
									"nameLocation": "3441:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 916,
												"mutability": "mutable",
												"name": "ethAmount",
												"nameLocation": "3464:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "3456:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 915,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3456:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "minUsdcAmount",
												"nameLocation": "3483:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "3475:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 917,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3475:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3455:42:4"
									},
									"returnParameters": {
										"id": 920,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3505:0:4"
									},
									"scope": 1083,
									"src": "3432:194:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1030,
										"nodeType": "Block",
										"src": "3694:865:4",
										"statements": [
											{
												"assignments": [
													947
												],
												"declarations": [
													{
														"constant": false,
														"id": 947,
														"mutability": "mutable",
														"name": "allowance",
														"nameLocation": "3712:9:4",
														"nodeType": "VariableDeclaration",
														"scope": 1030,
														"src": "3704:17:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 946,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3704:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 957,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 950,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3739:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 951,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3743:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3739:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 954,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3759:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Arbitrage_$1083",
																		"typeString": "contract Arbitrage"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Arbitrage_$1083",
																		"typeString": "contract Arbitrage"
																	}
																],
																"id": 953,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3751:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 952,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3751:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 955,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3751:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 948,
															"name": "usdc",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 767,
															"src": "3724:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 949,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3729:9:4",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 54,
														"src": "3724:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 956,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3724:41:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3704:61:4"
											},
											{
												"assignments": [
													959
												],
												"declarations": [
													{
														"constant": false,
														"id": 959,
														"mutability": "mutable",
														"name": "balance",
														"nameLocation": "3783:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1030,
														"src": "3775:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 958,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3775:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 965,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 962,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3808:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 963,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3812:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3808:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 960,
															"name": "usdc",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 767,
															"src": "3793:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 961,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3798:9:4",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 34,
														"src": "3793:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 964,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3793:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3775:44:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 969,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 967,
																"name": "allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 947,
																"src": "3838:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 968,
																"name": "usdcAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 943,
																"src": "3851:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3838:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c6c6f77616e636520746f6f206c6f77",
															"id": 970,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3863:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9df0e97ee766a49f7ac27fed355dd1fab458cd8ac6dddadb84c6cba9b65af284",
																"typeString": "literal_string \"Allowance too low\""
															},
															"value": "Allowance too low"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9df0e97ee766a49f7ac27fed355dd1fab458cd8ac6dddadb84c6cba9b65af284",
																"typeString": "literal_string \"Allowance too low\""
															}
														],
														"id": 966,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3830:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3830:53:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 972,
												"nodeType": "ExpressionStatement",
												"src": "3830:53:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 976,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 974,
																"name": "balance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 959,
																"src": "3901:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 975,
																"name": "usdcAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 943,
																"src": "3912:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3901:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e6365",
															"id": 977,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3924:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															},
															"value": "Insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															}
														],
														"id": 973,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3893:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3893:54:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 979,
												"nodeType": "ExpressionStatement",
												"src": "3893:54:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 983,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3976:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 984,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3980:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3976:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 987,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3996:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Arbitrage_$1083",
																		"typeString": "contract Arbitrage"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Arbitrage_$1083",
																		"typeString": "contract Arbitrage"
																	}
																],
																"id": 986,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3988:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 985,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3988:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 988,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3988:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 989,
															"name": "usdcAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 943,
															"src": "4003:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 980,
															"name": "usdc",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 767,
															"src": "3958:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 982,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3963:12:4",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 76,
														"src": "3958:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 990,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3958:56:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 991,
												"nodeType": "ExpressionStatement",
												"src": "3958:56:4"
											},
											{
												"assignments": [
													993
												],
												"declarations": [
													{
														"constant": false,
														"id": 993,
														"mutability": "mutable",
														"name": "uniswap_price",
														"nameLocation": "4032:13:4",
														"nodeType": "VariableDeclaration",
														"scope": 1030,
														"src": "4024:21:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 992,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4024:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 997,
												"initialValue": {
													"arguments": [
														{
															"id": 995,
															"name": "usdcAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 943,
															"src": "4067:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 994,
														"name": "getAmountonUniswap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1067,
														"src": "4048:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) returns (uint256)"
														}
													},
													"id": 996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4048:30:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4024:54:4"
											},
											{
												"assignments": [
													999
												],
												"declarations": [
													{
														"constant": false,
														"id": 999,
														"mutability": "mutable",
														"name": "curve_price",
														"nameLocation": "4096:11:4",
														"nodeType": "VariableDeclaration",
														"scope": 1030,
														"src": "4088:19:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 998,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4088:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1003,
												"initialValue": {
													"arguments": [
														{
															"id": 1001,
															"name": "usdcAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 943,
															"src": "4127:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1000,
														"name": "getAmountonCurve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1082,
														"src": "4110:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1002,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4110:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4088:50:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1004,
														"name": "uniswap_price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 993,
														"src": "4153:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1005,
														"name": "curve_price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 999,
														"src": "4169:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4153:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1028,
													"nodeType": "Block",
													"src": "4405:131:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1019,
																		"name": "usdcAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 943,
																		"src": "4443:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1020,
																		"name": "uniswap_price",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 993,
																		"src": "4455:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1018,
																	"name": "swapExactInputSingleHop",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 842,
																	"src": "4419:23:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256)"
																	}
																},
																"id": 1021,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4419:50:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1022,
															"nodeType": "ExpressionStatement",
															"src": "4419:50:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1024,
																		"name": "uniswap_price",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 993,
																		"src": "4498:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1025,
																		"name": "usdcAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 943,
																		"src": "4513:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1023,
																	"name": "sellEthonCurve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 941,
																	"src": "4483:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256)"
																	}
																},
																"id": 1026,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4483:41:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1027,
															"nodeType": "ExpressionStatement",
															"src": "4483:41:4"
														}
													]
												},
												"id": 1029,
												"nodeType": "IfStatement",
												"src": "4149:387:4",
												"trueBody": {
													"id": 1017,
													"nodeType": "Block",
													"src": "4181:211:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1008,
																		"name": "usdcAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 943,
																		"src": "4281:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1009,
																		"name": "curve_price",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 999,
																		"src": "4293:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1007,
																	"name": "buyEthOnCurve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 859,
																	"src": "4267:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256)"
																	}
																},
																"id": 1010,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4267:38:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1011,
															"nodeType": "ExpressionStatement",
															"src": "4267:38:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1013,
																		"name": "usdcAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 943,
																		"src": "4344:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1014,
																		"name": "curve_price",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 999,
																		"src": "4356:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1012,
																	"name": "swapExactOutputSingleHop",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 914,
																	"src": "4319:24:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256)"
																	}
																},
																"id": 1015,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4319:49:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1016,
															"nodeType": "ExpressionStatement",
															"src": "4319:49:4"
														}
													]
												}
											}
										]
									},
									"functionSelector": "d22cc067",
									"id": 1031,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "exchangeArbitrage",
									"nameLocation": "3640:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 943,
												"mutability": "mutable",
												"name": "usdcAmount",
												"nameLocation": "3666:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "3658:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 942,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3658:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3657:20:4"
									},
									"returnParameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3694:0:4"
									},
									"scope": 1083,
									"src": "3631:928:4",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1066,
										"nodeType": "Block",
										"src": "4637:611:4",
										"statements": [
											{
												"assignments": [
													1042
												],
												"declarations": [
													{
														"constant": false,
														"id": 1042,
														"mutability": "mutable",
														"name": "params",
														"nameLocation": "4689:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 1066,
														"src": "4647:48:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ExactInputSingleParams_$677_memory_ptr",
															"typeString": "struct ISwapRouter.ExactInputSingleParams"
														},
														"typeName": {
															"id": 1041,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1040,
																"name": "ISwapRouter.ExactInputSingleParams",
																"nameLocations": [
																	"4647:11:4",
																	"4659:22:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 677,
																"src": "4647:34:4"
															},
															"referencedDeclaration": 677,
															"src": "4647:34:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ExactInputSingleParams_$677_storage_ptr",
																"typeString": "struct ISwapRouter.ExactInputSingleParams"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1056,
												"initialValue": {
													"arguments": [
														{
															"id": 1045,
															"name": "USDC",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "4771:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1046,
															"name": "WETH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 752,
															"src": "4802:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "33303030",
															"id": 1047,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4828:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3000_by_1",
																"typeString": "int_const 3000"
															},
															"value": "3000"
														},
														{
															"expression": {
																"id": 1048,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4860:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1049,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4864:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4860:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1050,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "4897:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1051,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4903:9:4",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "4897:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1052,
															"name": "USDC_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1033,
															"src": "4939:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1053,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4985:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														{
															"hexValue": "30",
															"id": 1054,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5022:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_3000_by_1",
																"typeString": "int_const 3000"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"expression": {
															"id": 1043,
															"name": "ISwapRouter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 711,
															"src": "4710:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ISwapRouter_$711_$",
																"typeString": "type(contract ISwapRouter)"
															}
														},
														"id": 1044,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4722:22:4",
														"memberName": "ExactInputSingleParams",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 677,
														"src": "4710:34:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_ExactInputSingleParams_$677_storage_ptr_$",
															"typeString": "type(struct ISwapRouter.ExactInputSingleParams storage pointer)"
														}
													},
													"id": 1055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [
														"4762:7:4",
														"4792:8:4",
														"4823:3:4",
														"4849:9:4",
														"4887:8:4",
														"4929:8:4",
														"4967:16:4",
														"5003:17:4"
													],
													"names": [
														"tokenIn",
														"tokenOut",
														"fee",
														"recipient",
														"deadline",
														"amountIn",
														"amountOutMinimum",
														"sqrtPriceLimitX96"
													],
													"nodeType": "FunctionCall",
													"src": "4710:328:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputSingleParams_$677_memory_ptr",
														"typeString": "struct ISwapRouter.ExactInputSingleParams memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4647:391:4"
											},
											{
												"assignments": [
													1058
												],
												"declarations": [
													{
														"constant": false,
														"id": 1058,
														"mutability": "mutable",
														"name": "amountOut",
														"nameLocation": "5114:9:4",
														"nodeType": "VariableDeclaration",
														"scope": 1066,
														"src": "5106:17:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1057,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5106:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1063,
												"initialValue": {
													"arguments": [
														{
															"id": 1061,
															"name": "params",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1042,
															"src": "5157:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ExactInputSingleParams_$677_memory_ptr",
																"typeString": "struct ISwapRouter.ExactInputSingleParams memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_ExactInputSingleParams_$677_memory_ptr",
																"typeString": "struct ISwapRouter.ExactInputSingleParams memory"
															}
														],
														"expression": {
															"id": 1059,
															"name": "uniswapRouter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 743,
															"src": "5126:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISwapRouter_$711",
																"typeString": "contract ISwapRouter"
															}
														},
														"id": 1060,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5140:16:4",
														"memberName": "exactInputSingle",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 685,
														"src": "5126:30:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$_t_struct$_ExactInputSingleParams_$677_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct ISwapRouter.ExactInputSingleParams memory) payable external returns (uint256)"
														}
													},
													"id": 1062,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5126:38:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5106:58:4"
											},
											{
												"expression": {
													"id": 1064,
													"name": "amountOut",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1058,
													"src": "5233:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1037,
												"id": 1065,
												"nodeType": "Return",
												"src": "5226:16:4"
											}
										]
									},
									"functionSelector": "c477b581",
									"id": 1067,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountonUniswap",
									"nameLocation": "4574:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "USDC_amount",
												"nameLocation": "4601:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "4593:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1032,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4593:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4592:21:4"
									},
									"returnParameters": {
										"id": 1037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1036,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "4629:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1035,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4629:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4628:9:4"
									},
									"scope": 1083,
									"src": "4565:683:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1081,
										"nodeType": "Block",
										"src": "5327:74:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 1076,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5361:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "31",
															"id": 1077,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5364:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														{
															"id": 1078,
															"name": "usdcamount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1069,
															"src": "5367:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1074,
															"name": "curvePool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 746,
															"src": "5344:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ICurvePool_$736",
																"typeString": "contract ICurvePool"
															}
														},
														"id": 1075,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5354:6:4",
														"memberName": "get_dy",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 722,
														"src": "5344:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_int128_$_t_int128_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (int128,int128,uint256) view external returns (uint256)"
														}
													},
													"id": 1079,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5344:34:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1073,
												"id": 1080,
												"nodeType": "Return",
												"src": "5337:41:4"
											}
										]
									},
									"functionSelector": "1540e747",
									"id": 1082,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountonCurve",
									"nameLocation": "5261:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1070,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "usdcamount",
												"nameLocation": "5286:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "5278:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1068,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5278:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5277:20:4"
									},
									"returnParameters": {
										"id": 1073,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1072,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "5319:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1071,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5319:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5318:9:4"
									},
									"scope": 1083,
									"src": "5252:149:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1084,
							"src": "1244:4165:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:5548:4"
				},
				"id": 4
			}
		}
	}
}